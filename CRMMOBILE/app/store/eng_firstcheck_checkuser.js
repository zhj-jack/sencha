/*
 * File: app/store/eng_firstcheck_checkuser.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.store.eng_firstcheck_checkuser', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.Field'
    ],

    config: {
        storeId: 'eng_firstcheck_checkuser',
        fields: [
            {
                name: 'department'
            },
            {
                name: 'departmentid'
            },
            {
                name: 'userid'
            },
            {
                name: 'username'
            },
            {
                name: 'usertype'
            },
            {
                name: 'usertypename'
            }
        ]
    },

    addOrUpdate: function(record) {
        var me = this;
        if(!record){
            return false;
        }
        var count = 0;
        var usertypename = {"0":"负责人","1":"检验人员","2":"实习生","3":"其他人员"};
        var data = this.getData();
        for(var i =0,length = data.length; i<length;i++){
            if(data.items[i].data.userid===record.userid){//更新
        //         data.items[i].data.userid = record.userid;
                data.items[i].data.department = record.department;
                data.items[i].data.departmentid = record.departmentid;
                data.items[i].data.username = record.username;
                data.items[i].data.usertype = record.usertype;
                data.items[i].data.usertypename = usertypename[record.usertype];
                return;
            }
        }

        me.add(record);

        // return count!==0;//不存在
        // if(count!==0){
        //    me.updaterecord(this,record);
        // }else{
        //    me.add(record);
        // }
    },

    isExist: function(userid) {
        if(!userid){
            return false;
        }
        var data = this.getData();
        for(var i =0,length = data.length; i<length;i++){
            if(data.items[i].data.userid===userid){
                return true;
            }
        }
        return false;
    },

    getPrincipal: function() {

        var count = 0;
        var data = this.getData();
        for(var i =0,length = data.length; i<length;i++){
            if(data.items[i].data.usertype==='0'||data.items[i].data.usertype===0){
                count++;
            }
        }
        return count;
    }

});