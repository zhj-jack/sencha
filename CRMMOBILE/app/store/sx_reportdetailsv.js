/*
 * File: app/store/sx_reportdetailsv.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.store.sx_reportdetailsv', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.Field'
    ],

    config: {
        storeId: 'sx_reportdetailsv',
        fields: [
            {
                name: 'userid'
            },
            {
                name: 'rpno'
            },
            {
                name: 'state'
            },
            {
                name: 'remark'
            },
            {
                name: 'field39'
            },
            {
                name: 'prono'
            },
            {
                name: 'projectname'
            },
            {
                name: 'trno'
            },
            {
                name: 'unitaddress'
            },
            {
                name: 'unitlinker'
            },
            {
                name: 'unitlinkephone'
            },
            {
                name: 'accepttime'
            },
            {
                name: 'setouttime'
            },
            {
                name: 'reachtime'
            },
            {
                name: 'finishtime'
            },
            {
                name: 'incomingman'
            },
            {
                name: 'repairman'
            },
            {
                name: 'repairmandept'
            },
            {
                name: 'istrap'
            },
            {
                name: 'traptime'
            },
            {
                name: 'trcontent'
            },
            {
                name: 'sitecondition'
            },
            {
                name: 'surveyproject'
            },
            {
                name: 'dealresult'
            },
            {
                name: 'faultproperty'
            },
            {
                name: 'rpuser'
            },
            {
                name: 'rptime'
            },
            {
                name: 'approvalby'
            },
            {
                name: 'approvalbydept'
            },
            {
                name: 'reason'
            },
            {
                name: 'analysis'
            },
            {
                name: 'partslist'
            }
        ]
    },

    updateDat: function(onSuccess, onFailure, parm) {
        var me = this;
        console.log('调用故障报告书处理接口：');
        console.log('.............+:'+parm.rp.rpno);
        if(parm.state!=='0'&&parm.state!=='1'){
            if(global.isWorklight()) {
                var url = '/adapters/rpt/api/1.0/rptauditopration';
                callPostAdapter(
                    url, parm,
                    function(ret) {
                       if(ret.status.code===200) {
                           onSuccess(parm.rp.rpno);
                       } else {
                           console.log(ret.status.info);
                           onFailure(ret.status.info);
                       }
                    },
                    onFailure);
            } else {
                onSuccess(parm.rp.rpno);
            }
        }else{
            if(global.isWorklight()) {
                var url = '/adapters/rpt/api/1.0/rptuporsave';
                callPostAdapter(
                    url, parm,
                    function(ret) {
                       if(ret.status.code===200) {
                           onSuccess(parm.rp.rpno);
                       } else {
                           console.log(ret.status.info);
                           onFailure(ret.status.info);
                       }
                    },
                    onFailure);
            } else {
                onSuccess(parm.rp.rpno);
            }
        }
    }

});