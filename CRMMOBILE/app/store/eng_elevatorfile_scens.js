/*
 * File: app/store/eng_elevatorfile_scens.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.store.eng_elevatorfile_scens', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.Field'
    ],

    config: {
        storeId: 'eng_elevatorfile_scens',
        fields: [
            {
                name: 'prono'
            },
            {
                name: 'equno'
            },
            {
                name: 'elevatorno'
            },
            {
                name: 'r3'
            },
            {
                name: 'allowno'
            },
            {
                name: 'r2'
            },
            {
                name: 'useraddress'
            },
            {
                name: 'r4'
            },
            {
                name: 'r5'
            },
            {
                name: 'r9'
            },
            {
                name: 'r7'
            },
            {
                name: 'r8'
            },
            {
                name: 'eleuseaddress'
            },
            {
                name: 'domainid'
            },
            {
                name: 'provinciallevelid'
            },
            {
                name: 'citylevelid'
            },
            {
                name: 'countylevelid'
            },
            {
                name: 'liftloaction'
            },
            {
                name: 'r1'
            },
            {
                name: 'leafacdate'
            },
            {
                name: 'useplace'
            },
            {
                name: 'userunitid'
            },
            {
                name: 'userlinkman'
            },
            {
                name: 'userlinkphone'
            },
            {
                name: 'finishdate'
            },
            {
                name: 'firstuseliftdate'
            },
            {
                name: 'r12'
            },
            {
                name: 'projectname'
            },
            {
                name: 'speedcheckdate'
            },
            {
                name: 'speednextcheckdate'
            },
            {
                name: 'typeid'
            },
            {
                name: 'elevatorid'
            },
            {
                name: 'zzl'
            },
            {
                name: 'speed'
            },
            {
                name: 'floor'
            },
            {
                name: 'stage'
            },
            {
                name: 'door'
            },
            {
                name: 'high'
            },
            {
                name: 'fwlc'
            },
            {
                name: 'kmfs'
            },
            {
                name: 'openremark'
            },
            {
                name: 'contype'
            },
            {
                name: 'controlnum'
            },
            {
                name: 'imagefile'
            }
        ]
    },

    updateDat: function(onSuccess, onFailure, parm) {
        var me = this;
        console.log('调用电梯保存接口：');
        console.log(parm);
        if(global.isWorklight()) {
            var url = '/adapters/common/api/1.0/uporsaveele';
            callPostAdapter(
                url, parm,
                function(ret) {
                    if(ret.status.code===200) {
                        console.log(ret.trno);
                        onSuccess(ret.trno);
                    } else {
                        console.log(ret.status.info);
                        onFailure(ret.status.info);
                    }
                },
                function() {
                    onFailure('(未知)');
                }
            );
        } else {
            onSuccess(parm.lift.prono);
        }
    }

});