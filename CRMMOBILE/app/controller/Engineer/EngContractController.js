/*
 * File: app/controller/Engineer/EngContractController.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.controller.Engineer.EngContractController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "panel#EngContractType": {
                initialize: 'onEngContractTypeInitialize'
            },
            "button#EngContractType_BtnReturn": {
                tap: 'onEngContractType_BtnReturnTap'
            },
            "list#EngContractType_List": {
                itemtap: 'onEngContractType_ListItemTap'
            },
            "panel#EngContractQuery": {
                initialize: 'onEngContractQueryInitialize'
            },
            "button#EngContractQuery_BtnReturn": {
                tap: 'onEngContractQuery_BtnReturnTap'
            },
            "searchfield#EngContractQuery_Search": {
                change: 'onEngContractQuery_SearchChange'
            },
            "list#EngContractQuery_List": {
                itemtap: 'onEngContractQuery_ListItemTap'
            },
            "panel#EngMaintainContractDetail": {
                initialize: 'onEngMaintainContractDetailInitialize'
            },
            "button#EngMaintainContractDetail_BtnReturn": {
                tap: 'onEngMaintainContractDetail_BtnReturnTap'
            },
            "list#EngMaintainContractDetail_ElevatorList": {
                itemtap: 'onEngMaintainContractDetail_ElevatorListItemTap'
            },
            "button#EngContractQuery_Staus": {
                tap: 'onEngContractQuery_StausTap'
            },
            "datepickerfield#EngContractQuery_date1": {
                change: 'onEngContractQuery_date1Change'
            },
            "datepickerfield#EngContractQuery_date2": {
                change: 'onEngContractQuery_date2Change'
            },
            "button#EngMaintainContractStatus_0": {
                tap: 'onEngMaintainContractStatus_0Tap'
            },
            "button#EngMaintainContractStatus_1": {
                tap: 'onEngMaintainContractStatus_1Tap'
            },
            "button#EngMaintainContractStatus_2": {
                tap: 'onEngMaintainContractStatus_2Tap'
            },
            "button#EngMaintainContractStatus_3": {
                tap: 'onEngMaintainContractStatus_3Tap'
            },
            "button#EngMaintainContractStatus_4": {
                tap: 'onEngMaintainContractStatus_4Tap'
            },
            "button#EngMaintainContractStatus_5": {
                tap: 'onEngMaintainContractStatus_5Tap'
            },
            "button#EngMaintainContractStatus_6": {
                tap: 'onEngMaintainContractStatus_6Tap'
            },
            "button#EngInsureContractQuery_BtnReturn": {
                tap: 'onEngInsureContractQuery_BtnReturnTap'
            },
            "panel#EngInsureContractQuery": {
                initialize: 'onEngInsureContractQueryInitialize'
            },
            "searchfield#EngInsureContractQuery_Search": {
                change: 'onEngInsureContractQuery_SearchChange'
            },
            "button#EngInsureContractQuery_Staus": {
                tap: 'onEngInsureContractQuery_StausTap'
            },
            "datepickerfield#EngInsureContractQuery_date1": {
                change: 'onEngInsureContractQuery_date1Change'
            },
            "datepickerfield#EngInsureContractQuery_date2": {
                change: 'onEngInsureContractQuery_date2Change'
            },
            "list#EngInsureContractQuery_List": {
                itemtap: 'onEngInsureContractQuery_ListItemTap'
            },
            "button#EngInsureContractStatus_0": {
                tap: 'onEngInsureContractStatus_0Tap'
            },
            "button#EngInsureContractStatus_1": {
                tap: 'onEngInsureContractStatus_1Tap'
            },
            "button#EngInsureContractStatus_2": {
                tap: 'onEngInsureContractStatus_2Tap'
            },
            "button#EngInsureContractStatus_3": {
                tap: 'onEngInsureContractStatus_3Tap'
            },
            "button#EngInsureContractStatus_4": {
                tap: 'onEngInsureContractStatus_4Tap'
            },
            "button#EngInsureContractStatus_5": {
                tap: 'onEngInsureContractStatus_5Tap'
            },
            "button#EngInsureContractStatus_6": {
                tap: 'onEngInsureContractStatus_6Tap'
            },
            "panel#EngInsureContractDetail": {
                initialize: 'onEngInsureContractDetailInitialize'
            },
            "button#EngInsureContractDetail_BtnReturn": {
                tap: 'onEngInsureContractDetail_BtnReturnTap'
            },
            "list#EngInsureContractDetail_ElevatorList": {
                itemtap: 'onEngInsureContractDetail_ElevatorListItemTap'
            },
            "panel#EngRepairContractQuery": {
                initialize: 'onEngRepairContractQueryInitialize'
            },
            "button#EngRepairContractQuery_BtnReturn": {
                tap: 'onEngRepairContractQuery_BtnReturnTap'
            },
            "searchfield#EngRepairContractQuery_Search": {
                change: 'onEngRepairContractQuery_SearchChange'
            },
            "button#EngRepairContractQuery_Staus": {
                tap: 'onEngRepairContractQuery_StausTap'
            },
            "datepickerfield#EngRepairContractQuery_date1": {
                change: 'onEngRepairContractQuery_date1Change'
            },
            "datepickerfield#EngRepairContractQuery_date2": {
                change: 'onEngRepairContractQuery_date2Change'
            },
            "button#EngRepairContractStatus_0": {
                tap: 'onEngRepairContractStatus_0Tap'
            },
            "button#EngRepairContractStatus_1": {
                tap: 'onEngRepairContractStatus_1Tap'
            },
            "button#EngRepairContractStatus_2": {
                tap: 'onEngRepairContractStatus_2Tap'
            },
            "button#EngRepairContractStatus_3": {
                tap: 'onEngRepairContractStatus_3Tap'
            },
            "button#EngRepairContractStatus_4": {
                tap: 'onEngRepairContractStatus_4Tap'
            },
            "button#EngRepairContractStatus_5": {
                tap: 'onEngRepairContractStatus_5Tap'
            },
            "button#EngRepairContractStatus_6": {
                tap: 'onEngRepairContractStatus_6Tap'
            },
            "list#EngRepairContractQuery_List": {
                itemtap: 'onEngRepairContractQuery_ListItemTap'
            },
            "panel#EngRepairContractDetail": {
                initialize: 'onEngRepairContractDetailInitialize'
            },
            "button#EngRepairContractDetail_BtnReturn": {
                tap: 'onEngRepairContractDetail_BtnReturnTap'
            },
            "list#EngRepairContractDetail_ElevatorList": {
                itemtap: 'onEngRepairContractDetail_ElevatorListItemTap'
            }
        }
    },

    onEngContractTypeInitialize: function(component, eOpts) {
        //加载合同分类列表
        Ext.getCmp('EngContractType_List').getStore().loadDat(
            function(){

            },
            function(info){
                Ext.toast(info);
            }
        );
    },

    onEngContractType_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngContractType_ListItemTap: function(dataview, index, target, record, e, eOpts) {
        var views = {
            '0':'Engineer.EngContractQuery',
            '1':'Engineer.EngInsureContractQuery',
            '2':'Engineer.EngRepairContractQuery'
        };
        // if(index!=2){
            viewUtil.goNext(views[index]);
        // }

    },

    onEngContractQueryInitialize: function(component, eOpts) {
        var me = this;
        var contractQueryList = Ext.getCmp('EngContractQuery_List');
        //清空store数据
        contractQueryList.getStore().removeAll();

        curPage = 0;//全局变量
        pagesize = 20;
        //获取流程状态
        getFlowstatus = {
            '全部':'%',
            '新建':'0',
            '待审':'1',
            '通过':'2',
            '不通过':'3',
            '审批中':'4',
            '已取消':'5'
        };
        //下拉刷新
        contractQueryList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新保养合同...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            me.doEngContractQuery_Search(
                            Ext.getCmp('EngContractQuery_Staus'));
                        }
                    }
                }
            ]
        );


        //监听滑动结束事件
        var scroller = contractQueryList.getScrollable().getScroller();
        scroller.on('scrollend',function(scroll, x, y, eOpts){
            if(curPage===0){
                return;
            }
            //滑动到底部加载更多
            if(y+scroller.getContainerSize().y==scroller.getSize().y){
        //         loadMask.show();
                var scrollparm = {
                    scroller:scroller,
                    x:x,
                    y:y+100//Item的高度
                };
                if(!Ext.getCmp('EngContractQuery_Search')){
                    loadMask.hide();
                    return;
                }
                var searchkeyParm = {
                    //关键字
                    searchkey:Ext.getCmp('EngContractQuery_Search').getValue(),
                    //保养开始日期
                    startdate:
                        Ext.getCmp('EngContractQuery_date1').getValue()===null?'1980-01-01':
                        Ext.Date.format(Ext.getCmp('EngContractQuery_date1').getValue(),'Y-m-d'),
                    //保养结束日期
                    enddate:
                        Ext.getCmp('EngContractQuery_date2').getValue()===null?'2200-01-01':
                        Ext.Date.format(Ext.getCmp('EngContractQuery_date2').getValue(),'Y-m-d'),
                    //流程状态
                    flowstatus:
                        getFlowstatus[Ext.getCmp('EngContractQuery_Staus').getText()]
                };
        //         me.doEngContractQuery_LoadContract(
                me.doEngContract_LoadData(
                    'EngContractQuery_List',
                    ++curPage,
                    pagesize,
                    searchkeyParm,
                    'loadmore',
                    scrollparm
                );
            }
        });

    },

    onEngContractQuery_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngContractQuery_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        // if(!newValue||newValue===''){
        //     return;
        // }
        this.doEngContractQuery_Search(Ext.getCmp('EngContractQuery_Staus'));
    },

    onEngContractQuery_ListItemTap: function(dataview, index, target, record, e, eOpts) {
        //保养合同
        viewUtil.goNext('Engineer.EngMaintainContractDetail',{record:record});

    },

    onEngMaintainContractDetailInitialize: function(component, eOpts) {
        var me = this;
        var record = component.initialConfig.parm.record;
        var billno = record.get('billno');
        var parm = {billno:billno};
        loadMask.show();
        //获取所有明细信息
        var detailStore = dataUtil.createStore('eng_contractdetail');
        //客户信息
        var clientStore = dataUtil.createStore('eng_contractclient');
        detailStore.loadDat(
            function(ret){
                //显示客户信息
                clientStore.setData(detailStore.getAt(0).get('client')[0]);
                Ext.getCmp('EngMaintainContractDetail_Client')
                    .setRecord(clientStore.getAt(0));
                //显示合同信息
                Ext.getCmp('EngMaintainContractDetail_MainInfo')
                    .setRecord(detailStore.getAt(0));
                //显示电梯信息
                Ext.getCmp('EngMaintainContractDetail_ElevatorList').getStore()
                    .setData(ret[0].liftinfo);
                loadMask.hide();
            },
            function(info){
                Ext.toast(info);
                loadMask.hide();
            },
            parm
        );

    },

    onEngMaintainContractDetail_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngMaintainContractDetail_ElevatorListItemTap: function(dataview, index, target, record, e, eOpts) {
        if(!record.get('pordid')){
            Ext.toast('电梯注册码为空</br></br>无法查看相关电梯档案');
            return;
        }
        viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('pordid')});
    },

    onEngContractQuery_StausTap: function(button, e, eOpts) {
        //保养合同-类别筛选按钮

        popMenu.show('Engineer.EngMaintainContractStatus', button);
    },

    onEngContractQuery_date1Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(newDate);
        // var end = Date.parse(Ext.getCmp('EngContractQuery_date2').getValue());
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,newDate,Ext.getCmp('EngContractQuery_date2').getValue())){
            this.doEngContractQuery_Search(Ext.getCmp('EngContractQuery_Staus'));
        }
        // this.doEngContractQuery_Search(Ext.getCmp('EngContractQuery_Staus'));
    },

    onEngContractQuery_date2Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(Ext.getCmp('EngContractQuery_date1').getValue());
        // var end = Date.parse(newDate);
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,Ext.getCmp('EngContractQuery_date1').getValue(),newDate)){
            this.doEngContractQuery_Search(Ext.getCmp('EngContractQuery_Staus'));
        }
        // this.doEngContractQuery_Search(Ext.getCmp('EngContractQuery_Staus'));
    },

    onEngMaintainContractStatus_0Tap: function(button, e, eOpts) {

        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_1Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_2Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_3Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_4Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_5Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngMaintainContractStatus_6Tap: function(button, e, eOpts) {
        this.doEngContractQuery_Search(button);
    },

    onEngInsureContractQuery_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngInsureContractQueryInitialize: function(component, eOpts) {
        var me = this;
        var insureContractQueryList = Ext.getCmp('EngInsureContractQuery_List');
        insureContractQueryList.getStore().removeAll();

        curPage = 0;//全局变量
        pagesize = 20;
        //获取流程状态
        getStatus = {
            '全部':'%',
            '新建':'0',
            '待审':'1',
            '审批中':'2',
            '通过':'3',
            '不通过':'4',
            '作废':'5'
        };

        insureContractQueryList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新保险合同...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            me.doEngInsureContractQuery_Search(
                            Ext.getCmp('EngInsureContractQuery_Staus'));
                        }
                    }
                }
            ]
        );

        //监听滑动结束事件
        var scroller = insureContractQueryList.getScrollable().getScroller();
        scroller.on('scrollend',function(scroll, x, y, eOpts){
            if(curPage===0){
                return;
            }
            //滑动到底部加载更多
            if(y+scroller.getContainerSize().y==scroller.getSize().y){
        //         loadMask.show();
                var scrollparm = {
                    scroller:scroller,
                    x:x,
                    y:y+100//Item的高度
                };
                if(!Ext.getCmp('EngInsureContractQuery_Search')){
                    loadMask.hide();
                    return;
                }
                var searchkeyParm = {
                    //关键字
                    searchkey:Ext.getCmp('EngInsureContractQuery_Search').getValue(),
                    //保养开始日期
                    startdate:
                        Ext.getCmp('EngInsureContractQuery_date1').getValue()===null?'1980-01-01':
                        Ext.Date.format(Ext.getCmp('EngInsureContractQuery_date1').getValue(),'Y-m-d'),
                    //保养结束日期
                    enddate:
                        Ext.getCmp('EngInsureContractQuery_date2').getValue()===null?'2200-01-01':
                        Ext.Date.format(Ext.getCmp('EngInsureContractQuery_date2').getValue(),'Y-m-d'),
                    //流程状态
                    flowstatus:
                        getStatus[Ext.getCmp('EngInsureContractQuery_Staus').getText()]
                };
                console.log(searchkeyParm);
        //         me.doEngInsureContractQuery_LoadInsureContract(
                me.doEngContract_LoadData(
                    'EngInsureContractQuery_List',
                    ++curPage,
                    pagesize,
                    searchkeyParm,
                    'loadmore',
                    scrollparm
                );
            }
        });
    },

    onEngInsureContractQuery_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        this.doEngInsureContractQuery_Search(Ext.getCmp('EngInsureContractQuery_Staus'));
    },

    onEngInsureContractQuery_StausTap: function(button, e, eOpts) {
        //保险合同-状态筛选按钮

        popMenu.show('Engineer.EngInsureContractStatus', button);
    },

    onEngInsureContractQuery_date1Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(newDate);
        // var end = Date.parse(Ext.getCmp('EngInsureContractQuery_date2').getValue());
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,newDate,Ext.getCmp('EngInsureContractQuery_date2').getValue())){
            this.doEngInsureContractQuery_Search(Ext.getCmp('EngInsureContractQuery_Staus'));
        }

        // this.doEngInsureContractQuery_Search(Ext.getCmp('EngInsureContractQuery_Staus'));
    },

    onEngInsureContractQuery_date2Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(Ext.getCmp('EngInsureContractQuery_date1').getValue());
        // var end = Date.parse(newDate);
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,Ext.getCmp('EngInsureContractQuery_date1').getValue(),newDate)){
            this.doEngInsureContractQuery_Search(Ext.getCmp('EngInsureContractQuery_Staus'));
        }
        // this.doEngInsureContractQuery_Search(Ext.getCmp('EngInsureContractQuery_Staus'));
    },

    onEngInsureContractQuery_ListItemTap: function(dataview, index, target, record, e, eOpts) {
        //保险合同
        viewUtil.goNext('Engineer.EngInsureContractDetail',{record:record});
    },

    onEngInsureContractStatus_0Tap: function(button, e, eOpts) {

        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_1Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_2Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_3Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_4Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_5Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractStatus_6Tap: function(button, e, eOpts) {
        this.doEngInsureContractQuery_Search(button);
    },

    onEngInsureContractDetailInitialize: function(component, eOpts) {
        var me = this;
        var record = component.initialConfig.parm.record;
        var insurancejnlno = record.get('insurancejnlno');
        var parm = {insurancejnlno:insurancejnlno};
        loadMask.show();
        // 获取保险合同详细信息（合同，关联合同，电梯）
        var insureStore = dataUtil.createStore('eng_insurecontract');
        insureStore.loadDat(
            function(ret){
                //保险合同
                Ext.getCmp('EngInsureContractDetail_Contract')
                    .setRecord(insureStore.getAt(0));
                //合同信息
                Ext.getCmp('EngInsureContractDetail_Info').getStore()
                    .setData(ret[0].htdetaillist);
                //电梯信息
                Ext.getCmp('EngInsureContractDetail_ElevatorList').getStore()
                    .setData(ret[0].liftinfo);
                loadMask.hide();
            },
            function(info){
                Ext.toast(info);
                loadMask.hide();
            },
            parm
        );
    },

    onEngInsureContractDetail_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngInsureContractDetail_ElevatorListItemTap: function(dataview, index, target, record, e, eOpts) {
        if(!record.get('prodno')){
            Ext.toast('电梯注册码为空</br></br>无法查看相关电梯档案');
            return;
        }
        viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('prodno')});
    },

    onEngRepairContractQueryInitialize: function(component, eOpts) {
        var me = this;
        var repairContractQueryList = Ext.getCmp('EngRepairContractQuery_List');
        repairContractQueryList.getStore().removeAll();

        curPage = 0;//全局变量
        pagesize = 20;
        //获取流程状态
        getStatus = {
            '全部':'%',
            '新建':'0',
            '待审':'1',
            '审批中':'2',
            '通过':'3',
            '不通过':'4',
            '作废':'5'
        };

        repairContractQueryList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新维修合同...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            me.doEngRepairContractQuery_Search(
                            Ext.getCmp('EngRepairContractQuery_Staus'));
                        }
                    }
                }
            ]
        );

        //监听滑动结束事件
        var scroller = repairContractQueryList.getScrollable().getScroller();
        scroller.on('scrollend',function(scroll, x, y, eOpts){
            if(curPage===0){
                return;
            }
            //滑动到底部加载更多
            if(y+scroller.getContainerSize().y==scroller.getSize().y){
        //         loadMask.show();
                var scrollparm = {
                    scroller:scroller,
                    x:x,
                    y:y+100//Item的高度
                };
                if(!Ext.getCmp('EngRepairContractQuery_Search')){
                    loadMask.hide();
                    return;
                }
                var searchkeyParm = {
                    //关键字
                    searchkey:Ext.getCmp('EngRepairContractQuery_Search').getValue(),
                    //保养开始日期
                    startdate:
                        Ext.getCmp('EngRepairContractQuery_date1').getValue()===null?'1980-01-01':
                        Ext.Date.format(Ext.getCmp('EngRepairContractQuery_date1').getValue(),'Y-m-d'),
                    //保养结束日期
                    enddate:
                        Ext.getCmp('EngRepairContractQuery_date2').getValue()===null?'2200-01-01':
                        Ext.Date.format(Ext.getCmp('EngRepairContractQuery_date2').getValue(),'Y-m-d'),
                    //流程状态
                    flowstatus:
                        getStatus[Ext.getCmp('EngRepairContractQuery_Staus').getText()]
                };
                console.log(searchkeyParm);
        //         me.doEngRepairContractQuery_LoadRepairContract(
                me.doEngContract_LoadData(
                    'EngRepairContractQuery_List',
                    ++curPage,
                    pagesize,
                    searchkeyParm,
                    'loadmore',
                    scrollparm
                );
            }
        });

    },

    onEngRepairContractQuery_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngRepairContractQuery_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        this.doEngRepairContractQuery_Search(Ext.getCmp('EngRepairContractQuery_Staus'));
    },

    onEngRepairContractQuery_StausTap: function(button, e, eOpts) {
        //维修合同-状态筛选按钮
        popMenu.show('Engineer.EngRepairContractStatus', button);
    },

    onEngRepairContractQuery_date1Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(newDate);
        // var end = Date.parse(Ext.getCmp('EngRepairContractQuery_date2').getValue());
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,newDate,Ext.getCmp('EngRepairContractQuery_date2').getValue())){
            this.doEngRepairContractQuery_Search(Ext.getCmp('EngRepairContractQuery_Staus'));
        }

    },

    onEngRepairContractQuery_date2Change: function(datepickerfield, newDate, oldDate, eOpts) {
        // var me = this;
        // var start = Date.parse(Ext.getCmp('EngRepairContractQuery_date1').getValue());
        // var end = Date.parse(newDate);
        // if(start>end){
        //     datepickerfield.setValue(oldDate);
        //     Ext.toast('请选择正确的日期区间');
        //     return;
        // }
        if(this.doEngContract_JudgeDate(datepickerfield,oldDate,Ext.getCmp('EngRepairContractQuery_date1').getValue(),newDate)){
            this.doEngRepairContractQuery_Search(Ext.getCmp('EngRepairContractQuery_Staus'));
        }
        // this.doEngRepairContractQuery_Search(Ext.getCmp('EngRepairContractQuery_Staus'));
    },

    onEngRepairContractStatus_0Tap: function(button, e, eOpts) {

        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_1Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_2Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_3Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_4Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_5Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractStatus_6Tap: function(button, e, eOpts) {
        this.doEngRepairContractQuery_Search(button);
    },

    onEngRepairContractQuery_ListItemTap: function(dataview, index, target, record, e, eOpts) {
        viewUtil.goNext('Engineer.EngRepairContractDetail',{record:record});
    },

    onEngRepairContractDetailInitialize: function(component, eOpts) {
        var me = this;
        var record = component.initialConfig.parm.record;
        var wxhtbh = record.get('wxhtbh');
        var parm = {billno:wxhtbh};
        loadMask.show();
        // 获取维修合同详细信息（合同，关联合同，电梯）
        var repairStore = dataUtil.createStore('eng_repaircontract');
        repairStore.loadDat(
            function(ret){
                //合同
                Ext.getCmp('EngRepairContractDetail_Contract')
                    .setRecord(repairStore.getAt(0));
                //电梯
                Ext.getCmp('EngRepairContractDetail_ElevatorList').getStore()
                    .setData(ret[0].liftinfo);
                //人工费用
                Ext.getCmp('EngRepairContractDetail_Money').getStore()
                    .setData(ret[0].rgfy);
                //付款方式
                Ext.getCmp('EngRepairContractDetail_Pay').getStore()
                    .setData(ret[0].fkfs);
                //更换材料
                Ext.getCmp('EngRepairContractDetail_Material').getStore()
                    .setData(ret[0].ghcl);
                loadMask.hide();
            },
            function(info){
                Ext.toast(info);
                loadMask.hide();
            },
            parm
        );
    },

    onEngRepairContractDetail_BtnReturnTap: function(button, e, eOpts) {
        viewUtil.goLast();
    },

    onEngRepairContractDetail_ElevatorListItemTap: function(dataview, index, target, record, e, eOpts) {
        if(!record.get('dtzcm')){
            Ext.toast('电梯注册码为空</br></br>无法查看相关电梯档案');
            return;
        }
        viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('dtzcm')});
    },

    doEngContractQuery_Search: function(button) {
        //搜索数据
        if(button != Ext.getCmp('EngContractQuery_Staus')){
            popMenu.getShowBy().setText(button.getText());
            popMenu.hide();
        }
        var searchkeyParm = {
            //关键字
            searchkey : Ext.getCmp('EngContractQuery_Search').getValue(),
            //保养开始日期
            startdate:
                    Ext.getCmp('EngContractQuery_date1').getValue()===null?'1980-01-01':
                    Ext.Date.format(Ext.getCmp('EngContractQuery_date1').getValue(),'Y-m-d'),
            //保养结束日期
            enddate:
                    Ext.getCmp('EngContractQuery_date2').getValue()===null?'2200-01-01':
                    Ext.Date.format(Ext.getCmp('EngContractQuery_date2').getValue(),'Y-m-d'),
            //流程状态
            flowstatus:
                getFlowstatus[Ext.getCmp('EngContractQuery_Staus').getText()]
        };
        console.log(searchkeyParm);
        this.doEngContract_LoadData('EngContractQuery_List',
                                   1,pagesize,searchkeyParm,'search');
        // this.doEngContractQuery_LoadContract(1,pagesize,searchkeyParm,'search');
    },

    doEngContractQuery_LoadContract: function(page, pagesize, searchkeyParm, action, scrollparm) {
        loadMask.show();
        var me = this;
        Ext.getCmp('EngContractQuery_List').getStore().loadDat(
            function(ret,resetCurPage){
                if(scrollparm){
                    scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);
                }
                if(resetCurPage){
                    curPage = 1;//获取新数据成功，页数重置为1
                }
                loadMask.hide();
            },
            function(info,cutOne){
                Ext.toast(info);
                if(cutOne){
                    curPage--;//加载更多数据失败，页数减一
                }
                if(info==='没有更多数据！'){
                    curPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件
                }
                loadMask.hide();

            },
            {
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkeyParm.searchkey || '',
                flowstatus:searchkeyParm.flowstatus || '%',
                startdate:searchkeyParm.startdate,
                enddate:searchkeyParm.enddate
            },
            action
        );
    },

    doEngInsureContractQuery_Search: function(button) {
        //搜索数据
        if(button != Ext.getCmp('EngInsureContractQuery_Staus')){
            popMenu.getShowBy().setText(button.getText());
            popMenu.hide();
        }
        var searchkeyParm = {
            //关键字
            searchkey : Ext.getCmp('EngInsureContractQuery_Search').getValue(),
            //保养开始日期
            startdate:
                    Ext.getCmp('EngInsureContractQuery_date1').getValue()===null?'1980-01-01':
                    Ext.Date.format(Ext.getCmp('EngInsureContractQuery_date1').getValue(),'Y-m-d'),
            //保养结束日期
            enddate:
                    Ext.getCmp('EngInsureContractQuery_date2').getValue()===null?'2200-01-01':
                    Ext.Date.format(Ext.getCmp('EngInsureContractQuery_date2').getValue(),'Y-m-d'),
            //流程状态
            flowstatus:
                getStatus[Ext.getCmp('EngInsureContractQuery_Staus').getText()]
        };
        console.log(searchkeyParm);
        this.doEngContract_LoadData('EngInsureContractQuery_List',
                                   1,pagesize,searchkeyParm,'search');
        // this.doEngInsureContractQuery_LoadInsureContract(1,pagesize,searchkeyParm,'search');
    },

    doEngInsureContractQuery_LoadInsureContract: function(page, pagesize, searchkeyParm, action, scrollparm) {
        loadMask.show();
        var me = this;
        Ext.getCmp('EngInsureContractQuery_List').getStore().loadDat(
            function(ret,resetCurPage){
                if(scrollparm){
                    scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);
                }
                if(resetCurPage){
                    curPage = 1;//获取新数据成功，页数重置为1
                }
                loadMask.hide();
            },
            function(info,cutOne){
                Ext.toast(info);
                if(cutOne){
                    curPage--;//加载更多数据失败，页数减一
                }
                if(info==='没有更多数据！'){
                    curPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件
                }
                loadMask.hide();

            },
            {
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkeyParm.searchkey || '',
                flowstatus:searchkeyParm.flowstatus || '%',
                startdate:searchkeyParm.startdate,
                enddate:searchkeyParm.enddate
            },
            action
        );
    },

    doEngRepairContractQuery_Search: function(button) {
        //搜索数据
        if(button != Ext.getCmp('EngRepairContractQuery_Staus')){
            popMenu.getShowBy().setText(button.getText());
            popMenu.hide();
        }
        var searchkeyParm = {
            //关键字
            searchkey : Ext.getCmp('EngRepairContractQuery_Search').getValue(),
            //保养开始日期
            startdate:
                    Ext.getCmp('EngRepairContractQuery_date1').getValue()===null?'1980-01-01':
                    Ext.Date.format(Ext.getCmp('EngRepairContractQuery_date1').getValue(),'Y-m-d'),
            //保养结束日期
            enddate:
                    Ext.getCmp('EngRepairContractQuery_date2').getValue()===null?'2200-01-01':
                    Ext.Date.format(Ext.getCmp('EngRepairContractQuery_date2').getValue(),'Y-m-d'),
            //流程状态
            flowstatus:
                getStatus[Ext.getCmp('EngRepairContractQuery_Staus').getText()]
        };
        console.log(searchkeyParm);
        // this.doEngRepairContractQuery_LoadRepairContract(1,pagesize,searchkeyParm,'search');

        this.doEngContract_LoadData('EngRepairContractQuery_List',1,pagesize,searchkeyParm,'search');
    },

    doEngRepairContractQuery_LoadRepairContract: function(page, pagesize, searchkeyParm, action, scrollparm) {
        loadMask.show();
        var me = this;
        Ext.getCmp('EngRepairContractQuery_List').getStore().loadDat(
            function(ret,resetCurPage){
                if(scrollparm){
                    scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);
                }
                if(resetCurPage){
                    curPage = 1;//获取新数据成功，页数重置为1
                }
                loadMask.hide();
            },
            function(info,cutOne){
                Ext.toast(info);
                if(cutOne){
                    curPage--;//加载更多数据失败，页数减一
                }
                if(info==='没有更多数据！'){
                    curPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件
                }
                loadMask.hide();

            },
            {
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkeyParm.searchkey || '',
                flowstatus:searchkeyParm.flowstatus || '%',
                startdate:searchkeyParm.startdate,
                enddate:searchkeyParm.enddate
            },
            action
        );
    },

    doEngContract_JudgeDate: function(datepickerfield, oldDate, date1, date2) {
        var me = this;
        var start = Date.parse(date1);
        var end = Date.parse(date2);
        if(start>end){
            datepickerfield.setValue(oldDate);
            Ext.toast('请选择正确的日期区间');
            return false;
        }
        return true;
    },

    doEngContract_LoadData: function(listId, page, pagesize, searchkeyParm, action, scrollparm) {
        loadMask.show();
        var me = this;
        Ext.getCmp(listId).getStore().loadDat(
            function(ret,resetCurPage){
                if(scrollparm){
                    scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);
                }
                if(resetCurPage){
                    curPage = 1;//获取新数据(首次加载、刷新、搜索)成功，页数重置为1
                }
                loadMask.hide();
            },
            function(info,cutOne){
                if(cutOne){
                    curPage--;//加载更多数据失败，页数减一
                }
                if(info==='没有更多数据！'){
                    curPage = 0;//没有更多数据的时候重置页数为0，不再触发上拉事件
                }
                loadMask.hide();
                Ext.toast(info);

            },
            {
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkeyParm.searchkey || '',
                flowstatus:searchkeyParm.flowstatus || '%',
                startdate:searchkeyParm.startdate,
                enddate:searchkeyParm.enddate
            },
            action
        );
    }

});