/*
 * File: app/controller/Engineer/EngMonitorController.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.controller.Engineer.EngMonitorController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "container#Container_EnyElevatorMap": {
                painted: 'onContainer_EnyElevatorMapPainted'
            },
            "container#Container_EnyProjectMap": {
                painted: 'onContainer_Container_EnyProjectMapPainted'
            },
            "container#Container_EnyLiftMap": {
                painted: 'onContainer_Container_EnyLiftMapPainted'
            },
            "container#Container_EnyUserMap": {
                painted: 'onContainer_Container_EnyUserMapPainted'
            },
            "container#Container_EnyPointMap": {
                painted: 'onContainer_Container_EnyPointMapPainted'
            },
            "container#EngMonitor_TabMap": {
                destroy: 'onEngMonitor_TabMapDestory'
            },
            "button#EngMonitor_BtnSwitch": {
                tap: 'onEngMonitor_BtnSwitchTap'
            },
            "button#EngMonitor_BtnTrack": {
                tap: 'onEngMonitor_BtnTrackTap'
            },
            "button#EngMonitor_BtnLift": {
                tap: 'onEngMonitor_BtnLiftTap'
            },
            "panel#EngMonitorTrack": {
                show: 'onEngMonitorTrackShow'
            },
            "button#EngMonitorTrack_BtnReturn": {
                tap: 'onEngMonitorTrack_BtnReturnTap'
            },
            "panel#EngMonitorElevatorList": {
                show: 'onEngMonitorElevatorListShow'
            },
            "panel#EngMonitorProjectInfoList": {
                initialize: 'onEngMonitorProjectInfoListInitialize'
            },
            "panel#EngMonitorProjectElevatorList": {
                initialize: 'onEngMonitorProjectElevatorListInitialize'
            },
            "button#EngMonitorElevatorList_BtnReturn": {
                tap: 'onEngMonitorElevatorList_BtnReturnTap'
            },
            "button#EngMonitorProjectInfoList_BtnReturn": {
                tap: 'onEngMonitorProjectInfoList_BtnReturnTap'
            },
            "button#EngMonitorProjectElevatorList_BtnReturn": {
                tap: 'onEngMonitorProjectElevatorList_BtnReturnTap'
            },
            "list#EngMonitorElevatorList_ListElevator": {
                itemtap: 'onEngMonitorElevatorList_ListElevatorItemTap'
            },
            "list#EngMonitorProjectInfoList_ListProject": {
                itemtap: 'onEngMonitorProjectInfoList_ListProjectItemTap'
            },
            "list#EngMonitorProjectElevatorList_ListElevator": {
                itemtap: 'onEngMonitorProjectElevatorList_ListElevatorItemTap'
            },
            "button#EngMonitorElevatorInfo_BtnReturn": {
                tap: 'onEngMonitorElevatorInfo_BtnReturnTap'
            },
            "searchfield#EngMonitor_Search": {
                change: 'onEngMonitor_SearchChange'
            },
            "searchfield#EngMonitor_SearchProject": {
                change: 'onEngMonitor_SearchProjectChange'
            },
            "searchfield#EngMonitor_SearchLift": {
                change: 'onEngMonitor_SearchLiftChange'
            },
            "searchfield#EngMonitor_SearchUser": {
                change: 'onEngMonitor_SearchUserChange'
            },
            "searchfield#EngMonitor_SearchPoint": {
                change: 'onEngMonitor_SearchPointChange'
            },
            "searchfield#EngMonitorProjectInfoList_Search": {
                change: 'onEngMonitorProjectInfoList_SearchChange'
            },
            "searchfield#EngMonitorProjectElevatorList_Search": {
                change: 'onEngMonitorProjectElevatorList_SearchChange'
            },
            "panel#EngMonitorElevatorInfo": {
                initialize: 'onEngMonitorElevatorInfoInitialize'
            }
        }
    },

    /*

        ********** 实时监控 **********

    */
    onContainer_EnyElevatorMapPainted: function(element, eOpts) {
        // 实时监控-地图
        // var me = this;
        // var location = map.getLocation();
        // map.create('EngElevator_map',
        //            {lng:113.30764968, lat:23.1200491, zoom:15});

    },

    onContainer_Container_EnyProjectMapPainted: function(element, eOpts) {
        // 实时监控-项目地图
        var me = this;
        if(!map.lookup('EngProject_map')){
           me.initMap('EngProject_map');
        }
    },

    onContainer_Container_EnyLiftMapPainted: function(element, eOpts) {
        // 实时监控-电梯地图
        var me = this;
        if(!map.lookup('EngLift_map')){
           me.initMap('EngLift_map');
        }
    },

    onContainer_Container_EnyUserMapPainted: function(element, eOpts) {
        // 实时监控-人员地图
        var me = this;
        if(!map.lookup('EngUser_map')){
            me.initMap('EngUser_map');
        }
    },

    onContainer_Container_EnyPointMapPainted: function(element, eOpts) {
        // 实时监控-驻点地图
        var me = this;
        if(!map.lookup('EngPoint_map')){
            me.initMap('EngPoint_map');
        }
    },

    onEngMonitor_TabMapDestory: function(eOpts) {
        //删除四个地图
        map.destroyById('EngProject_map');
        map.destroyById('EngLift_map');
        map.destroyById('EngUser_map');
        map.destroyById('EngPoint_map');
    },

    onEngMonitor_BtnSwitchTap: function(button, e, eOpts) {
        // “显示轨迹” 切换按钮
        var displayText = '<div class="liftnet-button-threeBut-round liftnet-button-threeBut-left"></div>显示轨迹';
        var hideText = '<div class="liftnet-button-threeBut-round liftnet-button-threeBut-right"></div>隐藏轨迹';

        if(button.getText() === displayText) {
          button.setText(hideText);
        }else{
          button.setText(displayText);
        }
    },

    onEngMonitor_BtnTrackTap: function(button, e, eOpts) {
        // 实时监控 - “查看轨迹详情”按钮
        viewUtil.goNext('Engineer.EngMonitorTrack');
    },

    onEngMonitor_BtnLiftTap: function(button, e, eOpts) {
        // 实时监控 - “查看所有项目”按钮
        // viewUtil.goNext('Engineer.EngMonitorElevatorList');
        viewUtil.goNext('Engineer.EngMonitorProjectInfoList');
    },

    onEngMonitorTrackShow: function(component, eOpts) {
        // 获取顶部显示信息
        var store = dataUtil.createStore('eng_tracktopinfo');
        store.loadDat(
            function(ret){
                //拿不到数据显示当前位置，状态为空闲
                Ext.getCmp('EngMonitorTrack_Addr').setHtml(
                    (ret.length===0||!ret)?
                    map.getLocation().addr:ret[0].userlocation);
                Ext.getCmp('EngMonitorTrack_Status').setHtml(
                    (ret.length===0||!ret)?
                    '空闲 <i class="fa fa-circle-o"></i>':ret[0].stuts+' <i class="fa fa-circle-o"></i>');
                Ext.getCmp('EngMonitorTrack_Time').setHtml(
                    (ret.length===0||!ret)?
                    Ext.Date.format(new Date(), 'Y-m-d H:i'):ret[0].ltime);
                Ext.getCmp('EngMonitorTrack_Phone').setHtml(
                    (ret.length===0||!ret)?
                    '10086':ret[0].phone);
            },
            function(info){
                Ext.toast(info);
            }
        );
        // 读取“我的轨迹”列表数据
        Ext.getCmp('EngMonitorTrack_ListTrack').getStore().loadDat(
            function(ret) {},
            function(info) {Ext.toast(info);},
            {
                searchuser:'',//需被查询轨迹的人员
                date:''//查询日期yyyy-MM-dd(为空时查找当天)
            }
        );
    },

    onEngMonitorTrack_BtnReturnTap: function(button, e, eOpts) {
        // “我的轨迹”页面- 返回上页
        viewUtil.goLast();
    },

    onEngMonitorElevatorListShow: function(component, eOpts) {
        // 读取“电梯位置”列表列表
        Ext.getCmp('EngMonitorElevatorList_ListElevator').getStore().loadDat(
            function() {},
            function() {}
        );
    },

    onEngMonitorProjectInfoListInitialize: function(component, eOpts) {
        Ext.getCmp('EngMonitorProjectInfoList_ListProject').getStore().removeAll();
        var me = this;
        curPage = 0;//全局变量
        pagesize = 20;
        // 初始化项目信息列表下拉刷新、上拉加载更多
        var projectInfoList = Ext.getCmp('EngMonitorProjectInfoList_ListProject');
            projectInfoList.setPlugins(
                    [
                        //下拉刷新
                        {
                            autoSnapBack: false,
                            lastUpdatedText: '上次刷新:&nbsp;',
                            loadedText: '已刷新',
                            loadingText: '正在刷新项目信息...',
                            pullText: '下拉刷新...',
                            releaseText: '放开开始刷新...',
                            type: 'pullrefresh',
                            listeners : {
                                latestfetched : function() {
                                    me.doEngMonitor_LoadProjectInfo(1,pagesize,'','refresh');
                            	}
                            }
                        },
                    ]);
        //监听滑动结束事件
        var scroller = projectInfoList.getScrollable().getScroller();
        scroller.on('scrollend',function(scroll, x, y, eOpts){
            if(curPage===0){
                return;
            }
            //滑动到底部加载更多
            if(y+scroller.getContainerSize().y==scroller.getSize().y){
                console.log('loadmore');
                loadMask.show();
                var scrollparm = {
                    scroller:scroller,
                    x:x,
                    y:y+projectInfoList.getItemHeight()+20+16//Item的高度+Tpl样式中各种边距
                };
                if(!Ext.getCmp('EngMonitorProjectInfoList_Search')){
                    loadMask.hide();
                    return;
                }
                var keyword = Ext.getCmp('EngMonitorProjectInfoList_Search').getValue();
                if(!keyword){
                    keyword='';
                }
                me.doEngMonitor_LoadProjectInfo(
                    ++curPage,
                    pagesize,
                    keyword,
                    'loadmore',
                    scrollparm
                );
            }
        });
        me.doEngMonitor_LoadProjectInfo(1,pagesize,'','firstload');
    },

    onEngMonitorProjectElevatorListInitialize: function(component, eOpts) {
        var me = this;
        var record = component.initialConfig.parm.record;
        projectid = record.get('projectid');//全局变量，搜索方法中用到
        var title = record.get('projectname');
        if(title.length>12){
            title = title.substring(0,12)+'...';
        }
        Ext.getCmp('EngMonitorProjectElevatorList_Toolbar').setTitle(title);
        // var curPage = 1;
        var pagesize = 2000;
        // 初始化电梯列表下拉刷新、上拉加载更多
        var elevatorList = Ext.getCmp('EngMonitorProjectElevatorList_ListElevator');
            elevatorList.setPlugins(
                    [
                        //下拉刷新
                        {
                            autoSnapBack: false,
                            lastUpdatedText: '上次刷新:&nbsp;',
                            loadedText: '已刷新',
                            loadingText: '正在刷新电梯列表...',
                            pullText: '下拉刷新...',
                            releaseText: '放开开始刷新...',
                            type: 'pullrefresh',
                            listeners : {
                                latestfetched : function() {
                                    me.doEngMonitor_LoadElevatorInfo(projectid,1,pagesize,'');
                            	}
                            }
                        },
                    ]);

        this.doEngMonitor_LoadElevatorInfo(projectid,1,pagesize,'');
    },

    onEngMonitorElevatorList_BtnReturnTap: function(button, e, eOpts) {
        // “电梯位置”列表 - 返回上页
        viewUtil.goLast();
    },

    onEngMonitorProjectInfoList_BtnReturnTap: function(button, e, eOpts) {
        // “项目信息”列表 - 返回上页
        viewUtil.goLast();
    },

    onEngMonitorProjectElevatorList_BtnReturnTap: function(button, e, eOpts) {
        // “电梯”列表 - 返回上页
        viewUtil.goLast();
    },

    onEngMonitorElevatorList_ListElevatorItemTap: function(dataview, index, target, record, e, eOpts) {
        // 查看电梯详细数据
        viewUtil.goNext('Engineer.EngMonitorElevatorInfo');
    },

    onEngMonitorProjectInfoList_ListProjectItemTap: function(dataview, index, target, record, e, eOpts) {
        // 查看该项目电梯列表(新)
        viewUtil.goNext('Engineer.EngMonitorProjectElevatorList',{record:record});
    },

    onEngMonitorProjectElevatorList_ListElevatorItemTap: function(dataview, index, target, record, e, eOpts) {
        // 查看该项目电梯详细信息(新)
        viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('prono')});
    },

    onEngMonitorElevatorInfo_BtnReturnTap: function(button, e, eOpts) {
        // 电梯详细数据页面- 返回上页
        viewUtil.goLast();
    },

    onEngMonitor_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        //搜索项目，电梯，人员，驻点
    },

    onEngMonitor_SearchProjectChange: function(textfield, newValue, oldValue, eOpts) {
        //地图上搜索项目
        // this.doEngMonitor_LocalSearch(textfield,
        //                             {storeid:'eng_projectlocation',
        //                              mapid:'EngProject_map',
        //                              type:'project'}
        //                             );
        this.doEngMonitor_NetworkSearch(textfield,
                                        {mapid:'EngProject_map',
                                         type:'project',
        								rangradius:5000000});
    },

    onEngMonitor_SearchLiftChange: function(textfield, newValue, oldValue, eOpts) {
        //地图上搜索电梯
        var me = this;
        // me.doEngMonitor_LocalSearch(textfield,
        //                             {storeid:'eng_elevatorlocation',
        //                              mapid:'EngLift_map',
        //                              type:'elevator'}
        //                             );
        this.doEngMonitor_NetworkSearch(textfield,
                                        {mapid:'EngLift_map',
                                         type:'elevator',
        								rangradius:5000000});
    },

    onEngMonitor_SearchUserChange: function(textfield, newValue, oldValue, eOpts) {
        //地图上搜索人员
        var me = this;
        // me.doEngMointor_LoadUser(map.lookup('EngUser_map'));
        // me.doEngMonitor_LocalSearch(textfield,
        //                             {storeid:'eng_userlocation',
        //                              mapid:'EngUser_map',
        //                              type:'user'}
        //                             );
        this.doEngMonitor_NetworkSearch(textfield,
                                        {mapid:'EngUser_map',
                                         type:'user',
        									rangradius:5000000});
    },

    onEngMonitor_SearchPointChange: function(textfield, newValue, oldValue, eOpts) {
        //地图上搜索驻点
        var me = this;
        // me.doEngMointor_LoadPoint(map.lookup('EngPoint_map'));
        // me.doEngMonitor_LocalSearch(textfield,
        //                             {storeid:'eng_pointlocation',
        //                              mapid:'EngPoint_map',
        //                              type:'point'}
        //                             );
        this.doEngMonitor_NetworkSearch(textfield,
                                        {mapid:'EngPoint_map',
                                         type:'point',
        								 rangradius:5000000});
    },

    onEngMonitorProjectInfoList_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        //本地搜索项目信息
        // Ext.getCmp('EngMonitorProjectInfoList_ListProject').getStore().filteDat(textfield.getValue());
        //联网搜索项目信息
        var keyword = textfield.getValue();
        if(!keyword||keyword===''){
            keyword = '';
        //     return;
        }
        // curPage = 1;
        this.doEngMonitor_LoadProjectInfo(1,pagesize,keyword,'search');
    },

    onEngMonitorProjectElevatorList_SearchChange: function(textfield, newValue, oldValue, eOpts) {
        //本地搜索电梯信息
        // Ext.getCmp('EngMonitorProjectElevatorList_ListElevator').getStore().filteDat(textfield.getValue());
        //联网搜索电梯信息
        if(!textfield.getValue()||textfield.getValue()===''){
            return;
        }
        this.doEngMonitor_LoadElevatorInfo(projectid,1,pagesize,textfield.getValue());
    },

    onEngMonitorElevatorInfoInitialize: function(component, eOpts) {

        var prono = component.initialConfig.parm.prono;
        if(!prono){
            return;
        }
        //获取电梯详细信息
        var store = dataUtil.createStore('eng_elevatorinfo');
        store.loadDat(

            function(){
                //填充显示
                Ext.getCmp('EngMonitorElevator_Form').setRecord(store.getAt(0));
                var typeName = store.getAt(0).get('typename') || '无';
                Ext.getCmp('EngMonitorElevatorInfo_TypeName').setHtml(typeName);
            },
            //读取失败返回提示信息
            function(info){
                Ext.toast(info);
            },
            {prono:prono}
        );
        Ext.getCmp('EngMonitorElevatorInfo_Prono').setHtml(prono);

    },

    initMap: function(divId) {
        // 初始化地图
        var me = this;
        var lng = 113.237604,
            lat = 23.12382;
        //当前位置
        var location = map.getLocation();
        if(location){
            lng = location.lng;
            lat = location.lat;
        }
        //创建地图
        map.create(divId,
                   {
                       lng:lng,
                       lat:lat,
                       zoom:15
                   }
                  );

        var amap = map.lookup(divId);
        var rangradius = 2000;
        //鼠标滚动放大缩小
        amap.enableScrollWheelZoom();

        //加载当前位置附近两公里以内的项目，电梯，人员，驻点
        switch(divId){
            case 'EngProject_map':
                me.doEngMointor_LoadProject(amap,'',rangradius);
                break;
            case 'EngLift_map':
                //标记我当前的位置
                map.addMarker(amap,
                      {
                           img:'resources/images/marker_me.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:location.lng, lat:location.lat,
                           title:'我在这里',
                           content: location.addr,
                      });
        //电梯暂不显示
        //         me.doEngMointor_LoadElevator(amap,'',rangradius);
                break;
            case 'EngUser_map':
                me.doEngMointor_LoadUser(amap,'',rangradius);
                break;
            case 'EngPoint_map':
                me.doEngMointor_LoadPoint(amap,'',rangradius);
                break;
        }
    },

    doEngMointor_LoadProject: function(amap,keyword,rangradius) {
        var me = this;
        //当前位置经纬度
        var location = map.getLocation();
        //当前位置及搜索距离
        var adapterParm = {
            lon:location.lng,
            lat:location.lat,
            searchker:keyword,
            rangradius:rangradius
        };
        //创建store加载项目数据，在地图上添加标记
        dataUtil.createStore('eng_projectlocation').loadDat(
            function(ret){

                me.addMarker(amap,ret.items,'project');
            },
            function(info){
                Ext.toast(info);
            },
            adapterParm
        );
    },

    doEngMointor_LoadElevator: function(amap,keyword,rangradius) {
        var me = this;
        //当前位置经纬度
        var location = map.getLocation();
        var adapterParm = {
            lon:location.lng,
            lat:location.lat,
            searchker:keyword,
            rangradius:rangradius
        };
        //创建store加载电梯数据，在地图上添加标记
        dataUtil.createStore('eng_elevatorlocation').loadDat(
            function(ret){
                me.addMarker(amap,ret.items,'elevator');
            },
            function(info){
                Ext.toast(info);
            },
            adapterParm
        );
    },

    doEngMointor_LoadUser: function(amap,keyword,rangradius) {
        var me = this;
        //当前位置经纬度
        var location = map.getLocation();
        var adapterParm = {
            lon:location.lng,
            lat:location.lat,
            searchker:keyword,
            rangradius:rangradius
        };
        //创建store加载人员数据，在地图上添加标记
        dataUtil.createStore('eng_userlocation').loadDat(
            function(ret){
                me.addMarker(amap,ret.items,'user');
            },
            function(info){
                Ext.toast(info);
            },
            adapterParm
        );
    },

    doEngMointor_LoadPoint: function(amap,keyword,rangradius) {
        var me = this;
        //当前位置经纬度
        var location = map.getLocation();
        var adapterParm = {
            lon:location.lng,
            lat:location.lat,
            searchker:keyword,
            rangradius:rangradius
        };
        //创建store加载驻点数据，在地图上添加标记
        dataUtil.createStore('eng_pointlocation').loadDat(
            function(ret){
                me.addMarker(amap,ret.items,'point');
            },
            function(info){
                Ext.toast(info);
            },
            adapterParm
        );
    },

    addMarker: function(amap,items,type) {
        //清除地图上的所有标记
        amap.clearOverlays();
        var location = map.getLocation();
        //标记我当前的位置
        map.addMarker(amap,
                      {
                           img:'resources/images/marker_me.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:location.lng, lat:location.lat,
                           title:'我在这里',
                           content: location.addr,
                      });
        if(items.length===0){
           Ext.toast('未找到相关数据');
           return;
        }
        var points=[];
        var point;
        var fn;
        switch(type){
            case 'project':
                fn = function(item){
                    map.addMarker(amap,
                      {
                           img:'resources/images/marker_project.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:item.data.lon, lat:item.data.lat,
                           content:
                          '<h1 style="font-size:12px;color:#9e9e9e;">项目名称</h1>'+item.data.projectname+"<br><br>"+
                          '<h1 style="font-size:12px;color:#9e9e9e;">项目地址</h1>'+item.data.projectaddress+"<br><br>"+
                          '<h1 style="font-size:12px;color:#9e9e9e;">电梯台数</h1>'+item.data.elevatornum+'台',
                      });
                };
                break;
            case 'elevator':
                fn = function(item){
                    map.addMarker(amap,
                      {
                           img:'resources/images/marker_lift.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:item.data.lon, lat:item.data.lat,
                           content:
                          '<h1 style="font-size:12px;color:#9e9e9e;">注册码</h1>'+item.data.prono+'<br><br>'+
                          '<h1 style="font-size:12px;color:#9e9e9e;">项目名称</h1>'+item.data.projectname+'<br><br>'+
                          '<h1 style="font-size:12px;color:#9e9e9e;">项目地址</h1>'+item.data.projectaddress,
                      });
                };
                break;
            case 'user':
                fn = function(item){
                    map.addMarker(amap,
                      {
                           img:'resources/images/marker_staff.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:item.data.lon, lat:item.data.lat,
                           content:
                          '<h1 style="font-size:12px;color:#9e9e9e;">姓名</h1>'+item.data.username+'<br><br>'+
                          '<h1 style="font-size:12px;color:#9e9e9e;">职务</h1>'+item.data.class1name+'<br><br>'+
                          '<h1 style="font-size:12px;color:#9e9e9e;">状态</h1>'+item.data.stuts,
                      });
                };
                break;
            case 'point':
                fn = function(item){
                    map.addMarker(amap,
                      {
                           img:'resources/images/marker_point.png',
                           sizeX:50,sizeY:50,
                           offsetX:5,offsetY:5,
                           lng:item.data.lon, lat:item.data.lat,
                           content:
                          '<h1 style="font-size:12px;color:#9e9e9e;">保养站/班组名称</h1>'+item.data.storagename+'<br><br>'+
                          '<h1 style="font-size:12px;color:#9e9e9e;">班组长</h1>'+item.data.maintainhead+'<br><br>',
                      });
                };
                break;
        }
        //画标记
        for(var i = 0; i<items.length; i++){
            point = new BMap.Point(items[i].data.lon,
                                   items[i].data.lat);
            points[i]=point;
            fn(items[i]);
        }
        //调整到最佳视野
        var viewport = amap.getViewport(points);
        amap.setZoom(viewport.zoom);
        amap.panTo(viewport.center);

    },

    /*

        本地搜索，在已经加载的数据中搜索

    */
    doEngMonitor_LocalSearch: function(textfield,parm) {
        //地图上搜索项目
        var me = this;
        var data = Ext.getStore(parm.storeid).filteDat(textfield.getValue());
        var items = Ext.getStore(parm.storeid).data.items;
        if(!items||items.length===0){
            Ext.toast('未找到"'+textfield.getValue()+'"相关的数据');
            return;
        }
        var amap = map.lookup(parm.mapid);
        me.addMarker(amap,items,parm.type);
    },

    /*

        联网搜索，在服务器上搜索，获取新数据

    */
    doEngMonitor_NetworkSearch: function(textfield,parm) {
        //搜索框为空时不进行搜索
        if(!textfield.getValue()||textfield.getValue()===''){
           return;
        }
        //地图上联网搜索项目
        var me = this;
        var amap = map.lookup(parm.mapid);
        switch(parm.type){
            case 'project':
                me.doEngMointor_LoadProject(amap,textfield.getValue(),parm.rangradius);
                break;
            case 'elevator':
                me.doEngMointor_LoadElevator(amap,textfield.getValue(),parm.rangradius);
                break;
            case 'user':
                me.doEngMointor_LoadUser(amap,textfield.getValue(),parm.rangradius);
                break;
            case 'point':
                me.doEngMointor_LoadPoint(amap,textfield.getValue(),parm.rangradius);
                break;
        }

    },

    doEngMonitor_LoadProjectInfo: function(page, pagesize, searchkey, action, scrollparm) {
        var me = this;
        // 读取“项目信息”列表
        Ext.getCmp('EngMonitorProjectInfoList_ListProject').getStore().loadDat(
            function(ret,resetCurPage) {
                if(scrollparm){
                    scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);
                    loadMask.hide();
                }
                if(resetCurPage){
                    curPage = 1;//获取新数据成功，页数重置为1
                }

            },

            function(info,cutOne) {
                Ext.toast(info);
                if(cutOne){
                    curPage--;//加载更多数据失败，页数减一
                }
                if(info==='没有更多数据！'){
                    curPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件
                }
                loadMask.hide();

            },
            {
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkey
            },
            action
        );
    },

    doEngMonitor_LoadElevatorInfo: function(projectid, page, pagesize, searchkey) {

        // 读取“电梯”列表
        Ext.getCmp('EngMonitorProjectElevatorList_ListElevator').getStore().loadDat(
            function(ret) {
                if(!ret||ret.length===0){
                    Ext.toast('没有相关数据');
                }
            },
            function(info) {
                Ext.toast(info);
            },
            {
                projectid:projectid,
                curpagenum:page,
                pagesize:pagesize,
                searchkey:searchkey
            }
        );
    }

});