/*
 * File: app/controller/Engineer/EngMaintainController.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('liftnet.controller.Engineer.EngMaintainController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "container#EngMaintain": {
                initialize: 'onEngMaintainInitialize'
            },
            "searchfield#EngMaintain_FldSearch": {
                change: 'onEngMaintain_FldSearchChange'
            },
            "list#EngMaintain_ListTask": {
                itemtap: 'onEngMaintain_ListTaskItemTap'
            },
            "panel#EngMaintainTask": {
                initialize: 'onEngMaintainTaskInitialize'
            },
            "button#EngMaintainTask_Btn": {
                tap: 'onEngMaintainTask_BtnTap'
            },
            "button#EngMaintainTask_BtnReturn": {
                tap: 'onEngMaintainTask_BtnReturnTap'
            },
            "textfield#EngMaintainTask_taskname": {
                focus: 'onEngMaintainTask_tasknameFocus'
            },
            "list#EngMaintainTask_DetailList": {
                itemtap: 'onEngMaintainTask_DetailListItemTap'
            },
            "button#EngMaintain_MainWorkClickBtn": {
                tap: 'onEngMaintain_MainWorkClickBtnTap'
            },
            "container#EngMaintainS": {
                initialize: 'onEngMaintainSInitialize'
            },
            "list#EngMaintain_ListPlan": {
                itemtap: 'onEngMaintain_ListPlanItemTap'
            },
            "panel#EngMaintainPlan": {
                initialize: 'onEngMaintainPlanInitialize'
            },
            "list#EngmaintainPlanCCList": {
                itemtap: 'onEngmaintainPlanCCListItemTap'
            },
            "container#EngContainer_AcceptMap": {
                initialize: 'onEngContainer_AcceptMapInitialize'
            },
            "panel#EngAcceptMap_location": {
                tap: 'onEngAcceptMap_locationTap'
            },
            "image#EngMaintainP_camera": {
                tap: 'onEngMaintainP_cameraTap'
            },
            "image#EngMaintainP_photo": {
                tap: 'onEngMaintainP_photoTap'
            },
            "image#EngMaintainP_photoX": {
                tap: 'onEngMaintainP_photoXTap'
            },
            "button#source_camearM": {
                tap: 'onSource_camearMTap'
            },
            "button#source_albumM": {
                tap: 'onSource_albumMTap'
            },
            "panel#EngReception": {
                initialize: 'onEngReceptionInitialize'
            },
            "button#EngRecption_BtnJS": {
                tap: 'onEngRecption_BtnJSTap'
            },
            "button#EngRecption_BtnTH": {
                tap: 'onEngRecption_BtnTHTap'
            }
        }
    },

    /*

        ********** 保养业务 标签 **********

    */
    onEngMaintainInitialize: function(component, eOpts) {
        var me = this;

        // 初始化下拉刷新、滑动按钮插件
        var maintainList = Ext.getCmp('EngMaintain_ListTask');
        maintainList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新保养待办...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            me.doEngMaintain_LoadMaintainList();
                    	}
                    }
                 }
        //            ,
        //         {
        //             xclass: 'ux.SlideActions',
        //             openPosition: 75,
        //             buttons:
        //                 [
        //                     {
        //                         xtype: 'button',
        //                         baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',
        //                         text: '1',
        //                         initial: function(button) {
        //                             liftnet.app.getController('Engineer.EngMaintainController').
        //                                 doEngMaintain_InitialNextStateButton(button, 0);
        //                         },
        //                         listeners: {
        //                             tap: function(button, e){
        //                                 e.stopPropagation();
        //                                 return false;
        //                             },
        //                             scope: this
        //                         },
        //                         handler: function(button, e) {
        //                             maintainList.fireEvent('hide');
        //                             liftnet.app.getController('Engineer.EngMaintainController').
        //                                 doEngMaintain_Process({
        //                                     record: button.getRecord(),
        //                                     operationIndex: 0
        //                                 });
        //                         }
        //                     }
        //                 ]
        //         }
            ]

        );

        // var f1 = Ext.getCmp('EngMaintain_date1');
        // var f2 = Ext.getCmp('EngMaintain_date2');
        // f1.suspendEvents();
        // f2.suspendEvents();
        // f1.setValue(new Date());
        // f2.setValue(new Date());
        // f1.resumeEvents(true);
        // f2.resumeEvents(true);

            var maintainTaskList=Ext.getCmp('EngMaintain_ListTaskRec');

            maintainTaskList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新保养待办...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            me.doEngMaintain_LoadMaintainTaskRecList();
                    	}
                    }
                 },
                {
                    xclass: 'ux.SlideActions',
                    openPosition: 175,
                    buttons:
                        [
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',
                                text: '1',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 0);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainTaskList.fireEvent('hide');
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_Process({
                                            record: button.getRecord(),
                                            operationIndex: 0
                                        });
                                }
                            },
                            // 按钮2
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-dark',
                                text: '2',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 1);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainTaskList.fireEvent('hide'); // 隐藏列表的滑动按钮组
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_Process({
                                            record: button.getRecord(),
                                            operationIndex: 1
                                        });
                                }
                            },
                            // 按钮3
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',
                                text: '3',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 2);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainTaskList.fireEvent('hide'); // 隐藏列表的滑动按钮组
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_Process({
                                            record: button.getRecord(),
                                            operationIndex: 2
                                        });
                                }
                            }
                        ]
                }
            ]

        );
    },

    onEngMaintain_FldSearchChange: function(textfield, newValue, oldValue, eOpts) {
        //this.doEngMaintain_LoadMaintainList();
        Ext.getCmp('EngMaintain_ListTask').getStore().filteDat(textfield.getValue());
    },

    onEngMaintain_ListTaskItemTap: function(dataview, index, target, record, e, eOpts) {
        // 保养业务 - 进入任务明细
        viewUtil.goNext('Engineer.EngMaintainTask', {record:record});
    },

    onEngMaintainTaskInitialize: function(component, eOpts) {
        // 保养计划操作 - 到场、拍照、扫描、完工
        loadMask.show();

        var me = this;
        var userid = global.getUserId();
        var now = Ext.Date.format(new Date(), 'Y-m-d H:i');
        var position = map.getLocation().addr;
        if(!position || position==='') position = '(未知位置)';

        var taskrecord = component.initialConfig.parm.record; // 待办记录
        var rowid = taskrecord.get('rowid');

        // var button = Ext.getCmp('EngMaintainTask_Btn');
        // var panel = Ext.getCmp('EngMaintainTask_PnlOperation');
        // button.setHidden(true);
        // panel.setHidden(true);


        // 取出保养明细数据
        var store = dataUtil.createStore('by_bymissiondetail');
        store.loadDat(
            function(n) {
                loadMask.hide();
                if(n<1) {
                    Ext.toast('未能读取保养计划数据！');
                    viewUtil.goLast();
                    return;
                }

                // 显示保养任务数据
                var record = store.getData().get(0);
                var state = record.get('ByTaskState');

                // 测试数据(开始)
                if(global.isWorklight()) {
                    state = taskrecord.get('taskstate');
                    switch(state) {
                        case '已完工':
                            record.set('FinishDate', '2015-12-01');
                            record.set('FinishTime', '14:35');

                            record.set('finishtime', '2015-12-01 14:35:23');

                            record.set('B_FinishDate', '2015-12-01');
                            record.set('B_FinishTime', '14:35');
                            record.set('B_FinishAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');
                            break;

                        case '保养中':
                            record.set('arrivetime', '2015-12-01 12:00:51');

                            record.set('B_ArriveDate', '2015-12-01');
                            record.set('B_ArriveTime', '12:00:21');
                            record.set('B_ArriveAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');
                            break;
                        case '未开始':
                            break;

                        default:
                            Ext.toast('1.未知的状态:' + state);
                    }
                }
                //测试数据(完)


                Ext.getCmp('form_by_bymissiondetail').setRecord(record);

                Ext.getCmp('EngMaintainTask_DetailList').setData([{text:'aaa',abc:'hhh'},{text:'bbb',abc:'hhh'},{text:'ccc',abc:'hhh'}]);;

                // 根据待办指示决定明细页面操作按钮个数
              //  button.record = taskrecord;
               // me.doEngMaintain_InitialNextStateButton(button, 0);

                // 没有操作按钮时隐藏明细页面按钮底板
               // panel.setHidden(button.getHidden());
            },
            function() {
                loadMask.hide();
                Ext.toast('未能读取保养计划数据！');
                viewUtil.goLast();
            },
            rowid
        );

    },

    onEngMaintainTask_BtnTap: function(button, e, eOpts) {
        // 保养任务 - 处理
        this.doEngMaintain_Process({
            record: button.record, operationIndex: 0,
            fn: function() { viewUtil.goLast(); } // 操作后关闭窗口
        });
    },

    onEngMaintainTask_BtnReturnTap: function(button, e, eOpts) {
        // 保养任务明细 - 返回首页
        viewUtil.goLast();
    },

    onEngMaintainTask_tasknameFocus: function(textfield, e, eOpts) {
        // 选择班组
        var tpl ='<div class="liftnet-Maintenance-BYWorkList">'+
            '<div class="liftnet-Maintenance-BYWorkList-left">'+
            '<div class="liftnet-font-size14 liftnet-fontColor-darkGray">{taskusername}</div>'+
            '<div class="liftnet-font-size12 liftnet-fontColor-gray">{tasklevel}</div>'+
            '<div class="liftnet-font-size12 liftnet-fontColor-gray">{taskarea}</div>'+
            '</div>'+
            '<div class="liftnet-Maintenance-BYWorkList-right">'+
            '<div class="liftnet-Maintenance-listConBox-state liftnet-font-size12 liftnet-fontColor-gray liftnet-font-right">{storagename}</div>'+
            '<div class="liftnet-font-size12 liftnet-font-right liftnet-fontColor-gray">{tasklinkphone}</div>'+
            '</div>'+
            '</div>';

        viewUtil.goNext('Common.ComSelect', {
                    textfield: textfield,
                    storeid: 'common_MaintainTaskMan',
                    storeparm: {
                        userid: global.getUserId(),
                        //storageid: storageid
                    },
                    itemtpl: tpl,
                    paging: false,
                    allowedit: false,
                    allowsearch: false,
                    fnSetFilter: Ext.emptyFn,
                    fnSelected: function(record) {
                        if(typeof(record)==='string') {
                            Ext.getCmp('form_by_bymissiondetail').setValues({
                                taskname: record
                            });
                        } else {
                            Ext.getCmp('form_by_bymissiondetail').setValues({
                               taskname: record.get('taskusername')+'('+record.get('storagename')+')',

                            });
                        }
                    }
                });
        textfield.blur();
    },

    onEngMaintainTask_DetailListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log(record.data);
    },

    onEngMaintain_MainWorkClickBtnTap: function(button, e, eOpts) {

        viewUtil.goNext('Engineer.EngMaintainPlan');
    },

    onEngMaintainSInitialize: function(component, eOpts) {
        var me = this;
        curPage = 1;//全局变量
        var pagesize = 20;


            var maintainPlanList=Ext.getCmp('EngMaintain_ListPlan');

            maintainPlanList.setPlugins(
            [
                {
                    autoSnapBack: false,
                    lastUpdatedText: '上次刷新:&nbsp;',
                    loadedText: '已刷新',
                    loadingText: '正在刷新保养待办...',
                    pullText: '下拉刷新...',
                    releaseText: '放开开始刷新...',
                    type: 'pullrefresh',
                    listeners : {
                        latestfetched : function() {
                            curPage=1;
                            me.doEngMaintain_LoadMaintainPlanList(curPage,pagesize,'');
                    	}
                    }
                 },
                {
                    xclass: 'ux.SlideActions',
                    openPosition: 80,
                    buttons:
                        [
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',
                                text: '1',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 0);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainPlanList.fireEvent('hide');
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintainPlan_Process({
                                            record: button.getRecord(),
                                            operationIndex: 0
                                        });
                                }
                            },
                            // 按钮2
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-dark',
                                text: '2',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 1);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainPlanList.fireEvent('hide'); // 隐藏列表的滑动按钮组
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintainPlan_Process({
                                            record: button.getRecord(),
                                            operationIndex: 1
                                        });
                                }
                            },
                            // 按钮3
                            {
                                xtype: 'button',
                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',
                                text: '3',
                                initial: function(button) {
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintain_InitialNextStateButton(button, 2);
                                },
                                listeners: {
                                    tap: function(button, e){
                                        e.stopPropagation();
                                        return false;
                                    },
                                    scope: this
                                },
                                handler: function(button, e) {
                                    maintainPlanList.fireEvent('hide'); // 隐藏列表的滑动按钮组
                                    liftnet.app.getController('Engineer.EngMaintainController').
                                        doEngMaintainPlan_Process({
                                            record: button.getRecord(),
                                            operationIndex: 2
                                        });
                                }
                            }
                        ]
                }
            ]

        );



        var moreButton=Ext.getCmp('EngMaintain_MorePButton');
        var scroller = maintainPlanList.getScrollable().getScroller();
        moreButton.on('tap',function(button, e, eOpts){

            var store = Ext.getCmp('EngMaintain_ListPlan').getStore();
            var count =store.getAllCount();

            if(count>0){
                var record = store.getAt(store.getAllCount() - 1);
                console.log('more');
                loadMask.show();
                var scrollparm = {
                    scroller:scroller,
                    x:0,
                    y:0+maintainPlanList.getItemHeight()*count+20+16//Item的高度+Tpl样式中各种边距
                };
                me.doEngMaintain_LoadMaintainPlanList(++curPage,pagesize,'',record);
            }else{
                console.log('no more');
            }


        });

        //监听滑动结束事件

        // scroller.on('scrollend',function(scroll, x, y, eOpts){
        //     //滑动到底部加载更多
        //     if(y+scroller.getContainerSize().y==scroller.getSize().y){
        //         console.log('loadmore');
        //         loadMask.show();
        //         var scrollparm = {
        //             scroller:scroller,
        //             x:x,
        //             y:y+maintainPlanList.getItemHeight()+20+16//Item的高度+Tpl样式中各种边距
        //         };
        //         me.doEngMaintain_LoadMaintainPlanList(++curPage,pagesize,'',scrollparm);
        //     }
        // });

        /*
        初始化查询
        */
            var firstInit=0;
            Ext.getCmp('EngMaintain_BtnTaskStatus').on('tap',function(button, e, eOpts){
                popMenu.show('Engineer.EngNavMaintainStatus', button);
                if(firstInit===0){
                   Ext.getCmp('EngNavMaintainStatus_0').on('tap',function(button0, e, eOpts){
                        curPage=1;
                        me.doEngMaintainPlanFilter(button0.getText());
                        console.log('innerHtml');
                    });

                    Ext.getCmp('EngNavMaintainStatus_1').on('tap',function(button1, e, eOpts){
                        curPage=1;
                        me.doEngMaintainPlanFilter(button1.getText());
                        console.log('innerHtml');
                    });
                    Ext.getCmp('EngNavMaintainStatus_2').on('tap',function(button2, e, eOpts){
                        curPage=1;
                        me.doEngMaintainPlanFilter(button2.getText());
                        console.log('innerHtml');
                    });
                    Ext.getCmp('EngNavMaintainStatus_3').on('tap',function(button3, e, eOpts){
                        curPage=1;
                        me.doEngMaintainPlanFilter(button3.getText());
                        console.log('innerHtml');
                    });
                    firstInit=1;
                }

            });
            Ext.getCmp('EngMaintainPlanS_FldSearch').on('change',
                function(textfield, newValue, oldValue, eOpts){
                    curPage=1;
                    loadMask.show();
                    me.doEngMaintain_LoadMaintainPlanList(1,20,'search');
            });

    },

    onEngMaintain_ListPlanItemTap: function(dataview, index, target, record, e, eOpts) {
        // 保养计划及实绩 - 进入任务明细
        viewUtil.goNext('Engineer.EngMaintainPlanDetail', {record:record});
    },

    onEngMaintainPlanInitialize: function(component, eOpts) {
        // 保养计划操作 - 到场、拍照、扫描、完工
        loadMask.show();

        var me = this;
        var userid = global.getUserId();
        var now = Ext.Date.format(new Date(), 'Y-m-d H:i');
        var position = map.getLocation().addr;
        if(!position || position==='') position = '(未知位置)';

        var taskrecord = component.initialConfig.parm.record; // 待办记录
        var pid = taskrecord.get('pid');

        //var button = Ext.getCmp('EngMaintainPlan_Btn');
        //var panel = Ext.getCmp('EngMaintainPlan_PnlOperation');
        //button.setHidden(true);
        //panel.setHidden(true);

        var pnlArrive = Ext.getCmp('EngMaintainPlan_PnlArrive');
        var pnlFinish = Ext.getCmp('EngMaintainPlan_PnlFinish');
        var btnArrive = Ext.getCmp('EngMaintainPlan_BtnArrive');
        var btnPanel=Ext.getCmp('EngMaintainPlanCC_PnlOperation');//EngMaintainPlan_BtnSave  EngMaintainPlan_BtnSub
        var btnSave=Ext.getCmp('EngMaintainPlan_BtnSave');
        var btnSub=Ext.getCmp('EngMaintainPlan_BtnSub');
        var pnlStart=Ext.getCmp('EngMaintainPlan_PnlStart');




        // 取出保养明细数据
        var store = dataUtil.createStore('by_maintainplandetail');
        store.loadDat(
            function(n) {
                loadMask.hide();
                if(n<1) {
                    Ext.toast('未能读取保养计划数据！');
                    viewUtil.goLast();
                    return;
                }

                // 显示保养任务数据
                var record = store.getData().get(0);
                var state = record.get('ByPlanState');
                var reachstatus=record.get('reachstatus');
                var finishstatus=record.get('finishstatus');


                state = taskrecord.get('flowstatus');

                var canhandle=taskrecord.get('nextstate').length===0?false:true;
                // 测试数据(开始)
                if(!global.isWorklight()) {
                    switch(state) {
                        case '完工':
                            record.set('FinishDate', '2015-12-01');
                            record.set('FinishTime', '14:35');


                            record.set('B_FinishDate', '2015-12-01');
                            record.set('B_FinishTime', '14:35');
                            record.set('B_FinishAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');
                            break;
                        case '到场':
                            record.set('arrivetime', '2015-12-01 12:00:51');

                            record.set('B_ArriveDate', '2015-12-01');
                            record.set('B_ArriveTime', '12:00:21');
                            record.set('B_ArriveAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');
                            break;
                        case '未开始':
                            break;

                        default:
                            Ext.toast('1.未知的状态:' + state);
                    }
                }

                var geoc1 = new BMap.Geocoder();

                if(record.get('reachlon')!=null&&record.get('reachlon')!=''){
                    geoc1.getLocation(
                            new BMap.Point(record.get('reachlon'), record.get('reachlat')),function(result){
                               record.set('B_ArriveAddress',result.address);
                                 Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+record.get('B_ArriveAddress'));
                            }
                         );
                }
                 if(record.get('finishlon')!=null&&record.get('finishlon')!=''){
                    geoc1.getLocation(
                            new BMap.Point(record.get('finishlon'), record.get('finishlat')),function(result){
                               record.set('B_FinishAddress',result.address);
                               Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+record.get('B_FinishAddress'));
                            }
                         );
                }


                //测试数据(完)

                var workdate = record.get('WorkDate') + '(' + record.get('WorkWeekDay') + ')';
                var worktime = record.get('WorkSTime') + '-' + record.get('WorkETime');
              //  Ext.getCmp('EngMaintainTask_Toolbar').setTitle(workdate + ' ' + worktime);
                Ext.getCmp('form_by_maintainplan1').setRecord(record);
                Ext.getCmp('form_by_maintainplan1').setValues({
                    WorkDateWeekDay: workdate,
                    WorkSETime: worktime
                });
                // 时间线节点数据
                Ext.getCmp('B_ArriveDate').setHtml('<span></span>'+record.get('reachdate')+' '+record.get('reachtime'));
                Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+record.get('B_ArriveAddress'));

                Ext.getCmp('B_FinishDate').setHtml('<span></span>'+record.get('finishdate')+' '+record.get('finishtime'));
                Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+record.get('B_FinishAddress'));


                      //显示保养项目
                if(state=='完工'||!canhandle){
                  Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'Y');
                }else if(state=='未开始'){
                    Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'N');
                }else{
                     Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'N');
                }

                // 时间线 - 根据状态显示进度块及操作按钮
                switch(state) {
                    case '未开始':
                        if(canhandle){//有操作权限
                            pnlArrive.setHidden(!true);
                            pnlFinish.setHidden(true);
                            btnArrive.setHidden(!true);
                            btnPanel.setHidden(true);
                            Ext.getCmp('B_ArriveDate').setHtml('<span></span>'+now);
                            Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+position);
                            Ext.getCmp('EngMaintainCheckContent_List').destroy();
                            Ext.getCmp('EngMaintainContain_Img').setHidden(true);
                        }else{//没有操作权限
                            pnlArrive.setHidden(true);
                            pnlFinish.setHidden(true);
                            btnArrive.setHidden(true);
                            btnPanel.setHidden(true);
                            Ext.getCmp('EngContainer_AcceptMap').setHidden(true);
                            Ext.getCmp('EngMaintainCheckContent_List').destroy();
                            Ext.getCmp('EngMaintainContain_Img').setHidden(true);
                            pnlStart.setHidden(true);
                            Ext.getCmp('EngMaintainPlan_TabProcess').setHtml('<div style="margin:30px;text-align:center">暂时没有任务进度！</div>');

                        }
                        break;

                    case '到场':
                        if(canhandle){
                            pnlArrive.setHidden(!true);
                            pnlFinish.setHidden(!true);
                            btnArrive.setHidden(true);
                            Ext.getCmp('B_FinishDate').setHtml('<span></span>'+now);
                            Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+position);

                            Ext.getCmp('EngMaintain_signaturePanel').add({
                                xtype: 'signaturefield',
                                id: 'EngMaintainP_signature',
                                sigWidth: window.innerWidth?window.innerWidth:400,
                                sigHeight: window.innerHeight?window.innerHeight/3:200,
                                label:'<font color="red">签名</font>',
                                labelWidth: '17%'
                            });

                            var signatures=record.get('elesignature');
                            if(signatures!==null&&signatures.length>0){
                                Ext.getCmp('EngMaintainP_signature').setValue('data:image/jpg;base64,' +signatures[0].signpic);
                            }
                        }else{
                            pnlArrive.setHidden(!true);
                            pnlFinish.setHidden(true);
                            btnArrive.setHidden(true);
                            btnPanel.setHidden(true);
                            Ext.getCmp('EngContainer_AcceptMap').setHidden(true);

                             //显示照片
                        var pictures1 = record.get('pictures');//照片信息
                        if(pictures1!==null&&pictures1.length>0){
                            for(var z1=0;z1<pictures1.length;z1++){
                                var index1 = z1+1;
                                var ImgID1 = 'EngMaintainP_photo_'+index1;
                                var pictureBase641 = pictures1[z1].pic;
                                var ImgSrc1 = 'data:image/jpg;base64,' +pictureBase641;

                                Ext.getCmp(ImgID1).setSrc(ImgSrc1);
                                Ext.getCmp(ImgID1).setItemId('EngMaintainP_photoX');
                            }

                            //没图片信息就把图片隐藏
                            for(var k1=1;k1<7;k1++){
                                var img1 = 'EngMaintainP_photo_'+k1;
                                var imgsrc1 = Ext.getCmp(img1).getSrc();
                                if(imgsrc1==='resources/images/camera.png'||imgsrc1=='resources/images/notPhoto.png'){
                                    Ext.getCmp(img1).setHidden(true);

                                }
                            }

                        }else{
                            //没图片信息就把图片隐藏
                            for(var u1 = 1;u1<7;u1++){
                                var imgN1 = 'EngMaintainP_photo_'+u1;
                                Ext.getCmp(imgN1).setHidden(true);
                            }
                        }
                        var signatures1=record.get('elesignature');
                        if(signatures1!==null&&signatures1.length>0){

                            Ext.getCmp('EngMaintain_signaturePanel').setHtml(
                                '<div style="float:left;width:30%;line-height:45px;color:red;">电子签名</div>'+
                                '<img src="data:image/jpeg;base64,'+signatures1[0].signpic+'" width="90" height="45">'
                            );
                        }
                        }


                        break;

                    case '完工':
                        pnlArrive.setHidden(!true);
                        pnlFinish.setHidden(!true);
                        btnArrive.setHidden(true);
                        btnPanel.setHidden(true);
                        Ext.getCmp('EngContainer_AcceptMap').setHidden(true);
                        //Ext.getCmp(''EngContainer_AcceptMapParent).destroy();

                         //显示照片
                        var pictures = record.get('pictures');//照片信息
                        if(pictures!==null&&pictures.length>0){
                            for(var z=0;z<pictures.length;z++){
                                var index = z+1;
                                var ImgID = 'EngMaintainP_photo_'+index;
                                var pictureBase64 = pictures[z].pic;
                                var ImgSrc = 'data:image/jpg;base64,' +pictureBase64;

                                Ext.getCmp(ImgID).setSrc(ImgSrc);
                                Ext.getCmp(ImgID).setItemId('EngMaintainP_photoX');
                            }

                            //没图片信息就把图片隐藏
                            for(var k=1;k<7;k++){
                                var img = 'EngMaintainP_photo_'+k;
                                var imgsrc = Ext.getCmp(img).getSrc();
                                if(imgsrc==='resources/images/camera.png'||imgsrc=='resources/images/notPhoto.png'){
                                    Ext.getCmp(img).setHidden(true);

                                }
                            }

                        }else{
                            //没图片信息就把图片隐藏
                            for(var u = 1;u<7;u++){
                                var imgN = 'EngMaintainP_photo_'+u;
                                Ext.getCmp(imgN).setHidden(true);
                            }
                        }
                        var signatures2=record.get('elesignature');
                        if(signatures2!==null&&signatures2.length>0){

                            Ext.getCmp('EngMaintain_signaturePanel').setHtml(
                                '<div style="float:left;width:30%;line-height:45px;color:red;">电子签名</div>'+
                                '<img src="data:image/jpeg;base64,'+signatures2[0].signpic+'" width="90" height="45">'
                            );
                        }

                        break;

                    default:
                        Ext.toast('2.未知的状态:' + state);
                }

                // 没有进度则隐藏进度面板
                if(pnlArrive.getHidden()&&
                   pnlFinish.getHidden()) {
                    //Ext.getCmp('EngMaintainPlan_TabProcess').destroy();
                }

                // 根据待办指示决定明细页面操作按钮个数
              //  button.record = taskrecord;
              //  me.doEngMaintain_InitialNextStateButton(button, 0);

                // 没有操作按钮时隐藏明细页面按钮底板
             //   panel.setHidden(button.getHidden());


                btnArrive.on('tap', function() {
            me.doEngMaintainPlan_Process2({
                record: record, operationIndex: '到场',
                fn: function() { viewUtil.goLast(); }
            });
        });
        btnSave.on('tap', function() {
            me.doEngMaintainPlan_Process2({
                record: record, operationIndex: '保存',
                fn: function() { viewUtil.goLast(); }
            });
        });
        btnSub.on('tap', function() {
            me.doEngMaintainPlan_Process2({
                record: record, operationIndex: '提交',
                fn: function() { viewUtil.goLast(); }
            });
        });
                console.log('component.initialConfig.parm.Fin>'+component.initialConfig.parm.Fin);
                if(component.initialConfig.parm.Fin&&component.initialConfig.parm.Fin==='Y'){
                    Ext.getCmp('EngMaintainPlan_MTabPanel').setActiveItem(2);
                }
            },
            function() {
                loadMask.hide();
                Ext.toast('未能读取保养计划数据！');
                viewUtil.goLast();
            },
            pid
        );

    },

    onEngmaintainPlanCCListItemTap: function(dataview, index, target, record, e, eOpts) {
        // 如果点击了列表的图标区域，则改变状态
        if(e.target.id==='statusArea') {
            switch(record.get('checkverdict')) {
                case '√':
                    newStatus = '×';
                    break;
                case '×':
                    newStatus = '/';
                    break;
                case '/':
                    newStatus = '√';
                    break;
            }
        //console.log(Ext.getCmp('EngmaintainPlanCCList').getStore());
            // 更改数据记录
            record.set('checkverdict', newStatus);
        }
    },

    onEngContainer_AcceptMapInitialize: function(component, eOpts) {
         var me = this;
        console.log('____________MapInitialize__________________');
        var p = map.getLocation();//取位置信息
        if(!p.lat || !p.lng){
        p.lat = 23.123819;//纬度
        p.lng = 113.237778;//经度
        }


        // 实时监控-地图
        me.doEngFault_AcceptMap1('EngAcceptMap',p);



        //bmap.addEventListener("click", theLocation);
        console.log('____________MapInitialize__________________');
    },

    onEngAcceptMap_locationTap: function(panel) {
                console.log('.......EngMapTap..........');
                //获取当前经度和纬度
                var lng = Ext.getCmp('EngAcceptMap_lng').getValue();
                var lat = Ext.getCmp('EngAcceptMap_lat').getValue();
                console.log(lng+'____'+lat);

                var me=this;
                viewUtil.goNext('Engineer.AcceptMap_adjust',{lng:lng,lat:lat,fc:function(element, eOpts){

            var lng = Ext.getCmp('Adujust_lng').getValue();
            var lat = Ext.getCmp('Adujust_lat').getValue();
            var getlnglat = function(e){
                var map = new BMap.Map("EngProject_map1");
                var pointA = new BMap.Point(e.point.lng,e.point.lat);
                var pointB = new BMap.Point(lng,lat);
                //if((map.getDistance(pointA,pointB)).toFixed(2)>2000){
                //    Ext.toast('请选择离当前位置两公里范围的地点,'+(map.getDistance(pointA,pointB)).toFixed(2));
                //}else{
                //}

                console.log(e.point.lng+'____+__'+e.point.lat);

                var parm = {
                    lng:e.point.lng,
                    lat:e.point.lat
                };
                Ext.getCmp('Adujust_lng').setValue(e.point.lng);
                Ext.getCmp('Adujust_lat').setValue(e.point.lat);
                me.doEngFault_AcceptMap1('EngAcceptMap',parm);
                viewUtil.goLast();
            };
         console.log('........EngMapTap.........');
            map.create2('EngProject_map1',{lng:lng,lat:lat,zoom:16,fc:getlnglat});

        }});
    },

    onEngMaintainP_cameraTap: function(image, e, eOpts) {
        var me = this;

        Ext.getCmp('camera_showM').show();
        /*console.log('-------进入拍照功能');

        var source='CAMEAR';

        var parm = {
            callback :function(filename){
                    for(var i=1;i<7;i++){
                        var ImgID = 'EngMaintainP_photo_'+i;
                        var Img = Ext.getCmp(ImgID);
                        var ImgSrc = Ext.getCmp(ImgID).getSrc();

                        if(filename!==''){
                        if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){
                            Img.setSrc(filename);
                            Img.setItemId('EngMaintainP_photo');

                            if(i!==6){
                                var z = i+1;
                                var NextImgID = 'EngMaintainP_photo_'+z;
                                console.log(NextImgID);
                                var NextImg = Ext.getCmp(NextImgID);
                                var NextImgSrc = Ext.getCmp(NextImgID).getSrc();
                                if(NextImgSrc=='resources/images/notPhoto.png' ){
                                    var IMGSHOW = true;
                                    for(var j=1;j<7;j++){
                                        var PID = 'EngMaintainP_photo_'+j;
                                        var P = Ext.getCmp(PID);
                                        var PSrc = Ext.getCmp(PID).getSrc();
                                        if(PSrc==='resources/images/camera.png'){
                                            IMGSHOW = false;
                                        }

                                    }
                                    if(IMGSHOW){
                                    NextImg.setItemId('EngMaintainP_camera');
                                    NextImg.setSrc('resources/images/camera.png');
                                    }
                                }
                            }

                            return;
                        }
                        }
                    }
            },//回调函数
            source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM
            direction:'FRONT',// 前镜头或后镜头，FRONT/BACK
            width:640,	//width
            height:640 // height
        };
        phone.takePhoto(parm);*/
    },

    onEngMaintainP_photoTap: function(image, e, eOpts) {
        //点击图片时进入另一页面显示图片
        console.log('----ImgID----');
        var ImgID = image.getId();
        console.log(ImgID);
        console.log('----ImgID----');
        viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'N',NextImgId:'EngMaintainP_photo_',fcname:'EngMaintainP_camera'});
    },

    onEngMaintainP_photoXTap: function(image, e, eOpts) {
         //点击图片时进入另一页面显示图片
                console.log('----ImgID----');
                var ImgID = image.getId();
                console.log(ImgID);
                console.log('----ImgID----');
                viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'Y',NextImgId:'EngMaintainP_photo_',fcname:'EngMaintainP_camera'});
    },

    onSource_camearMTap: function(button, e, eOpts) {
        Ext.getCmp('camera_showM').hide();
        console.log('-------进入拍照功能');

                var source='CAMEAR';

                var parm = {
                    callback :function(filename){
                            for(var i=1;i<7;i++){
                                var ImgID = 'EngMaintainP_photo_'+i;
                                var Img = Ext.getCmp(ImgID);
                                var ImgSrc = Ext.getCmp(ImgID).getSrc();

                                if(filename!==''){
                                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){
                                    Img.setSrc(filename);
                                    Img.setItemId('EngMaintainP_photo');

                                    if(i!==6){
                                        var z = i+1;
                                        var NextImgID = 'EngMaintainP_photo_'+z;
                                        console.log(NextImgID);
                                        var NextImg = Ext.getCmp(NextImgID);
                                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();
                                        if(NextImgSrc=='resources/images/notPhoto.png' ){
                                            var IMGSHOW = true;
                                            for(var j=1;j<7;j++){
                                                var PID = 'EngMaintainP_photo_'+j;
                                                var P = Ext.getCmp(PID);
                                                var PSrc = Ext.getCmp(PID).getSrc();
                                                if(PSrc==='resources/images/camera.png'){
                                                    IMGSHOW = false;
                                                }

                                            }
                                            if(IMGSHOW){
                                            NextImg.setItemId('EngMaintainP_camera');
                                            NextImg.setSrc('resources/images/camera.png');
                                            }
                                        }
                                    }

                                    return;
                                }
                                }
                            }
                    },//回调函数
                    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM
                    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK
                    width:640,	//width
                    height:640 // height
                };
                phone.takePhoto(parm);
    },

    onSource_albumMTap: function(button, e, eOpts) {
        Ext.getCmp('camera_showM').hide();
        console.log('-----进入相册');
        var parm = {
            callback :function(filename){
                for(var i=1;i<7;i++){
                    var ImgID = 'EngMaintainP_photo_'+i;
                    var Img = Ext.getCmp(ImgID);
                    var ImgSrc = Ext.getCmp(ImgID).getSrc();

                    if(filename!==''){
                        if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){
                            Img.setSrc(filename);
                            Img.setItemId('EngMaintainP_photo');

                            if(i!==6){
                                var z = i+1;
                                var NextImgID = 'EngMaintainP_photo_'+z;
                                console.log(NextImgID);
                                var NextImg = Ext.getCmp(NextImgID);
                                var NextImgSrc = Ext.getCmp(NextImgID).getSrc();
                                if(NextImgSrc=='resources/images/notPhoto.png' ){
                                    var IMGSHOW = true;
                                    for(var j=1;j<7;j++){
                                        var PID = 'EngMaintainP_photo_'+j;
                                        var P = Ext.getCmp(PID);
                                        var PSrc = Ext.getCmp(PID).getSrc();
                                        if(PSrc==='resources/images/camera.png'){
                                            IMGSHOW = false;
                                        }

                                    }
                                    if(IMGSHOW){
                                        NextImg.setItemId('EngMaintainP_camera');
                                        NextImg.setSrc('resources/images/camera.png');
                                    }
                                }
                            }

                            return;
                        }
                    }
                }
            },//回调函数
            source:'ALBUM',// 相机或相册，CAMEAR/ALBUM
            direction:'FRONT',// 前镜头或后镜头，FRONT/BACK
            width:640,	//width
            height:640 // height
        };
        phone.takePhoto(parm);
    },

    onEngReceptionInitialize: function(component, eOpts) {
        loadMask.show();
        var me=this;
        var userid=global.getUserId();
        var button1 = Ext.getCmp('EngRecption_BtnJS');
        var button2 = Ext.getCmp('EngRecption_BtnTH');
        var taskrecord = component.initialConfig.parm.record; // 待办记录
        var jnlno;
        if(taskrecord){
            jnlno=taskrecord.get('jnlno');
        }else{
            jnlno=component.initialConfig.parm.jnlno;
        }

        var store=dataUtil.createStore('by_maintainRecption');
        store.loadDat(function(n){
            loadMask.hide();
            if(n<1) {
                    Ext.toast('未能读取保养计划数据！');
                    viewUtil.goLast();
                    return;
                }
            var record = store.getAt(0);
            button1.record = record;
            button2.record = record;
        //     var record=store.getData().get(0);
            if(record.get('nextstate') && record.get('nextstate').length>0){
                button1.jnlno = jnlno;
                button2.jnlno = jnlno;
                //显示按钮
                Ext.getCmp('EngRecption_PnlOperation').setHidden(false);
                liftnet.app.getController('Engineer.EngMaintainController').
                        doEngMaintain_InitialNextStateButton(button1,0);

                liftnet.app.getController('Engineer.EngMaintainController').
                        doEngMaintain_InitialNextStateButton(button2,1);
            }else{
                Ext.getCmp('EngRecption_PnlOperation').setHidden(true);
            }


            Ext.getCmp('form_by_engreception').setRecord(record);

            Ext.getCmp('EngRecption_ListDetial').getStore().loadDat(record.get('detail'));

        },function(){
            loadMask.hide();
            Ext.toast('未能读取保养任务数据！');
            viewUtil.goLast();
        },jnlno);

        //电梯列表点击事件
            Ext.getCmp('EngRecption_ListDetial').on('itemtap',function(dataview, index, target, record, e, eOpts){
                if(!record.get('prodno')){
                    Ext.toast('电梯注册码为空</br></br>无法查看相关电梯档案');
                    return;
                }
                viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('prodno')});
            });
    },

    onEngRecption_BtnJSTap: function(button, e, eOpts) {
        this.doEngMaintainTaskReceive_Process({state:button.getText(),jnlno:button.jnlno});
    },

    onEngRecption_BtnTHTap: function(button, e, eOpts) {

        this.doEngMaintainTaskReceive_Process({state:button.getText(),jnlno:button.jnlno});
    },

    doEngMaintain_Process: function(parm) {
        /* 保养处理入口
           参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }
        */
        var me = this;
        var operation;
        if(typeof(parm.operationIndex)==='string') {
            operation = parm.operationIndex;
        } else {
            operation = parm.record.get('nextstate')[parm.operationIndex].name;
        }

        var fn = parm.fn;
        var p = map.getLocation();
        var adapter_parm = {
            userid:		global.getUserId(),
            BillNo:		parm.record.get('BillNo'),
            rowid:		parm.record.get('rowid'),
            WorkType:	parm.record.get('worktype'),
            WorkDate:	parm.record.get('WorkDate'),
            ServiceNo:	parm.record.get('ServiceNo'),
            check_start:operation,
            lon:		p.lng,
            lat:		p.lat
        };

        loadMask.show();
        var store = dataUtil.createStore('by_byrwscenscf');
        store.loadDat(
            function() {
                loadMask.hide();
                Ext.toast(operation + '操作已完成！');

                // 刷新保养待办列表
                liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();
                me.doEngMaintain_LoadMaintainList();

                if(fn) fn(); // 回调（关闭故障详细资料页面）
            },
            function() {
                loadMask.hide();
                Ext.toast('未能完成' + operation + '操作，请稍后再试！');
            },
            adapter_parm
        );
    },

    /*

        ********** 公用方法 **********

    */
    doEngMaintainPlanFilter: function(filterStr) {
        // 保养业务 - 选择状态后执行搜索
        popMenu.getShowBy().setText(filterStr);
        popMenu.hide();
        this.doEngMaintain_LoadMaintainPlanList(1,20,'search');
    },

    /*

        ********** 故障处理方法 **********

    */
    doEngMaintain_InitialNextStateButton: function(button, index) {
        // 初始化处理按钮
        // 参数：按钮对象、按钮索引号
        //      保养计划暂时只有一种操作，因此忽略index
        //index = 0;
        var b = button.record.get('nextstate');
        if(!b){
            b = [];
        }

        if(b[index]&&b[index].text!=='') {
            if(button.setHidden) {
                button.setHidden(false);
                button.setText(b[index].name);
            } else {
                button.hidden = false;
                button.text = b[index].name;
            }
        } else {
            if(button.setHidden) {
                button.setHidden(true);
            } else {
                button.hidden = true;
            }
        }
    },

    doEngMaintain_LoadMaintainList: function() {
        // 保养业务标签页 - 保养计划列表刷新
        //var state = Ext.getCmp('EngMaintain_BtnTaskStatus').getText();
        //var date1 = Ext.getCmp('EngMaintain_date1').getValue();
        //var date2 = Ext.getCmp('EngMaintain_date2').getValue();
        var FldSearch = Ext.getCmp('EngMaintain_FldSearch').getValue();
        //if(!date1 || !date2) {
        //    return;
        //}
        //date1 = Ext.Date.format(new Date(date1), 'Y-m-d');
        //date2 = Ext.Date.format(new Date(date2), 'Y-m-d');
        Ext.getCmp('EngMaintain_ListTask').getStore().loadDat(
            function(n) {
                // 设置角标
                /*
                var task = Ext.create('Ext.util.DelayedTask', function() {
                        Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');
                    }, this);
                task.delay(1000);
                task.cancel();
                */
                //if(n===0) Ext.toast('没有符合条件的保养计划数据!');
                console.log('保养计划列表搜索完成!');
            },
            function() {
                Ext.toast('暂时未能获取保养计划!');
            },
            {
                userid: global.getUserId(),
                fldsearch: FldSearch
            }
        );
    },

    doEngMaintain_LoadMaintainTaskRecList: function() {
        // 派工单标签页 - 派工单刷新

                var FldSearch = Ext.getCmp('EngMaintainTaskRec_FldSearch').getValue();
                Ext.getCmp('EngMaintain_ListTaskRec').getStore().loadDat(
                    function(n) {
                        // 设置角标
                        /*
                        var task = Ext.create('Ext.util.DelayedTask', function() {
                                Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');
                            }, this);
                        task.delay(1000);
                        task.cancel();
                        */
                        //if(n===0) Ext.toast('没有符合条件的保养计划数据!');
                        console.log('派工单列表搜索完成!');
                    },
                    function() {
                        Ext.toast('暂时未能获取派工单!');
                    },
                    {
                        userid: global.getUserId(),
                        fldsearch: FldSearch
                    }
                );
    },

    doEngMaintain_LoadMaintainPlanList: function(page, pagesize, searchkey, scrollparm) {
        // 派工单标签页 - 派工单刷新

                var FldSearch='';
                var state = '';
                if(Ext.getCmp('EngMaintainPlanS_FldSearch')){
                    var stateT=Ext.getCmp('EngMaintain_BtnTaskStatus').getText();
                    switch(stateT){    //转换成标志
                        case '全部':
                            state='%';
                            break;
                        case '未开始':
                            state='0';
                            break;
                        case '到场':
                            state='1';
                            break;
                        case '完工':
                            state='2';
                            break;
                    }
                 FldSearch = Ext.getCmp('EngMaintainPlanS_FldSearch').getValue();
                     Ext.getCmp('EngMaintain_ListPlan').getStore().loadDat(
                    function(n) {

                        if(scrollparm){
                            Ext.getCmp('EngMaintain_ListPlan').scrollToRecord(scrollparm);
                            loadMask.hide();
                        }
                        if(searchkey==='search'){
                             loadMask.hide();

                        }
                        loadMask.hide();


                        // 设置角标
                        /*
                        var task = Ext.create('Ext.util.DelayedTask', function() {
                                Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');
                            }, this);
                        task.delay(1000);
                        task.cancel();
                        */
                        //if(n===0) Ext.toast('没有符合条件的保养计划数据!');
                        console.log('保养计划列表搜索完成!');
                    },
                    function() {
                        Ext.toast('暂时未能获取保养计划!');
                        if(curPage!=1){
                            curPage--;//获取数据失败页数减一
                        }
                        loadMask.hide();
                    },
                    {
                        userid: global.getUserId(),
                        curpagenum:page,
                        pagesize:pagesize,
                        searchkey:FldSearch,
                        state:state
                    }
                );
                }

    },

    doEngMaintainPlan_Process: function(parm) {
        /* 保养计划及实绩处理入口
           参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }
        */
        var me = this;
        var operation;
        if(typeof(parm.operationIndex)==='string') {
            operation = parm.operationIndex;
        } else {
            operation = parm.record.get('nextstate')[parm.operationIndex].name;
        }

        var fn = parm.fn;
        var p = map.getLocation();
        var adapter_parm = {
            userid:		global.getUserId(),
            fid:		parm.record.get('fid')?parm.record.get('fid'):'',
            pid:		parm.record.get('pid'),
            state:		'0',
            status:		'R',
            planjnlno:	parm.record.get('planjnlno')?parm.record.get('planjnlno'):'',
            prodno:		parm.record.get('prodno'),
            checkcontent:	[],
            lon:		p.lng,
            lat:		p.lat,
            addr:		p.addr,
            pictures:[],
            elesignature:[],
        };

        switch(operation){
            case '到场':
                adapter_parm.status='R';
                break;
            case '完工':
               // adapter_parm.status='F';
              //  adapter_parm.checkcontent=parm.record.get('checkcontent');
                viewUtil.goNext('Engineer.EngMaintainPlanDetail', {record:parm.record,Fin:'Y'});
                return;
                //break;
            default:
                break;
        }

        console.log(adapter_parm);


        loadMask.show();
        var store = dataUtil.createStore('by_maintainplanSub');
        store.loadDat(
            function() {
                loadMask.hide();
                Ext.toast(operation + '操作已完成！');

                // 刷新保养待办列表
                //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();
                me.doEngMaintain_LoadMaintainPlanList(1,20,'');

                if(fn) fn(); // 回调（关闭故障详细资料页面）
            },
            function() {
                loadMask.hide();
                Ext.toast('未能完成' + operation + '操作，请稍后再试！');
            },
            adapter_parm
        );
    },

    doEngFault_AcceptMap1: function(id, p) {
          // 实时监控-地图
                        Ext.getCmp(id)
                        .setSrc('http://api.map.baidu.com/staticimage/v2?ak=64048452fca8dd67eabb72ff5b4dd0ac'+
                               '&markers='+p.lng+','+p.lat+
                               '&center='+p.lng+','+p.lat+'&height=100&zoom=12');

                        var geoc = new BMap.Geocoder();
                        geoc.getLocation(
                            new BMap.Point(p.lng, p.lat),function(result){
                                console.log(result);
                        //         result.surroundingPois
                                Ext.getCmp('EngAcceptMap_address').setHtml(result.address);
                                Ext.getCmp('EngAcceptMap_lng').setValue(result.point.lng);
                                Ext.getCmp('EngAcceptMap_lat').setValue(result.point.lat);
                            }
                         );
    },

    doEngMaintainPlan_Process2: function(parm) {
        /* 保养计划及实绩处理入口
           参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }
        */
        var me = this;
        var operation;
        if(typeof(parm.operationIndex)==='string') {
            operation = parm.operationIndex;
        } else {
            operation = parm.record.get('nextstate')[parm.operationIndex].name;
        }

        var fn = parm.fn;
        var p = map.getLocation();
        var adapter_parm = {
            userid:		global.getUserId(),
            fid:		parm.record.get('fid')?parm.record.get('fid'):'',
            pid:		parm.record.get('pid'),
            state:		'0',
            status:		'R',
            planjnlno:		parm.record.get('planjnlno'),
            prodno:		parm.record.get('prodno'),
            checkcontent:	[],
            lon:		p.lng,
            lat:		p.lat,
            addr:		p.addr,
            pictures:[],
            elesignature:[],
        };

        var elesignatures=Ext.getCmp('EngMaintainP_signature');
        if(elesignatures){
            var elevalue=elesignatures.getValue();
            if(elevalue){
            adapter_parm.elesignature=[{signpic:elevalue.split(',')[1]}];
            }
        }


        getcheckcontnet=function(){
            var epc=Ext.getCmp('EngmaintainPlanCCList').getStore();
        var ccont=[];
        for(var i=0;i<epc.getCount();i++){
            var rec=epc.getAt(i);
            ccont[i]={
                locations:rec.get('locations'),
                lno:rec.get('lno'),
                plancontents:rec.get('plancontents'),
                checkverdict:rec.get('checkverdict'),
                zid:rec.get('zid'),
                lifttype:rec.get('lifttype'),
                plantype:rec.get('plantype'),
            };
        }
            return ccont;
        };


        //保存图片信息
        var picturesJSON = [];
        for(var i=1;i<7;i++){
            var ImgID = 'EngMaintainP_photo_'+i;

            var Img = Ext.getCmp(ImgID);
            if(Img){
            var ImgSrc = Ext.getCmp(ImgID).getSrc();
            if(ImgSrc!=='resources/images/camera.png' && ImgSrc!=='resources/images/notPhoto.png'){
                console.log(ImgID);
                var pic = ImgSrc.split(',')[1];
                var picturesJSONSize = picturesJSON.length;
                var picIndex = picturesJSONSize+1;
                picturesJSON[picturesJSONSize]={
                    pic : pic,
                    remark	: '保养现场照片',
                    takeproject	: '保养现场照片',
                    picname	: parm.record.get('fid')?parm.record.get('fid'):'000'+'_'+picIndex
                };
            }
            }
        }
        console.log(picturesJSON);


        var canSUB=true;
        var mustSign=false;
        switch(operation){
            case '到场':
                adapter_parm.status='R';
                adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();
                adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();
                adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();
                break;
            case '完工':
                adapter_parm.status='F';
                adapter_parm.checkcontent=getcheckcontnet();
                adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();
                adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();
                adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();
                if(adapter_parm.checkcontent.length===0){
                    canSUB=false;
                }
                break;
            case '保存':
                adapter_parm.state='0';
                adapter_parm.checkcontent=getcheckcontnet();
                adapter_parm.pictures=picturesJSON;
                adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();
                adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();
                adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();
                if(adapter_parm.checkcontent.length===0){
                    canSUB=false;
                }
                break;
            case '提交':
                adapter_parm.status='F';
                adapter_parm.state='1';
                adapter_parm.pictures=picturesJSON;
                adapter_parm.checkcontent=getcheckcontnet();
                adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();
                adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();
                adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();
                if(adapter_parm.checkcontent.length===0){
                    canSUB=false;
                }
               /* if(!elesignatures.getValue()){
                    canSUB=false;
                    mustSign=true;
                }*/
                break;
            default:
                break;
        }


        if(canSUB){
            loadMask.show();
            var store = dataUtil.createStore('by_maintainplanSub');
            store.loadDat(
                function() {
                    loadMask.hide();
                    Ext.toast(operation + '操作已完成！');

                    // 刷新保养待办列表
                    //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();
                    liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();
                    curPage=1;
                    me.doEngMaintain_LoadMaintainPlanList(1,20,'');

                    if(fn) fn(); // 回调（关闭故障详细资料页面）
                },
                function() {
                    loadMask.hide();
                    Ext.toast('未能完成' + operation + '操作，请稍后再试！');
                },
                adapter_parm
            );
        }else{
            if(mustSign){
                Ext.toast('不存在电子签名，无法保存！');
            }else{
               Ext.toast('保养单明细为空,无法保存！');
            }
        }

    },

    doEngMaintainTaskReceive_Process: function(parm) {
        var receviestatus;
        var userid = global.getUserId();
        var jnlno = parm.jnlno;
        var EngFaultAccept_remark = '';
        switch(parm.state){
            case "接收":
                receviestatus = 'A';
                process();
                return;

            case "退回":
                receviestatus = 'B';
        Ext.Msg.prompt('退回原因', null,
                        function(buttonId,value) {
                                if(buttonId=='ok'){
                                    EngFaultAccept_remark = value;
                                    if(EngFaultAccept_remark!==''){
                                        process();
                                         return;
                                    }else{
                                        Ext.toast('请填写退回原因');
                                        return;
                                    }

                                }else{
                                    return;
                                }
                            },
                            null,
                            true,
                            '' || '',
                            {
                                autoCapitalize: true,
                                placeHolder: '请输入退回原因',

                            }
                        );
                return;
        }

        function process(){
            //保养任务处理
        loadMask.show();
                    var store = dataUtil.createStore('by_maintainReceptionSub');
                    store.loadDat(
                        function() {
                            loadMask.hide();
                            Ext.toast(parm.state+'操作已完成！');

                            // 刷新保养待办列表
                            //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();
                            liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();

                            viewUtil.goLast();
                        },
                        function() {
                            loadMask.hide();
                            Ext.toast('未能完成'+parm.state+'操作，请稍后再试！');
                        },
                        {userid:userid,
                         jnlno:jnlno,
                         remark:EngFaultAccept_remark||'',
                         needhelp:'',
                         receviestatus:receviestatus,
                        }
                    );
        }


    }

});