{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Engineer.EngQualityCheckController"
    },
    "name": "MyController",
    "designerId": "b4f0ee44-af7e-40bf-92c8-c86bf99d4752",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "读取质检任务列表"
                ],
                "designer|controlQuery": "panel#EngQualityCheckList",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngQualityCheckListInitialize",
                "implHandler": [
                    "Ext.getCmp('EngQualityCheck_TodoList').getStore().loadDat(",
                    "    function() {",
                    "    },",
                    "    function(info) {",
                    "        Ext.toast(info);",
                    "    }",
                    ");"
                ],
                "name": "initialize"
            },
            "name": "onEngQualityCheckListInitialize",
            "designerId": "f6d25b7b-cf35-418b-8a23-f434b49a754f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngQualityCheckList_ButReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngQualityCheckList_ButReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngQualityCheckList_ButReturnTap",
            "designerId": "a40f708a-cbd6-4465-8566-ff6092695150"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "质检任务列表点击事件，跳转到相应界面"
                ],
                "designer|controlQuery": "list#EngQualityCheck_TodoList",
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngQualityCheck_TodoListItemTap",
                "implHandler": [
                    "var targetViews = {",
                    "    0:'Engineer.EngFirstCheck',",
                    "    5:'Engineer.EngReformcheck',",
                    "};",
                    "// if(index===0){",
                    "//     viewUtil.goNext(targetViews[index]);",
                    "// }",
                    "switch(index) {",
                    "    case 0:",
                    "        viewUtil.goNext('Engineer.EngFirstCheck');",
                    "        break;",
                    "    case 5:",
                    "        viewUtil.goNext('Engineer.EngReformcheck');",
                    "        break;",
                    "        ",
                    "}"
                ],
                "name": "itemtap"
            },
            "name": "onEngQualityCheck_TodoListItemTap",
            "designerId": "8255ca9f-7b2e-403d-a101-d9d3a58ab7ba"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheck_ReturnButton",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_ReturnButtonTap",
            "designerId": "b240131f-4c59-4a09-b2fb-745c511a4776"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngReformcheck_ReturnButton",
                "designer|targetType": "Ext.Button",
                "fn": "onEngReformcheck_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngReformcheck_ReturnButtonTap",
            "designerId": "e5c7de30-f8d8-40b7-bf77-652b70d2f1aa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增首检派工单，派工单tab前台显示时才响应"
                ],
                "designer|controlQuery": "button#EngFirstCheck_BtnAdd",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_BtnAddTap",
                "implHandler": [
                    "viewUtil.goNext('Engineer.EngFirstCheckJobAdd',{record:''});",
                    "// var activeItem = Ext.getCmp('EngFirstCheck_TplList').getActiveItem();",
                    "// if(activeItem._itemId=='EngFirstCheck_CtnJobList'){",
                    "    ",
                    "// }else {",
                    "",
                    "// }",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_BtnAddTap",
            "designerId": "0717f330-37fb-49de-97c3-29565e9b2418"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "首检任务界面初始化",
                    "初始化list下拉刷新、滑动按钮插件"
                ],
                "designer|controlQuery": "container#EngFirstCheck",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Container",
                "fn": "onEngFirstCheckInitialize",
                "implHandler": [
                    "",
                    "var me = this;",
                    "var jobList = Ext.getCmp('EngFirstCheck_ListJob');",
                    "var taskList = Ext.getCmp('EngFirstCheck_ListTask');",
                    "//清空store数据",
                    "taskList.getStore().removeAll();",
                    "",
                    "jobaddjurisdiction = false;",
                    "console.log('init');",
                    "jobupdatejurisdiction = false;",
                    "taskUpdatejurisdiction = false;",
                    "",
                    "jobCurPage = 0;//全局变量",
                    "taskCurPage = 0;",
                    "pagesize = 20;",
                    "//获取状态",
                    "getFlowstatus = {",
                    "    '全部':'%',",
                    "    '未接收':'1',",
                    "    '已接收':'2',",
                    "    '退回':'3',",
                    "};",
                    "",
                    "getTaskstatus = {",
                    "    '全部':'%',",
                    "    '新建':'0',",
                    "    '待审':'1',",
                    "    '审批中':'2',",
                    "    '通过':'3',",
                    "    '不通过':'4',",
                    "    '作废':'5'",
                    "};",
                    "",
                    "// 初始化派工单列表下拉刷新、滑动按钮插件",
                    "jobList.setPlugins(",
                    "     [",
                    "      {",
                    "                    autoSnapBack: false,",
                    "                    lastUpdatedText: '上次刷新:&nbsp;',",
                    "                    loadedText: '已刷新',",
                    "                    loadingText: '正在刷新派工单...',",
                    "                    pullText: '下拉刷新...',",
                    "                    releaseText: '放开开始刷新...',",
                    "                    type: 'pullrefresh',",
                    "                    listeners : {",
                    "                        latestfetched : function() {",
                    "",
                    "                            console.log('执行清空STORE。。。');",
                    "                            Ext.getCmp('EngFirstCheck_ListJob').getStore().removeAll();",
                    "                            console.log('执行清空STORE。。。');",
                    "",
                    "                            me.doEngFirstCheck_LoadJobList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngFirstCheckJob_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getFlowstatus[Ext.getCmp('EngFirstCheck_JobStatus').getText()]",
                    "                                },",
                    "                                'refresh'",
                    "                            );",
                    "                    \t}",
                    "                    }",
                    "                },",
                    "                // 以下滑动按钮插件应从EngHomeController的onEngHomeInitial()中复制！",
                    "                {",
                    "                    xclass: 'ux.SlideActions',",
                    "                    openPosition: 150,",
                    "                    buttons:",
                    "                        [",
                    "                            // 按钮1",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "                                text: '1',",
                    "                                initial: function(button) {",
                    "                                    //初始化滑动按钮",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 0);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                    //处理点击事件",
                    "                                    me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 0",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮2",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                                text: '2',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 1);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 1",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮3",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-orange',",
                    "                                text: '3',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 2);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 2",
                    "                                        });",
                    "                                }",
                    "                            }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        );",
                    "",
                    "// 初始化首检任务列表下拉刷新、滑动按钮插件",
                    "",
                    "        taskList.setPlugins(",
                    "            [",
                    "                {",
                    "                    autoSnapBack: false,",
                    "                    lastUpdatedText: '上次刷新:&nbsp;',",
                    "                    loadedText: '已刷新',",
                    "                    loadingText: '正在刷新首检任务...',",
                    "                    pullText: '下拉刷新...',",
                    "                    releaseText: '放开开始刷新...',",
                    "                    type: 'pullrefresh',",
                    "                    listeners : {",
                    "                        latestfetched : function() {",
                    "                                    console.log('执行清空STORE。。。');",
                    "                            Ext.getCmp('EngFirstCheck_ListTask').getStore().removeAll();",
                    "                            console.log('执行清空STORE。。。');",
                    "                            ",
                    "                            me.doEngFirstCheck_LoadTaskList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "",
                    "                                    searchkey:Ext.getCmp('EngFirstCheckTask_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngFirstCheck_TaskStatus').getText()]",
                    "                                },",
                    "                                'refresh'",
                    "                            );",
                    "                    \t}",
                    "                    }",
                    "                },",
                    "                // 以下滑动按钮插件应从EngHomeController的onEngHomeInitial()中复制！",
                    "                {",
                    "                    xclass: 'ux.SlideActions',",
                    "                    openPosition: 100,",
                    "                    buttons:",
                    "                        [",
                    "                            // 按钮1",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "                                text: '1',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 0);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 0",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮2",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                                text: '2',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 1);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 1",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮3",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-orange',",
                    "                                text: '3',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 2);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 2",
                    "                                        });",
                    "                                }",
                    "                            }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        );",
                    "loadMask.show();",
                    "//进来自动加载第一页",
                    "me.doEngFirstCheck_LoadJobList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngFirstCheckJob_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngFirstCheck_JobStatus').getText()]",
                    "                                },",
                    "                                'firstload'",
                    ");",
                    "me.doEngFirstCheck_LoadTaskList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngFirstCheckTask_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngFirstCheck_TaskStatus').getText()]",
                    "                                },",
                    "                                'firstload'",
                    "                            );"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckInitialize",
            "designerId": "16a5241c-6a81-4b20-90f0-c156b18a5832"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheck_LoadMoreJob",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_LoadMoreJobTap",
                "implHandler": [
                    "var me = this;",
                    "if(jobCurPage===0){",
                    "        return;",
                    "    }",
                    "    loadMask.show();",
                    "        var scrollparm = {",
                    "//             scroller:jobScroller,",
                    "//             x:x,",
                    "            jobCurPage:jobCurPage",
                    "        };",
                    "        if(!Ext.getCmp('EngFirstCheckJob_Search')){",
                    "            loadMask.hide();",
                    "            return;",
                    "        }",
                    "        var keyword = Ext.getCmp('EngFirstCheckJob_Search').getValue()||'';",
                    "",
                    "        me.doEngFirstCheck_LoadJobList(",
                    "            ++jobCurPage,",
                    "            pagesize,",
                    "            {",
                    "                searchkey:Ext.getCmp('EngFirstCheckJob_Search').getValue()||'',",
                    "                flowstatus:",
                    "                     getFlowstatus[Ext.getCmp('EngFirstCheck_JobStatus').getText()]",
                    "            },",
                    "            'loadmore',",
                    "            scrollparm",
                    "        );"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_LoadMoreJobTap",
            "designerId": "932279a9-0f0b-49fc-a86c-a35e14fd2928"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheck_LoadMoreTask",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_LoadMoreTaskTap",
                "implHandler": [
                    "var me = this;",
                    "if(taskCurPage===0){",
                    "        return;",
                    "    }",
                    "    loadMask.show();",
                    "        var scrollparm = {",
                    "//             scroller:taskScroller,",
                    "//             x:x,",
                    "            taskCurPage:taskCurPage",
                    "        };",
                    "        if(!Ext.getCmp('EngFirstCheckTask_Search')){",
                    "            loadMask.hide();",
                    "            return;",
                    "        }",
                    "        var keyword = Ext.getCmp('EngFirstCheckTask_Search').getValue()||'';",
                    "",
                    "        me.doEngFirstCheck_LoadTaskList(",
                    "            ++taskCurPage,",
                    "            pagesize,",
                    "            {",
                    "                searchkey:Ext.getCmp('EngFirstCheckTask_Search').getValue()||'',",
                    "                flowstatus:",
                    "                        getTaskstatus[Ext.getCmp('EngFirstCheck_TaskStatus').getText()]",
                    "                                },",
                    "            'loadmore',",
                    "            scrollparm",
                    "        );"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_LoadMoreTaskTap",
            "designerId": "353edc0d-729d-4217-b28f-77823307e263"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "加载派工单列表"
                ],
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkeyParm",
                    "action",
                    "scrollparm"
                ],
                "fn": "doEngFirstCheck_LoadJobList",
                "implHandler": [
                    "",
                    "// 派工单标签页 - 派工单列表刷新",
                    "var me = this;",
                    "// 读取“派工单”列表",
                    "Ext.getCmp('EngFirstCheck_ListJob').getStore().loadDat(",
                    "    function(ret,resetCurPage,jurisdiction) {",
                    "        loadMask.hide();",
                    "        if(scrollparm){",
                    "//             scrollparm.scroller.scrollTo(scrollparm.x,(ret-1)*scrollparm.jobCurPage*80);",
                    "//             loadMask.hide();",
                    "            var store = Ext.getCmp('EngFirstCheck_ListJob').getStore();",
                    "            var record = store.getAt(store.getAllCount() - ret);",
                    "            Ext.getCmp('EngFirstCheck_ListJob').scrollToRecord(record,{type: 'slide'});",
                    "        }",
                    "",
                    "        if(resetCurPage){//重新加载数据时",
                    "            jobCurPage = 1;//获取新数据成功，页数重置为1",
                    "            jobaddjurisdiction = jurisdiction.addjurisdiction==='Y';",
                    "            //能不能新建",
                    "            Ext.getCmp('EngFirstCheck_BtnAdd').setHidden(!jobaddjurisdiction);",
                    "            //能不能修改",
                    "            jobupdatejurisdiction = jurisdiction.updatejurisdiction==='Y';",
                    "        }",
                    "     },",
                    "",
                    "    function(info,cutOne) {",
                    "        Ext.toast(info);",
                    "        if(cutOne){",
                    "            jobCurPage--;//加载更多数据失败，页数减一",
                    "        }",
                    "        if(info==='没有更多数据！'){",
                    "//             jobCurPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件",
                    "            jobCurPage--;",
                    "        }",
                    "        loadMask.hide();",
                    "",
                    "    },",
                    "    {",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkeyParm.searchkey || '',",
                    "        flowstatus:searchkeyParm.flowstatus || '%',",
                    "//         startdate:searchkeyParm.startdate,",
                    "//         enddate:searchkeyParm.enddate",
                    "    },",
                    "    action",
                    ");"
                ]
            },
            "name": "doEngFirstCheck_LoadJobList",
            "designerId": "53ec25cc-6159-4576-82a0-40e5585ff1ab"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "加载派工单列表"
                ],
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkeyParm",
                    "action",
                    "scrollparm",
                    "obj"
                ],
                "fn": "doEngAllCheck_LoadJobList",
                "implHandler": [
                    "",
                    "// 派工单标签页 - 派工单列表刷新",
                    "var me = this;",
                    "// 读取“派工单”列表",
                    "Ext.getCmp(obj+'_ListJob').getStore().loadDat(",
                    "    function(ret,resetCurPage,jurisdiction) {",
                    "        loadMask.hide();",
                    "        if(scrollparm){",
                    "//             scrollparm.scroller.scrollTo(scrollparm.x,(ret-1)*scrollparm.jobCurPage*80);",
                    "//             loadMask.hide();",
                    "            var store = Ext.getCmp(obj+'_ListJob').getStore();",
                    "            var record = store.getAt(store.getAllCount() - ret);",
                    "            Ext.getCmp(obj+'_ListJob').scrollToRecord(record,{type: 'slide'});",
                    "        }",
                    "",
                    "        if(resetCurPage){//重新加载数据时",
                    "            jobCurPage = 1;//获取新数据成功，页数重置为1",
                    "            jobaddjurisdiction = jurisdiction.addjurisdiction==='Y';",
                    "            //能不能新建",
                    "            Ext.getCmp(obj+'_BtnAdd').setHidden(!jobaddjurisdiction);",
                    "            //能不能修改",
                    "            jobupdatejurisdiction = jurisdiction.updatejurisdiction==='Y';",
                    "        }",
                    "     },",
                    "",
                    "    function(info,cutOne) {",
                    "        Ext.toast(info);",
                    "        if(cutOne){",
                    "            jobCurPage--;//加载更多数据失败，页数减一",
                    "        }",
                    "        if(info==='没有更多数据！'){",
                    "//             jobCurPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件",
                    "            jobCurPage--;",
                    "        }",
                    "        loadMask.hide();",
                    "",
                    "    },",
                    "    {",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkeyParm.searchkey || '',",
                    "        flowstatus:searchkeyParm.flowstatus || '%',",
                    "//         startdate:searchkeyParm.startdate,",
                    "//         enddate:searchkeyParm.enddate",
                    "    },",
                    "    action",
                    ");"
                ]
            },
            "name": "doEngAllCheck_LoadJobList",
            "designerId": "54d6a1e8-fcd7-4c14-969c-23682f2cc8b5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "加载首检任务列表"
                ],
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkeyParm",
                    "action",
                    "scrollparm"
                ],
                "fn": "doEngFirstCheck_LoadTaskList",
                "implHandler": [
                    "",
                    "var me = this;",
                    "// 读取“首检任务”列表",
                    "Ext.getCmp('EngFirstCheck_ListTask').getStore().loadDat(",
                    "    function(ret,resetCurPage) {",
                    "        loadMask.hide();",
                    "        if(scrollparm){",
                    "//             scrollparm.scroller.scrollTo(scrollparm.x,(ret-1)*scrollparm.taskCurPage*80);",
                    "//             loadMask.hide();",
                    "            var store = Ext.getCmp('EngFirstCheck_ListTask').getStore();",
                    "            var record = store.getAt(store.getAllCount() - ret);",
                    "            Ext.getCmp('EngFirstCheck_ListTask').scrollToRecord(record,{type: 'slide'});",
                    "        }",
                    "        if(resetCurPage){",
                    "            taskCurPage = 1;//获取新数据成功，页数重置为1",
                    "            //首检任务能不能修改",
                    "//             taskUpdatejurisdiction = jurisdiction.updatejurisdiction==='Y';",
                    "        }",
                    "",
                    "    },",
                    "",
                    "    function(info,cutOne) {",
                    "        Ext.toast(info);",
                    "        if(cutOne){",
                    "            taskCurPage--;//加载更多数据失败，页数减一",
                    "        }",
                    "        if(info==='没有更多数据！'){",
                    "//             taskCurPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件",
                    "            taskCurPage--;",
                    "        }",
                    "        loadMask.hide();",
                    "",
                    "    },",
                    "    {",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkeyParm.searchkey || '',",
                    "        flowstatus:searchkeyParm.flowstatus || '%'",
                    "    },",
                    "    action",
                    ");",
                    ""
                ]
            },
            "name": "doEngFirstCheck_LoadTaskList",
            "designerId": "b65ac875-3a46-4a2a-881f-fb2ff3025381"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "加载首检任务列表"
                ],
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkeyParm",
                    "action",
                    "scrollparm",
                    "obj"
                ],
                "fn": "doEngAllCheck_LoadTaskList",
                "implHandler": [
                    "",
                    "var me = this;",
                    "// 读取“首检任务”列表",
                    "Ext.getCmp(obj+'_ListTask').getStore().loadDat(",
                    "    function(ret,resetCurPage) {",
                    "        loadMask.hide();",
                    "        if(scrollparm){",
                    "//             scrollparm.scroller.scrollTo(scrollparm.x,(ret-1)*scrollparm.taskCurPage*80);",
                    "//             loadMask.hide();",
                    "            var store = Ext.getCmp(obj+'_ListTask').getStore();",
                    "            var record = store.getAt(store.getAllCount() - ret);",
                    "            Ext.getCmp(obj+'_ListTask').scrollToRecord(record,{type: 'slide'});",
                    "        }",
                    "        if(resetCurPage){",
                    "            taskCurPage = 1;//获取新数据成功，页数重置为1",
                    "            //首检任务能不能修改",
                    "//             taskUpdatejurisdiction = jurisdiction.updatejurisdiction==='Y';",
                    "        }",
                    "",
                    "    },",
                    "",
                    "    function(info,cutOne) {",
                    "        Ext.toast(info);",
                    "        if(cutOne){",
                    "            taskCurPage--;//加载更多数据失败，页数减一",
                    "        }",
                    "        if(info==='没有更多数据！'){",
                    "//             taskCurPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件",
                    "            taskCurPage--;",
                    "        }",
                    "        loadMask.hide();",
                    "",
                    "    },",
                    "    {",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkeyParm.searchkey || '',",
                    "        flowstatus:searchkeyParm.flowstatus || '%'",
                    "    },",
                    "    action",
                    ");",
                    ""
                ]
            },
            "name": "doEngAllCheck_LoadTaskList",
            "designerId": "e2a4458c-78c1-43ee-836e-78fa8a0e3571"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "初始化滑动按钮",
                    "根据nextstate"
                ],
                "designer|params": [
                    "button",
                    "index"
                ],
                "fn": "doEngFirstCheck_InitialNextStateButton",
                "implHandler": [
                    "// 初始化处理按钮",
                    "// 参数：按钮对象、按钮索引号",
                    "var b = button.record.get('nextstate');",
                    "if(!b) return;",
                    "",
                    "if(b[index]&&b[index].text!=='') {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(false);",
                    "        button.setText(b[index].name);",
                    "    } else {",
                    "        button.hidden = false;",
                    "        button.text = b[index].name;",
                    "    }",
                    "} else {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(true);",
                    "    } else {",
                    "        button.hidden = true;",
                    "    }",
                    "}"
                ]
            },
            "name": "doEngFirstCheck_InitialNextStateButton",
            "designerId": "4235cb64-ee20-443c-86ca-b82ca390eca1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "初始化滑动按钮",
                    "根据nextstate"
                ],
                "designer|params": [
                    "button",
                    "index",
                    "obj"
                ],
                "fn": "doEngAllCheck_InitialNextStateButton",
                "implHandler": [
                    "// 初始化处理按钮",
                    "// 参数：按钮对象、按钮索引号",
                    "var b = button.record.get('nextstate');",
                    "if(!b) return;",
                    "",
                    "if(b[index]&&b[index].text!=='') {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(false);",
                    "        button.setText(b[index].name);",
                    "    } else {",
                    "        button.hidden = false;",
                    "        button.text = b[index].name;",
                    "    }",
                    "} else {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(true);",
                    "    } else {",
                    "        button.hidden = true;",
                    "    }",
                    "}"
                ]
            },
            "name": "doEngAllCheck_InitialNextStateButton",
            "designerId": "c627863f-a358-488f-8835-8a2059114f71"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "首检派工处理(审批和接收共用接口)"
                ],
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngFirstCheckJob_Process",
                "implHandler": [
                    "/*",
                    "   左滑按钮点击事件处理",
                    "   派工单处理入口",
                    "   参数",
                    "   {",
                    "       record:派工单待办记录,",
                    "       operationIndex:操作索引号(数字)/操作名(字符串),",
                    "       fn:回调函数，通常用于关闭故障详细信息页面",
                    "   }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "var fn = parm.fn;",
                    "var jnl = parm.record.get('jnl');//首检分派单号",
                    "var state;\t\t\t\t\t\t //审核状态: 接收,退回,同意，不同意，提交，作废，删除等",
                    "var remark;\t\t\t\t\t\t //审核原因",
                    "var deptid;\t\t\t\t\t\t //当前人所属部门ID",
                    "var sj;",
                    "",
                    "if(parm.record){",
                    "var thisState = {};",
                    "//获取nextstate的值，用于提交",
                    "var nextstates = parm.record.get('nextstate');",
                    "     if(nextstates){",
                    "         for(var j = 0;j<nextstates.length;j++){",
                    "              thisState[nextstates[j].name] = nextstates[j].state+'';",
                    "            }",
                    "     }",
                    "}",
                    "",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "",
                    "switch(operation) {",
                    "//     case \"修改\":",
                    "    case \"退回\":",
                    "         state = thisState[\"退回\"];",
                    "         Ext.Msg.prompt('原因', null,",
                    "         function(buttonId,value) {",
                    "             if(buttonId=='ok'){",
                    "                 if(value===''){",
                    "                     Ext.toast('退回操作失败,请输入退回原因');",
                    "                     return;",
                    "                 }else{",
                    "                     remark=value;",
                    "                     //首检派工单退回",
                    "                     loadMask.show();",
                    "                     var adapterParm = {",
                    "                                     userid:global.getUserId(),",
                    "                                     jnl:jnl,",
                    "                                     state:state,",
                    "                                     remark:remark || '',",
                    "                                     deptid:deptid || '',",
                    "                                     sj:{}",
                    "                                 };",
                    "                     console.log(adapterParm);",
                    "                     var store = dataUtil.createStore('first_check_job_sj');",
                    "                     store.handerDat(",
                    "                         function(jnl) {",
                    "                             loadMask.hide();",
                    "                             if(jnl) {",
                    "                                 Ext.toast(operation+'操作完成！单号是：' + jnl);",
                    "                             } else {",
                    "                                 Ext.toast(operation+'操作完成！');",
                    "                             }",
                    "",
                    "                             // 刷新派工单列表",
                    "                             me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "                     //                 viewUtil.goLast();",
                    "                             },",
                    "                             function(info) {",
                    "                                 loadMask.hide();",
                    "                                 if(!info) info = '(未知)';",
                    "                                 Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "                             },",
                    "                             adapterParm",
                    "                         );",
                    "                 }",
                    "",
                    "             }",
                    "             },",
                    "             null,",
                    "             true,",
                    "             null,",
                    "             {",
                    "                 autoCapitalize: true,",
                    "                 placeHolder: '请输入退回原因'",
                    "             }",
                    "         );",
                    "         return;",
                    "//     case \"保存\":",
                    "//     case \"提交\":",
                    "//         viewUtil.goNext('Engineer.EngFirstCheckJobAdd',",
                    "//                         {record:parm.record,state:'修改',",
                    "//                          url:'/adapters/firstcheck/api/1.0/fcddetail'",
                    "//                         });",
                    "//         break;",
                    "",
                    "    case \"接收\":",
                    "",
                    "        state = thisState[\"接收\"];",
                    "        break;",
                    "",
                    "    case \"修改\":",
                    "",
                    "        state = thisState[\"修改\"];",
                    "//         viewUtil.goNext('Engineer.EngFirstCheckJobShow',{record:parm.record,action:'退回'});",
                    "        viewUtil.goNext('Engineer.EngFirstCheckJobAdd',",
                    "                        {record:parm.record,",
                    "                         action:'退回修改',",
                    "                         url:'/adapters/firstcheck/api/1.0/fcdaduitdetail'",
                    "                        });",
                    "        return;",
                    "",
                    "    case \"删除\":",
                    "        //已退回的分派单允许删除，删除后分派单消失",
                    "        state = thisState[\"删除\"];",
                    "        break;",
                    "",
                    "    case \"审核\":",
                    "//     case \"同意\":",
                    "//     case \"不同意\":",
                    "//         viewUtil.goNext('Engineer.EngFirstCheckJobShow',{record:parm.record,action:'审核'});",
                    "        viewUtil.goNext('Engineer.EngFirstCheckJobAdd',",
                    "                        {record:parm.record,",
                    "                         action:'审核',",
                    "                         url:'/adapters/firstcheck/api/1.0/fcdaduitdetail'",
                    "                        });",
                    "        return;",
                    "",
                    "    default:",
                    "        Ext.toast('未知的操作:' + opertaion);",
                    "        return;",
                    "}",
                    "",
                    "//首检派工处理(接收、删除)",
                    "loadMask.show();",
                    "var adapterParm = {",
                    "                userid:global.getUserId(),",
                    "                jnl:jnl,",
                    "                state:state,",
                    "                remark:remark || '',",
                    "                deptid:deptid || '',",
                    "                sj:{}",
                    "            };",
                    "console.log(adapterParm);",
                    "var store = dataUtil.createStore('first_check_job_sj');",
                    "store.handerDat(",
                    "    function(jnl) {",
                    "        loadMask.hide();",
                    "        if(jnl) {",
                    "            Ext.toast(operation+'操作完成！单号是：' + jnl);",
                    "        } else {",
                    "            Ext.toast(operation+'操作完成！');",
                    "        }",
                    "",
                    "        // 刷新派工单列表",
                    "        me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "//                 viewUtil.goLast();",
                    "        },",
                    "        function(info) {",
                    "            loadMask.hide();",
                    "            if(!info) info = '(未知)';",
                    "            Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "        },",
                    "        adapterParm",
                    "    );"
                ]
            },
            "name": "doEngFirstCheckJob_Process",
            "designerId": "f60ac996-1ec3-46af-b452-1ee87a8a3522"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngFirstCheckTask_Process",
                "implHandler": [
                    "/*",
                    "",
                    "   首检任务单处理入口",
                    "   参数",
                    "   {",
                    "       record:首检任务单待办记录,",
                    "       operationIndex:操作索引号(数字)/操作名(字符串),",
                    "       fn:回调函数，通常用于关闭首检任务单详细信息页面",
                    "   }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "var fn = parm.fn;",
                    "var jnl = parm.jnl || parm.record.get('jnlno') ;",
                    "var state;",
                    "var remark;",
                    "",
                    "if(parm.record){",
                    "    var thisState = {};",
                    "var nextstates = parm.record.get('nextstate');",
                    "        if(nextstates){",
                    "            for(var j = 0;j<nextstates.length;j++){",
                    "                thisState[nextstates[j].name] = nextstates[j].state+'';",
                    "            }",
                    "        }",
                    "}",
                    "",
                    "",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "switch(operation) {",
                    "    case \"审核\":",
                    "        //跳转到查看界面进行审核",
                    "        viewUtil.goNext('Engineer.EngFirstCheckTask',{record:parm.record,action:'审核',",
                    "                                                      url:'/adapters/firstcheck/api/1.0/fcaduitdetail'});",
                    "        return;",
                    "",
                    "//     case \"保存\":",
                    "//     case \"提交\":",
                    "    case \"修改\":",
                    "        //跳转到查看界面进行修改",
                    "        viewUtil.goNext('Engineer.EngFirstCheckTask',{record:parm.record,action:'修改',",
                    "                                                      url:'/adapters/firstcheck/api/1.0/fcinputdetail'});",
                    "        return;",
                    "",
                    "    case \"删除\":",
                    "        state = thisState[\"删除\"];",
                    "        break;",
                    "",
                    "    case \"作废\":",
                    "        state = taskStates[\"作废\"];",
                    "        break;",
                    "",
                    "    case \"同意\":",
                    "        state = taskStates[\"同意\"];",
                    "        break;",
                    "",
                    "    case \"不同意\":",
                    "        state = taskStates[\"不同意\"];",
                    "        var sj = me.doEngFirstCheck_GetSJForm();",
                    "        Ext.Msg.prompt('原因', null,",
                    "        function(buttonId,value) {",
                    "            if(buttonId=='ok'){",
                    "                if(value===''){",
                    "                    Ext.toast('审核操作失败,请输入不同意原因');",
                    "                    return;",
                    "                }else{",
                    "                    remark=value;",
                    "                    //首检任务单处理(不同意)",
                    "                    loadMask.show();",
                    "                var adapterParm = {",
                    "                                    userid:global.getUserId(),",
                    "                                    jnl:jnl,",
                    "                                    state:state,",
                    "                                    remark:remark,",
                    "                                    sj:sj",
                    "                                };",
                    "                var store = dataUtil.createStore('first_check_task_sj');",
                    "                store.auditDat(",
                    "                    function(jnl) {",
                    "                        loadMask.hide();",
                    "                        if(jnl) {",
                    "                            Ext.toast(operation+'操作完成！单号是：' + jnl);",
                    "                        } else {",
                    "                            Ext.toast(operation+'操作完成！');",
                    "                        }",
                    "",
                    "                // 刷新首检任务列表",
                    "                        me.doEngFirstCheck_Task_Search(Ext.getCmp('EngFirstCheck_TaskStatus'));",
                    "                        viewUtil.goLast();",
                    "",
                    "                    },",
                    "                    function(info) {",
                    "                        loadMask.hide();",
                    "                        if(!info) info = '(未知)';",
                    "                        Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "                    },",
                    "                    adapterParm",
                    "                );",
                    "",
                    "                }",
                    "",
                    "            }",
                    "            },",
                    "            null,",
                    "            true,",
                    "            null,",
                    "            {",
                    "                autoCapitalize: true,",
                    "                placeHolder: '请输入审核原因'",
                    "            }",
                    "        );",
                    "        return;",
                    "",
                    "    default:",
                    "        Ext.toast('未知的操作:' + opertaion);",
                    "        return;",
                    "}",
                    "",
                    "//首检任务单处理",
                    "loadMask.show();",
                    "var adapterParm = {",
                    "                    userid:global.getUserId(),",
                    "                    jnl:jnl,",
                    "                    state:state,",
                    "                    remark:remark||'',",
                    "                    sj:{}",
                    "                };",
                    "var store = dataUtil.createStore('first_check_task_sj');",
                    "store.auditDat(",
                    "    function(jnl) {",
                    "        loadMask.hide();",
                    "        if(jnl) {",
                    "            Ext.toast(operation+'操作完成！单号是：' + jnl);",
                    "        } else {",
                    "            Ext.toast(operation+'操作完成！');",
                    "        }",
                    "",
                    "// 刷新首检任务列表",
                    "        me.doEngFirstCheck_Task_Search(Ext.getCmp('EngFirstCheck_TaskStatus'));",
                    "",
                    "        if(operation==='同意'){",
                    "            viewUtil.goLast();",
                    "        }",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "    },",
                    "    adapterParm",
                    ");"
                ]
            },
            "name": "doEngFirstCheckTask_Process",
            "designerId": "24120e4a-b595-4aa6-a2a4-869f37c74803"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngFirstCheckTask_Show_Process",
                "implHandler": [
                    "",
                    "var me = this;",
                    "var state;",
                    "var sj = me.doEngFirstCheck_GetSJForm();",
                    "var form = Ext.getCmp('EngFirstCheckTask_Form');",
                    "",
                    "// 检查必填项目",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    if(field.getRequired() && field.getValue()==='') {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }else{",
                    "      if(name=='prono'){// 检查设备注册码是否合法",
                    "          if(!field.getValue().match(/^(\\d{4}-\\d{6}-\\d{6}-\\d{1,8})$/)){",
                    "              Ext.Msg.alert('注意', '设备注册码的格式有误',Ext.emptyFn);",
                    "              return;",
                    "          }",
                    "      }else if(name=='zzl' || name==='speed' || name==='high' || name==='fwlc'){//检测载重量、速度、提升高度、倾斜角",
                    "            if(field.getValue()!=='' && !field.getValue().match(/^[0-9]+(.[0-9]{1,2})?$/)){",
                    "                field.suspendEvents();",
                    "                Ext.toast(field.getLabel()+'必须填写数字(至多两位小数)！');",
                    "                field.resumeEvents(false);",
                    "                return;",
                    "            }",
                    "      }else if(name==='floor' || name==='stage' || name==='door' || name==='r9' || name==='controlnum'){//检测层、站、门、到期预警天数、群控台数",
                    "            if(field.getValue()!=='' && !field.getValue().match(/^[0-9]*$/)){",
                    "                field.suspendEvents();",
                    "                Ext.toast(field.getLabel()+'必须填写正整数！');",
                    "                field.resumeEvents(false);",
                    "                return;",
                    "            }",
                    "      }",
                    "  }",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "var action = parm.getText();",
                    "switch(action) {",
                    "",
                    "",
                    "    case \"保存\":",
                    "        state = '0';",
                    "        break;",
                    "    case \"提交\":",
                    "        state = '1';",
                    "        break;",
                    "",
                    "    default:",
                    "        Ext.toast('未知的操作:' + parm.getText());",
                    "        return;",
                    "}",
                    "",
                    "//首检任务单录入",
                    "loadMask.show();",
                    "var adapterParm = {",
                    "                    userid:global.getUserId(),",
                    "                    state:state,",
                    "                    sj:sj",
                    "                };",
                    "var store = dataUtil.createStore('first_check_task_sj');",
                    "store.inputDat(",
                    "    function(jnl) {",
                    "        loadMask.hide();",
                    "        if(jnl) {",
                    "            Ext.toast(action+'操作完成！单号是：' + jnl);",
                    "        } else {",
                    "            Ext.toast(action+'操作完成！');",
                    "        }",
                    "",
                    "        // 刷新首检任务列表",
                    "        me.doEngFirstCheck_Task_Search(Ext.getCmp('EngFirstCheck_TaskStatus'));",
                    "",
                    "        viewUtil.goLast();",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + action + '操作，错误信息是：' + info);",
                    "    },",
                    "    adapterParm",
                    ");"
                ]
            },
            "name": "doEngFirstCheckTask_Show_Process",
            "designerId": "96af3ac7-69d1-49c1-88b0-e9d4e7e29b9a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "state"
                ],
                "fn": "doEngFirstCheckJobAdd_Process",
                "implHandler": [
                    "",
                    "// 派工单操作 - 保存/提交",
                    "var me = this;",
                    "var form = Ext.getCmp('EngFirstCheckJobAdd_Form');",
                    "",
                    "// 检查必填项目",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    if(field.getRequired() && field.getValue()==='') {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "//获取表单数据",
                    "var sj = me.doEngFirstCheck_GetJobForm(form);",
                    "//检查是否已经选择电梯",
                    "if(sj.checkednum===0 ||sj.checkednum==='0'){",
                    "    Ext.Msg.alert('注意', '必须选择电梯', Ext.emptyFn);",
                    "    return;",
                    "}",
                    "",
                    "switch(state) {",
                    "    case \"保存\":",
                    "        sj.status='0';",
                    "        break;",
                    "    case \"提交\":",
                    "        sj.status='1';",
                    "        break;",
                    "}",
                    "",
                    "var parm = {",
                    "    userid: global.getUserId(),",
                    "    sj: sj",
                    "};",
                    "console.log(parm);",
                    "var store = dataUtil.createStore('first_check_job_sj');",
                    "//首检派工新建/修改",
                    "loadMask.show();",
                    "store.updateDat(",
                    "    function(jnl) {",
                    "        loadMask.hide();",
                    "        if(jnl) {",
                    "            Ext.toast(state+'操作完成！单号是：' + jnl);",
                    "        } else {",
                    "            Ext.toast(state+'操作完成！');",
                    "        }",
                    "        // 刷新派工单列表",
                    "        me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "        viewUtil.goLast();",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + state + '操作，错误信息是：' + info);",
                    "    },",
                    "    parm",
                    ");"
                ]
            },
            "name": "doEngFirstCheckJobAdd_Process",
            "designerId": "c45dddb4-b015-4797-85e8-a67da7c03eb6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "state"
                ],
                "fn": "doEngFirstCheckJobShow_Process",
                "implHandler": [
                    "",
                    "// 派工单操作 - /同意/不同意/接收/退回",
                    "var me = this;",
                    "// var form = Ext.getCmp('EngFirstCheckJobAdd_Form1');",
                    "var form = Ext.getCmp('EngFirstCheckJobAdd_Form');",
                    "",
                    "var remark;",
                    "var newstate;",
                    "var deptid = '';",
                    "",
                    "var sj = me.doEngFirstCheck_GetJobForm(form);",
                    "// 检查必填项目",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    if(field.getRequired() && field.getValue()==='') {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "if(sj.checkednum===0 ||sj.checkednum==='0'){",
                    "    Ext.Msg.alert('注意', '必须选择电梯', Ext.emptyFn);",
                    "    return;",
                    "}",
                    "",
                    "var deptidStore = dataUtil.createStore('first_check_job_add_deptid');",
                    "                    deptidStore.loadDat(",
                    "//                         function(){",
                    "//                             deptid = deptidStore.getAt(0).data.storageid;",
                    "//                         },",
                    "                        handerJob,",
                    "                        function(){",
                    "                            Ext.toast('未能完成' + state + '操作,请稍候再试');",
                    "                        }",
                    "                    );",
                    "",
                    "function handerJob(){",
                    "",
                    "    deptid = deptidStore.getAt(0).data.storageid;",
                    "",
                    "    var jnl = sj.jnl;",
                    "",
                    "     // 派工单标志",
                    "    switch(state) {",
                    "        case \"作废\":",
                    "            newstate = jobStates['作废'];",
                    "            break;",
                    "",
                    "        case \"提交\":",
                    "            newstate = jobStates['提交'];",
                    "            break;",
                    "",
                    "        case \"通过\":",
                    "            newstate = jobStates['通过'];",
                    "            break;",
                    "",
                    "        case \"不通过\":",
                    "            newstate = jobStates['不通过'];",
                    "            break;",
                    "",
                    "        case \"同意\":",
                    "            newstate = jobStates['同意'];",
                    "            break;",
                    "",
                    "        case \"不同意\":",
                    "            newstate = jobStates['不同意'];",
                    "            Ext.Msg.prompt('不同意', null,",
                    "            function(buttonId,value) {",
                    "                if(buttonId=='ok'){",
                    "                    if(value===''){",
                    "                        Ext.toast('审核操作失败,请输入审核原因');",
                    "                        return;",
                    "                    }else{",
                    "                        remark=value;",
                    "                        loadMask.show();",
                    "                        var adapterParm = {",
                    "                                        userid:global.getUserId(),",
                    "                                        jnl:sj.jnl,",
                    "                                        state:newstate,",
                    "                                        remark:remark,",
                    "                                        deptid:deptid,",
                    "                                        sj:sj",
                    "                        };",
                    "                        var store = dataUtil.createStore('first_check_job_sj');",
                    "//                         var store = dataUtil.createStore('first_check_job_detail');",
                    "//                         store.updateDat(",
                    "                        store.handerDat(",
                    "                            function(jnl) {",
                    "                                loadMask.hide();",
                    "                                if(jnl) {",
                    "                                    Ext.toast('审核操作完成！单号是：' + jnl);",
                    "                                } else {",
                    "                                    Ext.toast('审核操作完成！');",
                    "                                }",
                    "                                //刷新待办列表",
                    "                                liftnet.app.getController('Engineer.EngHomeController')",
                    "                                    .doEngHome_LoadTodoAll();",
                    "                                // 刷新派工单列表",
                    "                                me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "                                viewUtil.goLast();",
                    "                            },",
                    "                            function(info) {",
                    "                                loadMask.hide();",
                    "                                if(!info) info = '(未知)';",
                    "                                Ext.toast('未能完成' + state + '操作，错误信息是：' + info);",
                    "                            },",
                    "                            adapterParm",
                    "                        );",
                    "",
                    "",
                    "                    }",
                    "",
                    "                }",
                    "                },",
                    "                null,",
                    "                true,",
                    "                null,",
                    "                {",
                    "                    autoCapitalize: true,",
                    "                    placeHolder: '请输入不同意原因'",
                    "                }",
                    "            );",
                    "            return;",
                    "",
                    "        case \"接收\":",
                    "",
                    "            newstate = jobStates['接收'];",
                    "            break;",
                    "",
                    "        case \"删除\":",
                    "            newstate = jobStates['删除'];",
                    "            break;",
                    "",
                    "        case '退回':",
                    "        Ext.Msg.prompt('退回', null,",
                    "            function(buttonId,value) {",
                    "                if(buttonId=='ok'){",
                    "                    if(value===''){",
                    "                        Ext.toast('退回操作失败,请输入退回原因');",
                    "                        return;",
                    "                    }else{",
                    "                        remark=value;",
                    "                        loadMask.show();",
                    "                        var adapterParm = {",
                    "                                        userid:global.getUserId(),",
                    "                                        jnl:sj.jnl,",
                    "                                        state:jobStates['退回'],",
                    "                                        remark:remark,",
                    "                                        deptid:deptid || '',",
                    "                                        sj:sj",
                    "                        };",
                    "                        var store = dataUtil.createStore('first_check_job_sj');",
                    "//                         var store = dataUtil.createStore('first_check_job_detail');",
                    "//                         store.updateDat(",
                    "                        store.handerDat(",
                    "                            function(jnl) {",
                    "                                loadMask.hide();",
                    "                                if(jnl) {",
                    "                                    Ext.toast('退回操作完成！单号是：' + jnl);",
                    "                                } else {",
                    "                                    Ext.toast('退回操作完成！');",
                    "                                }",
                    "                                //刷新待办列表",
                    "                                liftnet.app.getController('Engineer.EngHomeController')",
                    "                                    .doEngHome_LoadTodoAll();",
                    "",
                    "                                //从待办任务进来退回不刷新派工单列表",
                    "                                // 刷新派工单列表",
                    "//                                 me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "                                viewUtil.goLast();",
                    "                            },",
                    "                            function(info) {",
                    "                                loadMask.hide();",
                    "                                if(!info) info = '(未知)';",
                    "                                Ext.toast('未能完成' + state + '操作，错误信息是：' + info);",
                    "                            },",
                    "                            adapterParm",
                    "                        );",
                    "",
                    "",
                    "                    }",
                    "",
                    "                }",
                    "                },",
                    "                null,",
                    "                true,",
                    "                null,",
                    "                {",
                    "                    autoCapitalize: true,",
                    "                    placeHolder: '请输入退回原因'",
                    "                }",
                    "            );",
                    "",
                    "            return;",
                    "}",
                    "",
                    "var adapterParm = {",
                    "    userid: global.getUserId(),",
                    "    jnl:jnl,",
                    "    state:newstate,",
                    "    remark:remark || '',",
                    "    deptid:deptid || '',",
                    "    sj: sj",
                    "};",
                    "loadMask.show();",
                    "// var store = dataUtil.createStore('first_check_job_detail');",
                    "var store = dataUtil.createStore('first_check_job_sj');",
                    "//         store.updateDat(",
                    "    store.handerDat(",
                    "               function(jnl) {",
                    "                   loadMask.hide();",
                    "                   if(jnl) {",
                    "                       Ext.toast(state+'操作完成！单号是：' + jnl);",
                    "                   } else {",
                    "                       Ext.toast(state+'操作完成！');",
                    "                   }",
                    "                   //从待办任务进来接收不刷新派工单列表",
                    "                   if(state!=='接收'){",
                    "                      // 刷新派工单列表",
                    "                       me.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));",
                    "                   }",
                    "                   //刷新待办列表",
                    "                   liftnet.app.getController('Engineer.EngHomeController')",
                    "                            .doEngHome_LoadTodoAll();",
                    "                   viewUtil.goLast();",
                    "                   },",
                    "               function(info) {",
                    "                     loadMask.hide();",
                    "                     if(!info) info = '(未知)';",
                    "                         Ext.toast('未能完成' + state + '操作，错误信息是：' + info);",
                    "                     },",
                    "                     adapterParm",
                    "        );",
                    "}",
                    ""
                ]
            },
            "name": "doEngFirstCheckJobShow_Process",
            "designerId": "4f6d9425-8377-4e10-9d6c-5f18c02c09a4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "搜索派工单"
                ],
                "designer|controlQuery": "searchfield#EngFirstCheckJob_Search",
                "designer|targetType": "Ext.field.Search",
                "fn": "onEngFirstCheckJob_SearchChange",
                "implHandler": [
                    "this.doEngFirstCheck_Job_Search(Ext.getCmp('EngFirstCheck_JobStatus'));"
                ],
                "name": "change"
            },
            "name": "onEngFirstCheckJob_SearchChange",
            "designerId": "8efd951a-abf6-4f64-b6be-25b352a05f26"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "搜索首检任务"
                ],
                "designer|controlQuery": "searchfield#EngFirstCheckTask_Search",
                "designer|targetType": "Ext.field.Search",
                "fn": "onEngFirstCheckTask_SearchChange",
                "implHandler": [
                    "",
                    "this.doEngFirstCheck_Task_Search(Ext.getCmp('EngFirstCheck_TaskStatus'));",
                    "// this.doEngFirstCheck_LoadTaskList(",
                    "//                                 1,",
                    "//                                 pagesize,",
                    "//                                 Ext.getCmp('EngFirstCheckTask_Search').getValue()||'',",
                    "//                                 'search'",
                    "//                             );"
                ],
                "name": "change"
            },
            "name": "onEngFirstCheckTask_SearchChange",
            "designerId": "be44af1c-13cd-45aa-90d3-66649e06b0f1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobAdd_ReturnButton",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_ReturnButtonTap",
            "designerId": "e1244cad-6645-4d2e-a61b-63ec762992b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngReformcheckJobAdd_ReturnButton",
                "designer|targetType": "Ext.Button",
                "fn": "onEngReformcheckJobAdd_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngReformcheckJobAdd_ReturnButtonTap",
            "designerId": "ca7b1590-1d36-4bff-9eab-32c18192cd9d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobShow_ReturnButton",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobShow_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobShow_ReturnButtonTap",
            "designerId": "f40dba1f-208b-4c12-9b05-57ede9ecea5c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单界面初始化",
                    "初始化相应数据（获取自动生成的jnl、当前用户的部门id）"
                ],
                "designer|controlQuery": "panel#EngFirstCheckJobAdd",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckJobAddInitialize",
                "implHandler": [
                    "//新增派工单界面初始化",
                    "",
                    "checkuserArr = [];",
                    "",
                    "//处理派工单用",
                    "jobStates={};",
                    "jobSlideAction ='';",
                    "// 初始化数据",
                    "var me = this;",
                    "var form = Ext.getCmp('EngFirstCheckJobAdd_Form');",
                    "var store;",
                    "var button1 = Ext.getCmp('EngFirstCheckJobAdd_BtnUpdate');",
                    "var button2 = Ext.getCmp('EngFirstCheckJobAdd_BtnSave');",
                    "var button3 = Ext.getCmp('EngFirstCheckJobAdd_BtnCommit');",
                    "",
                    "loadMask.show();",
                    "//获取当前用户部门",
                    "dataUtil.createStore('first_check_job_add_deptid').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "",
                    "if(!component.initialConfig.parm.record) {",
                    "    // 新单",
                    "    console.log('新派工单');",
                    "    // 操作：保存、提交",
                    "    button1.setText('保存');",
                    "    button2.setText('提交');",
                    "    button1.setHidden(false);",
                    "    button2.setHidden(false);",
                    "    button3.setHidden(true);",
                    "",
                    "    store = dataUtil.createStore('first_check_job_sj');",
                    "",
                    "//     var createdeptid;",
                    "    var createid = global.getUserId();",
                    "",
                    "",
                    "    var jnlStore = dataUtil.createStore('first_check_job_add_jnl');",
                    "    console.log(global.getUserName());",
                    "    jnlStore.loadDat(",
                    "        function(ret){",
                    "            store.add({",
                    "                jnl:\t\t\t\tret[0].jnl,",
                    "                creatorname:\t\tglobal.getUserName(),",
                    "                status:\t\t\t\t'',",
                    "                projectid:\t\t\t'',",
                    "                contractid:\t\t\t'',",
                    "                projectname:\t\t'',",
                    "                projectaddress:\t\t'',",
                    "                liftnum:\t\t\t'',",
                    "                dispatchtype:\t\t'',",
                    "                remark:\t\t\t\t'',",
                    "                planstartdate:\t\tnew Date(),",
                    "                planenddate:\t\tnew Date(),",
                    "                createid:\t\t\tcreateid,",
                    "//                 createdeptid:\t\tcreatedeptid,",
                    "                elevator:\t \t\t'',",
                    "                checkuser:\t\t\t'',",
                    "            });",
                    "            form.setRecord(store.getAt(0));",
                    "            loadMask.hide();",
                    "        },",
                    "        function(){",
                    "            loadMask.hide();",
                    "        }",
                    "    );",
                    "",
                    "} else {",
                    "",
                    "    // 首检派工修改",
                    "    console.log('旧单');",
                    "",
                    "//     button1.setHidden(true);",
                    "//     button2.setHidden(true);",
                    "//     button3.setHidden(true);",
                    "",
                    "    jobSlideAction = component.initialConfig.parm.action;",
                    "    updatejurisdiction = component.initialConfig.parm.updatejurisdiction;",
                    "    var jnl = component.initialConfig.parm.record.get('jnl');",
                    "    //从待办点进来才有这个值，用于设置底部按钮",
                    "    var nextstateFromTodo = component.initialConfig.parm.nextstate;",
                    "    var status = component.initialConfig.parm.record.get('status');",
                    "//     Ext.getCmp('EngFirstCheckJobAdd_Tbar').setTitle(jnl);",
                    "",
                    "//     if(updatejurisdiction===false){",
                    "//        Ext.getCmp('EngFirstCheckJobAdd_BtnPanel').setHidden(true);",
                    "//     }",
                    "    if(updatejurisdiction===true){",
                    "       button1.setHidden(false);",
                    "       button2.setHidden(true);",
                    "       button3.setHidden(false);",
                    "       button1.setText('保存');",
                    "       button3.setText('提交');",
                    "       Ext.getCmp('EngFirstCheckJobAdd_BtnPanel').setHidden(false);",
                    "    }else{",
                    "       Ext.getCmp('EngFirstCheckJobAdd_BtnPanel').setHidden(true);",
                    "    }",
                    "//     me.doEngFirstCheckJobAdd_setReadOnly(updatejurisdiction);",
                    "",
                    "    store = dataUtil.createStore('first_check_job_detail');",
                    "    //获取旧单信息",
                    "    store.loadDat(",
                    "        function() {",
                    "            var record = store.getAt(0);",
                    "            form.setRecord(record);",
                    "",
                    "            me.doEngFirstCheckTask_setArray(record,form,true);",
                    "",
                    "            checkuserArr = record.get('checkuser');",
                    "",
                    "            var nextstates = record.get('nextstate');",
                    "            if(nextstateFromTodo){",
                    "                nextstates = nextstateFromTodo;",
                    "                record.set('nextstate',nextstates);",
                    "            }",
                    "            if(nextstates){",
                    "                for(var j = 0;j<nextstates.length;j++){",
                    "                    jobStates[nextstates[j].name] = nextstates[j].state+'';",
                    "                }",
                    "                //处理按钮显示",
                    "                button1.record = record;",
                    "                button2.record = record;",
                    "                button3.record = record;",
                    "                me.doEngFirstCheck_InitialNextStateButton(button1, 0);",
                    "                me.doEngFirstCheck_InitialNextStateButton(button2, 1);",
                    "                me.doEngFirstCheck_InitialNextStateButton(button3, 2);",
                    "",
                    "                Ext.getCmp('EngFirstCheckJobAdd_BtnPanel')",
                    "                    .setHidden(button1.getText()==='');",
                    "",
                    "            }",
                    "",
                    "            //根据操作权限设置是否只读",
                    "            me.doEngFirstCheckJobAdd_setReadOnly(nextstates);",
                    "",
                    "            loadMask.hide();",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能找到派工单资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "        },",
                    "        {",
                    "            userid:global.getUserId(),",
                    "            jnl:jnl,",
                    "            url:component.initialConfig.parm.url",
                    "        }",
                    "    );",
                    "}",
                    "",
                    "// 特殊操作直接滚动到页末",
                    "if(jobSlideAction==='审核' || jobSlideAction==='退回') {",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "        Ext.getCmp('EngFirstCheckJobAdd_Form').getScrollable().getScroller().scrollToEnd(true);",
                    "        task.cancel();",
                    "    });",
                    "    task.delay(300);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckJobAddInitialize",
            "designerId": "6343865b-70b3-45b9-bfcc-5a61fa3b1a5f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单界面初始化",
                    "初始化相应数据（获取自动生成的jnl、当前用户的部门id）"
                ],
                "designer|controlQuery": "panel#EngReformcheckJobAdd",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngReformcheckJobAddInitialize",
                "implHandler": [
                    "//新增派工单界面初始化",
                    "",
                    "checkuserArr = [];",
                    "",
                    "//处理派工单用",
                    "jobStates={};",
                    "jobSlideAction ='';",
                    "// 初始化数据",
                    "var me = this;",
                    "var form = Ext.getCmp('EngReformcheckJobAdd_Form');",
                    "var store;",
                    "var button1 = Ext.getCmp('EngReformcheckJobAdd_BtnUpdate');",
                    "var button2 = Ext.getCmp('EngReformcheckJobAdd_BtnSave');",
                    "var button3 = Ext.getCmp('EngReformcheckJobAdd_BtnCommit');",
                    "",
                    "loadMask.show();",
                    "//获取当前用户部门",
                    "dataUtil.createStore('first_check_job_add_deptid').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "",
                    "if(!component.initialConfig.parm.record) {",
                    "    // 新单",
                    "    console.log('新派工单');",
                    "    // 操作：保存、提交",
                    "    button1.setText('保存');",
                    "    button2.setText('提交');",
                    "    button1.setHidden(false);",
                    "    button2.setHidden(false);",
                    "    button3.setHidden(true);",
                    "",
                    "    store = dataUtil.createStore('first_check_job_sj');",
                    "",
                    "//     var createdeptid;",
                    "    var createid = global.getUserId();",
                    "",
                    "",
                    "    var jnlStore = dataUtil.createStore('first_check_job_add_jnl');",
                    "    console.log(global.getUserName());",
                    "    jnlStore.loadDat(",
                    "        function(ret){",
                    "            store.add({",
                    "                jnl:\t\t\t\tret[0].jnl,",
                    "                creatorname:\t\tglobal.getUserName(),",
                    "                status:\t\t\t\t'',",
                    "                projectid:\t\t\t'',",
                    "                contractid:\t\t\t'',",
                    "                projectname:\t\t'',",
                    "                projectaddress:\t\t'',",
                    "                liftnum:\t\t\t'',",
                    "                dispatchtype:\t\t'',",
                    "                remark:\t\t\t\t'',",
                    "                planstartdate:\t\tnew Date(),",
                    "                planenddate:\t\tnew Date(),",
                    "                createid:\t\t\tcreateid,",
                    "//                 createdeptid:\t\tcreatedeptid,",
                    "                elevator:\t \t\t'',",
                    "                checkuser:\t\t\t'',",
                    "            });",
                    "            form.setRecord(store.getAt(0));",
                    "            loadMask.hide();",
                    "        },",
                    "        function(){",
                    "            loadMask.hide();",
                    "        }",
                    "    );",
                    "",
                    "} else {",
                    "",
                    "    // 首检派工修改",
                    "    console.log('旧单');",
                    "",
                    "//     button1.setHidden(true);",
                    "//     button2.setHidden(true);",
                    "//     button3.setHidden(true);",
                    "",
                    "    jobSlideAction = component.initialConfig.parm.action;",
                    "    updatejurisdiction = component.initialConfig.parm.updatejurisdiction;",
                    "    var jnl = component.initialConfig.parm.record.get('jnl');",
                    "    //从待办点进来才有这个值，用于设置底部按钮",
                    "    var nextstateFromTodo = component.initialConfig.parm.nextstate;",
                    "    var status = component.initialConfig.parm.record.get('status');",
                    "//     Ext.getCmp('EngFirstCheckJobAdd_Tbar').setTitle(jnl);",
                    "",
                    "//     if(updatejurisdiction===false){",
                    "//        Ext.getCmp('EngFirstCheckJobAdd_BtnPanel').setHidden(true);",
                    "//     }",
                    "    if(updatejurisdiction===true){",
                    "       button1.setHidden(false);",
                    "       button2.setHidden(true);",
                    "       button3.setHidden(false);",
                    "       button1.setText('保存');",
                    "       button3.setText('提交');",
                    "       Ext.getCmp('EngReformcheckJobAdd_BtnPanel').setHidden(false);",
                    "    }else{",
                    "       Ext.getCmp('EngReformcheckJobAdd_BtnPanel').setHidden(true);",
                    "    }",
                    "//     me.doEngFirstCheckJobAdd_setReadOnly(updatejurisdiction);",
                    "",
                    "    store = dataUtil.createStore('first_check_job_detail');",
                    "    //获取旧单信息",
                    "    store.loadDat(",
                    "        function() {",
                    "            var record = store.getAt(0);",
                    "            form.setRecord(record);",
                    "",
                    "            me.doEngFirstCheckTask_setArray(record,form,true);",
                    "",
                    "            checkuserArr = record.get('checkuser');",
                    "",
                    "            var nextstates = record.get('nextstate');",
                    "            if(nextstateFromTodo){",
                    "                nextstates = nextstateFromTodo;",
                    "                record.set('nextstate',nextstates);",
                    "            }",
                    "            if(nextstates){",
                    "                for(var j = 0;j<nextstates.length;j++){",
                    "                    jobStates[nextstates[j].name] = nextstates[j].state+'';",
                    "                }",
                    "                //处理按钮显示",
                    "                button1.record = record;",
                    "                button2.record = record;",
                    "                button3.record = record;",
                    "                me.doEngAllCheck_InitialNextStateButton(button1, 0);",
                    "                me.doEngAllCheck_InitialNextStateButton(button2, 1);",
                    "                me.doEngAllCheck_InitialNextStateButton(button3, 2);",
                    "",
                    "                Ext.getCmp('EngReformcheckJobAdd_BtnPanel')",
                    "                    .setHidden(button1.getText()==='');",
                    "",
                    "            }",
                    "",
                    "            //根据操作权限设置是否只读",
                    "            me.doEngAllCheckJobAdd_setReadOnly(nextstates,'EngReformcheck');",
                    "",
                    "            loadMask.hide();",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能找到派工单资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "        },",
                    "        {",
                    "            userid:global.getUserId(),",
                    "            jnl:jnl,",
                    "            url:component.initialConfig.parm.url",
                    "        }",
                    "    );",
                    "}",
                    "",
                    "// 特殊操作直接滚动到页末",
                    "if(jobSlideAction==='审核' || jobSlideAction==='退回') {",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "        Ext.getCmp('EngReformcheckJobAdd_Form').getScrollable().getScroller().scrollToEnd(true);",
                    "        task.cancel();",
                    "    });",
                    "    task.delay(300);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngReformcheckJobAddInitialize",
            "designerId": "f12344bb-0219-414b-8ae0-b238c2bfe5ab"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "派工单(旧单)查看界面初始化",
                    "初始化底部按钮、获取派工单详细信息"
                ],
                "designer|controlQuery": "panel#EngFirstCheckJobShow",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckJobShowInitialize",
                "implHandler": [
                    "//派工单处理界面初始化",
                    "",
                    "// 初始化数据",
                    "var me = this;",
                    "var form = Ext.getCmp('EngFirstCheckJobAdd_Form1');",
                    "var store;",
                    "jobStates={};",
                    "var button1 = Ext.getCmp('EngFirstCheckJobAdd_BtnUpdate1');",
                    "var button2 = Ext.getCmp('EngFirstCheckJobAdd_BtnSave1');",
                    "var button3 = Ext.getCmp('EngFirstCheckJobAdd_BtnCommit1');",
                    "var action = component.initialConfig.parm.action;",
                    "if(!component.initialConfig.parm.record) {",
                    "    //不会执行的",
                    "    Ext.toast('未能找到派工单资料，请稍候再试！');",
                    "    loadMask.hide();",
                    "    viewUtil.goLast();",
                    "} else {",
                    "    // 首检派工审批查看",
                    "",
                    "    var action = component.initialConfig.parm.action;",
                    "    var jnl = component.initialConfig.parm.record.get('jnl');",
                    "    var status = component.initialConfig.parm.record.get('status');",
                    "    Ext.getCmp('EngFirstCheckJobAdd_Tbar1').setTitle(jnl);",
                    "",
                    "    loadMask.show();",
                    "",
                    "    store = dataUtil.createStore('first_check_job_detail');",
                    "    store.loadDat(",
                    "        function() {",
                    "            var record = store.getAt(0);",
                    "            console.log(record);",
                    "            var nextstates = record.get('nextstate');",
                    "            if(nextstates){",
                    "",
                    "            for(var j = 0;j<nextstates.length;j++){",
                    "                jobStates[nextstates[j].name] = nextstates[j].state+'';",
                    "            }",
                    "        }",
                    "",
                    "",
                    "            form.setRecord(record);",
                    "            me.doEngFirstCheckTask_setArray(record,form,false);",
                    "            if(action=='查看'){",
                    "                Ext.getCmp('EngFirstCheckJobShow_BtnPanel').setHidden(true);",
                    "            }else{",
                    "            // 根据待办指示决定明细页面操作按钮个数",
                    "                button1.record = component.initialConfig.parm.record;",
                    "                button2.record = component.initialConfig.parm.record;",
                    "                button3.record = component.initialConfig.parm.record;",
                    "                me.doEngFirstCheck_InitialNextStateButton(button1, 0);",
                    "                me.doEngFirstCheck_InitialNextStateButton(button2, 1);",
                    "                me.doEngFirstCheck_InitialNextStateButton(button3, 2);",
                    "            }/* 使用上面标准做法，废弃用状态决定操作的方式：",
                    "            Ext.getCmp('EngFaultAdd_BtnSave').setText('修改');",
                    "            if(state==='已退回') {",
                    "                Ext.getCmp('EngFaultAdd_BtnClose').setText('关闭');",
                    "            }",
                    "            */",
                    "            loadMask.hide();",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能找到派工单资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "        },",
                    "        {",
                    "            userid:global.getUserId(),",
                    "            jnl:jnl",
                    "        }",
                    "    );",
                    "}",
                    "",
                    "",
                    "// 特殊操作直接滚动到页末",
                    "if(action==='审核' || action==='退回') {",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "        Ext.getCmp('EngFirstCheckJobAdd_Form1').getScrollable().getScroller().scrollToEnd(true);",
                    "        task.cancel();",
                    "    });",
                    "    task.delay(300);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckJobShowInitialize",
            "designerId": "cf8920e5-da55-4a3a-aecf-6891ba09d0f5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单时选择项目",
                    "跳转至选择界面，选择完毕在当前界面表单回显相应数据"
                ],
                "designer|controlQuery": "textfield#EngFirstCheckJobAdd_projectname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckJobAdd_projectnameFocus",
                "implHandler": [
                    "// 新增派工单 - 选择项目",
                    "",
                    "var tpl =",
                    "    '<div clear:both>'+",
                    "    '<div style=\"float:right\" class=\"liftnet-font-size12 liftnet-fontColor-darkGray\">{elevatornum}台</div>'+",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{projectname}</div>'+",
                    "    '<div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{projectname}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{projectaddress}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'firstcheck_sjfpxmlist',",
                    "    //store获取数据时需要的参数",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20,",
                    "        projectname:textfield.getValue(),",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: false,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.projectname = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                projectname: record",
                    "            });",
                    "        } else {",
                    "            Ext.getCmp('EngFirstCheckJobAdd_Form').setValues({",
                    "                projectname: record.get('projectname'),",
                    "                projectid: record.get('projectid'),",
                    "                contractid: record.get('contractid'),",
                    "                projectaddress: record.get('projectaddress'),",
                    "                liftnum: record.get('elevatornum'),",
                    "                checkednum: 0,",
                    "                ",
                    "//                 checkednum: record.get('elevatornum'),",
                    "                dispatchtype: record.get('dispatchtype')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_projectnameFocus",
            "designerId": "d868d714-5875-4e76-ba73-680c74546b26"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单时选择电梯(多选)",
                    "回显选择台数、已选择电梯的相关信息"
                ],
                "designer|controlQuery": "textfield#EngFirstCheckJobAdd_checkednum",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckJobAdd_checkednumFocus",
                "implHandler": [
                    "var projectName = Ext.getCmp('EngFirstCheckJobAdd_projectname').getValue();",
                    "if(!projectName||projectName===''){",
                    "    Ext.toast('请先选择项目');",
                    "    return;",
                    "}",
                    "// 新增派工单 - 选择电梯",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{prodno}</div>' +",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{facname}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{elevatorid}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{FSD}</div>'",
                    "    ;",
                    "//var storageid = Ext.getCmp('EngFaultAdd_storageid').getValue();",
                    "var contractid = Ext.getCmp('EngFirstCheckJobAdd_contractid').getValue();",
                    "viewUtil.goNext('Common.ComMultiSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'firstcheck_sjfpdtlist',",
                    "    //store获取电梯数据所需参数",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        contractid:contractid,",
                    "        //storageid: storageid",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    allowselectall:true,//显示全选按钮",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFirstCheckJobAdd_Form').setValues({",
                    "                elevator: record",
                    "            });",
                    "        } else {",
                    "             var elevator = '';",
                    "             for(var i = 0; i < record.length; i++){",
                    "                 if(i!==0){",
                    "                     elevator+=',';",
                    "                 }",
                    "                 elevator+=record[i].get('prodno')+'_'+record[i].get('liftautono')+'_'+record[i].get('detailrowid');",
                    "             }",
                    "             console.log(elevator);",
                    "             Ext.getCmp('EngFirstCheckJobAdd_elevator').setValue(elevator);",
                    "             textfield.setValue(record.length);",
                    "",
                    "",
                    "         }",
                    "     }",
                    " });",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_checkednumFocus",
            "designerId": "a101941f-ebd9-4173-8322-725b6ef1362b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单界面选择检查人员(多选)"
                ],
                "designer|controlQuery": "textareafield#EngFirstCheckJobAdd_checkuserName",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onEngFirstCheckJobAdd_checkuserNameFocus",
                "implHandler": [
                    "",
                    "viewUtil.goNext('Engineer.EngFirstCheckCheckUser',",
                    "                {",
                    "                    checkuserArr:checkuserArr,",
                    "                    show:Ext.getCmp('EngFirstCheckJobAdd_checkuserName'),",
                    "                    hide:Ext.getCmp('EngFirstCheckJobAdd_checkuser'),",
                    "                    flag:'Job'",
                    "                });",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_checkuserNameFocus",
            "designerId": "a388e7e4-92cb-4e43-b3f2-ef80b91d3247"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "新增派工单界面按钮点击事件处理"
                ],
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnCommit",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnCommitTap",
                "implHandler": [
                    "var btnText = button.getText();",
                    "",
                    "if(jobSlideAction===\"退回修改\"){//退回修改调用审批接口",
                    "    this.doHanderShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "",
                    "",
                    "if(btnText==='保存' || btnText==='提交'){",
                    "//     this.doEngFirstCheckJobAdd_Process(btnText);",
                    "    this.doAddShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "// this.doEngFirstCheckJobShow_Process(btnText);",
                    "this.doHanderShowAlertDialog(btnText);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnCommitTap",
            "designerId": "2a710780-fa1e-4a1c-a7cb-7e0b15364924"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnCommit1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnCommit1Tap",
                "implHandler": [
                    "// this.doEngFirstCheckJobAdd_Process(button.getText());",
                    "this.doEngFirstCheckJobShow_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnCommit1Tap",
            "designerId": "d7757394-ebaa-4690-b4b8-776340663d83"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnSave",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnSaveTap",
                "implHandler": [
                    "// this.doEngFirstCheckJobAdd_Process(button.getText());",
                    "var btnText = button.getText();",
                    "",
                    "if(jobSlideAction===\"退回修改\"){//退回修改调用审批接口",
                    "    this.doHanderShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "",
                    "",
                    "if(btnText==='保存' || btnText==='提交'){",
                    "//     this.doEngFirstCheckJobAdd_Process(btnText);",
                    "    this.doAddShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "// this.doEngFirstCheckJobShow_Process(btnText);",
                    "this.doHanderShowAlertDialog(btnText);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnSaveTap",
            "designerId": "3d0f3421-1b6d-4c7c-98c5-7da3994f63b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "派工单查看界面按钮点击事件处理"
                ],
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnSave1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnSave1Tap",
                "implHandler": [
                    "// this.doEngFirstCheckJobAdd_Process(button.getText());",
                    "this.doEngFirstCheckJobShow_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnSave1Tap",
            "designerId": "51f6b724-fc82-41dc-bd83-25816e55e1a6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnUpdate",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnUpdateTap",
                "implHandler": [
                    "// this.doEngFirstCheckJobAdd_Process(button.getText());",
                    "var btnText = button.getText();",
                    "",
                    "if(jobSlideAction===\"退回修改\"){//退回修改调用审批接口",
                    "    this.doHanderShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "",
                    "if(btnText==='保存' || btnText==='提交'){",
                    "//     this.doEngFirstCheckJobAdd_Process(btnText);",
                    "    this.doAddShowAlertDialog(btnText);",
                    "    return;",
                    "}",
                    "// this.doEngFirstCheckJobShow_Process(btnText);",
                    "this.doHanderShowAlertDialog(btnText);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnUpdateTap",
            "designerId": "80020215-6c8a-400f-b20f-ccfd8af1c70b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobAdd_BtnUpdate1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobAdd_BtnUpdate1Tap",
                "implHandler": [
                    "// this.doEngFirstCheckJobAdd_Process(button.getText());",
                    "this.doEngFirstCheckJobShow_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobAdd_BtnUpdate1Tap",
            "designerId": "7032775d-c85e-4301-aebd-212f5a3f7de2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "textfield",
                    "fn"
                ],
                "fn": "doEngFirstCheckJobAdd_ShowDatePicker",
                "implHandler": [
                    "// 日期选择初始化",
                    "var y = new Date().getFullYear();",
                    "var items = [",
                    "    {",
                    "        text: '现在',",
                    "        handler: function() {",
                    "            picker.setValueAnimated(new Date());",
                    "        }",
                    "    }];",
                    "var picker = Ext.create('ux.DateTime',",
                    "                        {",
                    "                            yearFrom: y - 1,",
                    "                            yearTo: y + 1,",
                    "                            doneButton: {",
                    "                                text: '确定',",
                    "                                handler: function() {",
                    "                                    textfield.setValue(",
                    "                                        Ext.Date.format(picker.getValue(),'Y-m-d'));",
                    "                                    picker.hide();",
                    "                                    if(fn && typeof(fn)==='function') {",
                    "                                        fn();",
                    "                                    }",
                    "                                    picker.destroy();",
                    "                                }",
                    "                            },",
                    "                            cancelButton: '取消',",
                    "                            toolbar: {",
                    "                                items : items",
                    "                            }",
                    "                        });",
                    "",
                    "picker.setValue(Ext.Date.parse(textfield.getValue(), 'Y-m-d', true));",
                    "picker.getToolbar().setTitle(textfield.getLabel());",
                    "",
                    "Ext.Viewport.add(picker);",
                    "picker.show();"
                ]
            },
            "name": "doEngFirstCheckJobAdd_ShowDatePicker",
            "designerId": "72fd3454-62c1-47f2-a847-02aaffd4018f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFirstCheck_ListJob",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFirstCheck_ListJobItemTap",
                "implHandler": [
                    "var actions = {",
                    "    \"退回\":{action:'修改',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"新建\":{action:'修改',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"待审\":{action:'查看',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"审批中\":{action:'查看',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"通过\":{action:'查看',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"不通过\":{action:'查看',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"作废\":{action:'查看',view:'Engineer.EngFirstCheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "};",
                    "// var targetViews = {",
                    "//     \"新建\":\"Engineer.EngFirstCheckJobAdd\",",
                    "//     \"待审\":\"Engineer.EngFirstCheckJobShow\",",
                    "//     \"通过\":\"Engineer.EngFirstCheckJobShow\",",
                    "//     \"不通过\":\"Engineer.EngFirstCheckJobShow\",",
                    "// };",
                    "",
                    "var action = record.get('status');",
                    "viewUtil.goNext(actions[action].view,",
                    "                {record:record,",
                    "                 action:actions[action].action,",
                    "                 url:actions[action].url,",
                    "//                  updatejurisdiction:updatejurisdiction",
                    "                 updatejurisdiction:jobupdatejurisdiction&&(action==='新建'||action==='退回')",
                    "                });",
                    "",
                    "//跳转到只读界面(派工单查看-->审核)",
                    "// viewUtil.goNext('Engineer.EngFirstCheckJobShow',{record:record,action:'查看'});",
                    ""
                ],
                "name": "itemtap"
            },
            "name": "onEngFirstCheck_ListJobItemTap",
            "designerId": "4329ec92-9deb-4225-b295-80b7b355faf5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngReformcheck_ListJob",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngReformCheck_ListJobItemTap",
                "implHandler": [
                    "var actions = {",
                    "    \"退回\":{action:'修改',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"新建\":{action:'修改',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"待审\":{action:'查看',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"审批中\":{action:'查看',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"通过\":{action:'查看',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"不通过\":{action:'查看',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "    \"作废\":{action:'查看',view:'Engineer.EngReformcheckJobAdd',",
                    "          url:'/adapters/firstcheck/api/1.0/fcddetail'},",
                    "};",
                    "// var targetViews = {",
                    "//     \"新建\":\"Engineer.EngFirstCheckJobAdd\",",
                    "//     \"待审\":\"Engineer.EngFirstCheckJobShow\",",
                    "//     \"通过\":\"Engineer.EngFirstCheckJobShow\",",
                    "//     \"不通过\":\"Engineer.EngFirstCheckJobShow\",",
                    "// };",
                    "",
                    "var action = record.get('status');",
                    "viewUtil.goNext(actions[action].view,",
                    "                {record:record,",
                    "                 action:actions[action].action,",
                    "                 url:actions[action].url,",
                    "//                  updatejurisdiction:updatejurisdiction",
                    "                 updatejurisdiction:jobupdatejurisdiction&&(action==='新建'||action==='退回')",
                    "                });",
                    "",
                    "//跳转到只读界面(派工单查看-->审核)",
                    "// viewUtil.goNext('Engineer.EngFirstCheckJobShow',{record:record,action:'查看'});",
                    ""
                ],
                "name": "itemtap"
            },
            "name": "onEngReformCheck_ListJobItemTap",
            "designerId": "ef7d6f7b-0f15-4661-975b-b6ebec19767b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFirstCheck_ListTask",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFirstCheck_ListTaskItemTap",
                "implHandler": [
                    "var actions = {",
                    "    \"新建\":\"修改\",",
                    "    \"待审\":\"查看\",",
                    "    \"通过\":\"查看\",",
                    "    \"不通过\":\"查看\",",
                    "    \"查看\":\"查看\"",
                    "};",
                    "var action = record.get('status');",
                    "",
                    "// viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:actions[action]});",
                    "// viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:'action'});",
                    "",
                    "var urls = {",
                    "    \"新建\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"待审\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"通过\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"不通过\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"查看\":\"/adapters/firstcheck/api/1.0/fcinputdetail\"",
                    "};",
                    "",
                    "viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:actions[action],url:urls[action]});"
                ],
                "name": "itemtap"
            },
            "name": "onEngFirstCheck_ListTaskItemTap",
            "designerId": "0b0d5d16-ca11-4545-9b27-03671961e201"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngReformcheck_ListTask",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngReformcheck_ListTaskItemTap",
                "implHandler": [
                    "var actions = {",
                    "    \"新建\":\"修改\",",
                    "    \"待审\":\"查看\",",
                    "    \"通过\":\"查看\",",
                    "    \"不通过\":\"查看\",",
                    "    \"查看\":\"查看\"",
                    "};",
                    "var action = record.get('status');",
                    "",
                    "// viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:actions[action]});",
                    "// viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:'action'});",
                    "",
                    "var urls = {",
                    "    \"新建\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"待审\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"通过\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"不通过\":\"/adapters/firstcheck/api/1.0/fcinputdetail\",",
                    "    \"查看\":\"/adapters/firstcheck/api/1.0/fcinputdetail\"",
                    "};",
                    "",
                    "viewUtil.goNext('Engineer.EngFirstCheckTask',{record:record,action:actions[action],url:urls[action]});"
                ],
                "name": "itemtap"
            },
            "name": "onEngReformcheck_ListTaskItemTap",
            "designerId": "4e46d0c4-55f2-4419-bd2c-f18f0afdbb17"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFirstCheckTask_CheckProList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFirstCheckTask_CheckProListItemTap",
                "implHandler": [
                    "//只读",
                    "// if(readActions.indexOf(action)!=-1){",
                    "if(isReadOnly){",
                    "    return;",
                    "}",
                    "",
                    "// 如果点击了列表的图标区域，则改变状态",
                    "if(e.target.id==='clickArea'||e.target.id==='statusArea') {",
                    "    switch(record.get('checkverdict')) {",
                    "        case '√':",
                    "            newStatus = '×';",
                    "            break;",
                    "        case '×':",
                    "            newStatus = '/';",
                    "            break;",
                    "        case '/':",
                    "            newStatus = '√';",
                    "            break;",
                    "    }",
                    "    // 更改数据记录",
                    "    record.set('checkverdict', newStatus);",
                    "    this.doEngFirstCheckTask_showCount();",
                    "",
                    "}else{",
                    "    //填写检验结果",
                    "    Ext.Msg.prompt('检验结果', null,",
                    "        function(buttonId,value) {",
                    "                if(buttonId=='ok'){",
                    "                    record.set('checkresult', value);",
                    "                }",
                    "            },",
                    "            null,",
                    "            true,",
                    "            record.get('checkresult') || '',",
                    "            {",
                    "                autoCapitalize: true,",
                    "                placeHolder: '请输入检验结果',",
                    "",
                    "            }",
                    "        );",
                    "    }"
                ],
                "name": "itemtap"
            },
            "name": "onEngFirstCheckTask_CheckProListItemTap",
            "designerId": "5fe81349-2f62-4658-b03c-78ac394695f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_ReturnButton",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_ReturnButtonTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_ReturnButtonTap",
            "designerId": "781b9125-ddba-4670-8c08-a6aca0cf87ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckTask",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckTaskInitialize",
                "implHandler": [
                    "var me = this;",
                    "// 初始化下拉选择项目",
                    "//开门方式列表",
                    "dataUtil.createStore('eng_kmfslist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "//控制方式列表",
                    "dataUtil.createStore('eng_kzfslist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "//使用场所",
                    "dataUtil.createStore('eng_placelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "//区域",
                    "// dataUtil.createStore('eng_liftdomainid').loadDat(Ext.emptyFn,Ext.emptyFn,{userid:global.getUserId(),areatype:'A',areaid:''});",
                    "//电梯分类",
                    "dataUtil.createStore('eng_lifttypelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "//清空检验项目",
                    "Ext.getCmp('EngFirstCheckTask_CheckProList').",
                    "                getStore().setData([]);",
                    "//清空配件",
                    "Ext.getCmp('EngFirstCheckTask_PartList').",
                    "                getStore().setData([]);",
                    "",
                    "action = component.initialConfig.parm.action;",
                    "url = component.initialConfig.parm.url;",
                    "isReadOnly = false;",
                    "taskcheckuserArr=[];",
                    "",
                    "var button1 = Ext.getCmp('EngFirstCheckTask_BtnSave');",
                    "var button2 = Ext.getCmp('EngFirstCheckTask_BtnCommit');",
                    "var button3 = Ext.getCmp('EngFirstCheckTask_BtnCancel');",
                    "button1.setHidden(true);",
                    "button2.setHidden(true);",
                    "button3.setHidden(true);",
                    "",
                    "//只读的Action",
                    "readActions = [",
                    "    '查看','审核','同意','不同意'",
                    "];",
                    "",
                    "// switch(action){",
                    "//     case '审核':",
                    "//         //只读",
                    "//         me.doEngFirstCheckTask_setReadOnly();",
                    "//         Ext.getCmp('EngFirstCheck_Panel2').setHidden(false);",
                    "//         Ext.getCmp('EngFirstCheck_Panel1').setHidden(true);",
                    "//         break;",
                    "//     case '修改':",
                    "//     case '保存':",
                    "//     case '提交':",
                    "",
                    "//         Ext.getCmp('EngFirstCheck_Panel2').setHidden(true);",
                    "//         Ext.getCmp('EngFirstCheck_Panel1').setHidden(false);",
                    "//         break;",
                    "//     case '查看':",
                    "//         //只读",
                    "//         me.doEngFirstCheckTask_setReadOnly();",
                    "//         Ext.getCmp('EngFirstCheck_Panel2').setHidden(true);",
                    "//         Ext.getCmp('EngFirstCheck_Panel1').setHidden(true);",
                    "//         break;",
                    "// }",
                    "",
                    "// var url = {",
                    "//     '修改':'/adapters/firstcheck/api/1.0/fcinputdetail',",
                    "//     '保存':'/adapters/firstcheck/api/1.0/fcinputdetail',",
                    "//     '提交':'/adapters/firstcheck/api/1.0/fcinputdetail',",
                    "//     '审核':'/adapters/firstcheck/api/1.0/fcaduitdetail',//首检任务审批查看",
                    "//     '查看':'/adapters/firstcheck/api/1.0/fcinputdetail'//首检任务录入查看",
                    "// };",
                    "",
                    "var jnlno = component.initialConfig.parm.record.get('jnlno');",
                    "var store = dataUtil.createStore('first_check_task_sj');",
                    "taskStates = {};",
                    "",
                    "typeid = '';",
                    "nowtypeid = '';",
                    "checkProjects=[];",
                    "isFirstLoad = false;",
                    "",
                    "loadMask.show();",
                    "store.loadDat(",
                    "    function(){",
                    "        isFirstLoad = true;",
                    "        var record = store.getAt(0);",
                    "        var nextstates = record.get('nextstate');",
                    "        if(nextstates.length>0){",
                    "            for(var j = 0;j<nextstates.length;j++){",
                    "                taskStates[nextstates[j].name] = nextstates[j].state+'';",
                    "            }",
                    "        }else{",
                    "            Ext.getCmp('EngFirstCheck_Panel1').setHidden(true);",
                    "        }",
                    "        //处理按钮显示",
                    "        button1.record = record;",
                    "        button2.record = record;",
                    "        button3.record = record;",
                    "        me.doEngFirstCheck_InitialNextStateButton(button1, 0);",
                    "        me.doEngFirstCheck_InitialNextStateButton(button2, 1);",
                    "        me.doEngFirstCheck_InitialNextStateButton(button3, 2);",
                    "",
                    "        me.doEngFirstCheckTask_setReadOnly(nextstates);",
                    "",
                    "        Ext.getCmp('EngFirstCheckTask_Form').setRecord(record);",
                    "",
                    "        typeid = record.get('typeid');",
                    "        nowtypeid = typeid;",
                    "        checkProjects = record.get('checkproject');",
                    "",
                    "        //处理时间",
                    "        var items = Ext.getCmp('EngFirstCheckTask_Form').getItems().items;",
                    "        for(var k = 0,length = items.length;k <length; k++){",
                    "            if(items[k].getXTypes().indexOf('datepickerfield')!=-1){",
                    "                var dateStr = record.get(items[k].getName());",
                    "                items[k].setValue(dateStr===''?'':new Date(dateStr));",
                    "            }",
                    "        }",
                    "        //处理群控台数",
                    "        if(record.get('contype')===3 || record.get('contype')==='3'){",
                    "            Ext.getCmp('EngFirstCheckTask_controlnum').setHidden(false);",
                    "        }",
                    "",
                    "        if(record.get('isreformflag')=='Y'){",
                    "            Ext.getCmp('EngFirstCheckTask_isreformflag').setValue(1);",
                    "        }else{",
                    "            Ext.getCmp('EngFirstCheckTask_isreformflag').setValue(0);",
                    "        }",
                    "",
                    "        taskcheckuserArr = record.get('checkuser');",
                    "        //处理检验人员",
                    "        var checkusers = record.get('checkuser');",
                    "        var checkuserStr=\"\";",
                    "        var checkeduser = \"\";",
                    "        //处理数组",
                    "        for(var i = 0; i < checkusers.length; i++){",
                    "            checkuserStr = checkuserStr + checkusers[i].username + '('+",
                    "                checkusers[i].usertypename+')';",
                    "            if(i!=checkusers.length-1){",
                    "                checkuserStr = checkuserStr +',';",
                    "            }",
                    "            if(i!==0){",
                    "                 checkeduser+=',';",
                    "             }",
                    "             checkeduser+=checkusers[i].userid+'_'+checkusers[i].departmentid+'_'+checkusers[i].usertype;",
                    "         }",
                    "        Ext.getCmp('EngFirstCheckTask_checkuserName').setValue(checkuserStr);",
                    "        Ext.getCmp('EngFirstCheckTask_checkuser').setValue(checkeduser);",
                    "",
                    "        //检查项目",
                    "        if(record.data.checkproject.length===0){",
                    "            //没有检验项目时要获取检验项目",
                    "            Ext.getCmp('EngFirstCheckTask_CheckProList').getStore().loadDat(",
                    "                function(){",
                    "                    //检查项目统计",
                    "                    me.doEngFirstCheckTask_showCount();",
                    "                },",
                    "                function(){",
                    "                    Ext.toast('获取检验项目失败');",
                    "                },",
                    "                {",
                    "                    typeid:Ext.getCmp('EngFirstCheckTask_typeid').getValue()",
                    "                }",
                    "            );",
                    "        }else{",
                    "",
                    "            Ext.getCmp('EngFirstCheckTask_CheckProList').",
                    "                getStore().setData(record.data.checkproject);",
                    "",
                    "        }",
                    "",
                    "",
                    "",
                    "",
                    "        //检查项目统计",
                    "        me.doEngFirstCheckTask_showCount();",
                    "",
                    "        if(record.data.firstcheckparts.length===0){",
                    "            //只读时才显示无配件",
                    "//             if(readActions.indexOf(action)!=-1){",
                    "            if(isReadOnly){",
                    "                Ext.getCmp('EngFirstCheckTask_NoPartInfo').setHidden(false);",
                    "                Ext.getCmp('EngFirstCheckTask_PartList').suspendEvents();",
                    "            }",
                    "        }",
                    "        //零部件",
                    "        Ext.getCmp('EngFirstCheckTask_PartList').",
                    "            getStore().setData(record.data.firstcheckparts);",
                    "",
                    "",
                    "        //现场信息显示照片",
                    "        var pictures = record.get('sitephoto');//照片信息",
                    "        if(pictures!==null&&pictures.length>0){",
                    "            for(var z=0;z<pictures.length;z++){",
                    "                var index = z+1;",
                    "                var ImgID = 'EngFirstCheckTask_photo_'+index;",
                    "                var pictureBase64 = pictures[z].pic;",
                    "                var ImgSrc = 'data:image/jpeg;base64,' +pictureBase64;",
                    "                Ext.getCmp(ImgID).setSrc(ImgSrc);",
                    "                //设置label",
                    "                for(var q = 1;q<=pictures.length;q++){",
                    "                    var LabelID1 ='EngFirstCheckTask_photo_'+index+'_label_1';",
                    "                    Ext.getCmp(LabelID1).setHtml(pictures[z].takeremark);",
                    "                }",
                    "//                 for(var p = 1;p<pictures.length;p++){",
                    "//                     var LabelID2 ='EngFirstCheckTask_photo_'+index+'_label_2';",
                    "//                     Ext.getCmp(LabelID2).setHtml(pictures[z].remark);",
                    "//                 }",
                    "",
                    "//                 if(action!='修改'){",
                    "                if(isReadOnly){",
                    "                    Ext.getCmp(ImgID).setItemId('EngFirstCheckTask_photoX');",
                    "                }else{",
                    "                    //修改",
                    "                    Ext.getCmp(ImgID).setItemId('EngFirstCheckTask_photo');",
                    "                    //显示相机图标",
                    "                    if(index==pictures.length){",
                    "                        Ext.getCmp('EngFirstCheckTask_photo_'+(index+1))",
                    "                            .setSrc('resources/images/camera.png');",
                    "                        //设itemid响应点击事件",
                    "                        Ext.getCmp('EngFirstCheckTask_photo_'+(index+1))",
                    "                            .setItemId('EngFirstCheckTask_camera');",
                    "                    }",
                    "                }",
                    "",
                    "            }",
                    "            //修改的时候不需要隐藏",
                    "//             if(action!='修改'){",
                    "            if(isReadOnly){",
                    "                //没图片信息就把图片隐藏",
                    "                    for(k=1;k<7;k++){",
                    "                        var img = 'EngFirstCheckTask_photo_'+k;",
                    "                        var imgsrc = Ext.getCmp(img).getSrc();",
                    "                        if(imgsrc==='resources/images/camera.png'||imgsrc=='resources/images/notPhoto.png'){",
                    "                            Ext.getCmp(img).setHidden(true);",
                    "                        }",
                    "                    }",
                    "            }",
                    "        }else{",
                    "//             if(action!='修改'){",
                    "            if(isReadOnly){",
                    "                //没图片信息就把图片隐藏",
                    "                Ext.getCmp('EngFirstCheckTask_ImgCtn').setHidden(true);",
                    "                Ext.getCmp('EngFirstCheckTask_NoSceneInfo').setHidden(false);",
                    "            }",
                    "        }",
                    "        loadMask.hide();",
                    "    },",
                    "",
                    "    function(){",
                    "        loadMask.hide();",
                    "        Ext.toast('获取首检任务单信息失败');",
                    "    },",
                    "    {jnlno:jnlno,url:url}",
                    ");",
                    "",
                    "if(!isReadOnly){",
                    "",
                    "    //初始化零部件列表滑动效果",
                    "    var partList = Ext.getCmp('EngFirstCheckTask_PartList');",
                    "    partList.setPlugins(",
                    "        [",
                    "            {",
                    "                xclass: 'ux.SlideActions',",
                    "                openPosition: 75,",
                    "                buttons:",
                    "                [",
                    "                    // 删除按钮",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                        text: '<i class=\"fa fa-lg fa-trash-o\"></i>',",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            partList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                            Ext.Msg.confirm(\"注意\", \"是否确认删除?\", function(n) {",
                    "                                        if(n=='no')return;",
                    "                                        partList.getStore().remove(button.getRecord());",
                    "                                    });",
                    "",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            }",
                    "        ]",
                    "    );",
                    "",
                    "}",
                    "",
                    "// 特殊操作直接滚动到页末",
                    "// if(action==='审核'||action==='同意'||action==='不同意') {",
                    "//     var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "//         Ext.getCmp('EngFirstCheckTask_Form').getScrollable().getScroller().scrollToEnd(true);",
                    "//         task.cancel();",
                    "//     });",
                    "//     task.delay(300);",
                    "// }"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckTaskInitialize",
            "designerId": "cad881c3-bb2a-4864-844d-54d975f0d996"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_elevatorname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_elevatoridFocus",
                "implHandler": [
                    "//电梯型号选择",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{elevatorname}</div>' +",
                    "'<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{facname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftdtxhlist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        searchname: textfield.getValue(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchname = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "                elevatorname: record",
                    "            });",
                    "",
                    "            //需要判断输入的型号是否存在、不存在要提示",
                    "            dataUtil.createStore('first_check_elevatorname').loadDat(",
                    "                function(existence){",
                    "                    if(existence==='N'){",
                    "                        Ext.toast('未存在该型号,将自动新建');",
                    "                    }",
                    "                },function(){",
                    "                    console.log('Adapter facil....');",
                    "                },{",
                    "                    userid:global.getUserId(),",
                    "                    elevatorname: record,",
                    "                    opr:'elevator'",
                    "                }",
                    "            );",
                    "",
                    "",
                    "        } else {",
                    "            Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "                elevatorid:record.get('elevatorid'),",
                    "                elevatorname: record.get('elevatorname'),",
                    "                facname:record.get('facname'),",
                    "                makeunit:record.get('facname'),",
                    "                r1:record.get('facid')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_elevatoridFocus",
            "designerId": "0ef2dccb-961e-4084-8949-71e11f9dedb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_facname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_facnameFocus",
                "implHandler": [
                    "//电梯品牌选择",
                    "",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{facname}</div>' +",
                    "'<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{facid}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftfaclist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        searchname: textfield.getValue(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchname = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "                facname: record",
                    "            });",
                    "            ",
                    "            //需要判断输入的品牌是否存在、不存在要提示",
                    "            dataUtil.createStore('first_check_elevatorname').loadDat(",
                    "                function(existence){",
                    "                    if(existence==='N'){",
                    "                        Ext.toast('未存在该品牌,将自动新建');",
                    "                    }",
                    "                },function(){",
                    "                    console.log('Adapter facil....');",
                    "                },{",
                    "                    userid:global.getUserId(),",
                    "                    facname: record,",
                    "                    opr:'facname'",
                    "                }",
                    "            );",
                    "        } else {",
                    "            Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "                r1: record.get('facid'),",
                    "                facname : record.get('facname')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_facnameFocus",
            "designerId": "c6a97dd4-acf5-48ac-91f4-805cc466dfb4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_domainname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_domainnameFocus",
                "implHandler": [
                    "//获取区域",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{areaname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftdomainid',",
                    "    storeparm: {",
                    "       userid: global.getUserId(),",
                    "       searchkey: textfield.getValue(),",
                    "       areatype: 'A',",
                    "       areaid: ''",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            textfield.setValue(record);",
                    "        } else {",
                    "            var value = record.get('areaname');",
                    "            textfield.setValue(value);",
                    "            Ext.getCmp('EngFirstCheckTask_domainid').setValue(record.get('areaid'));",
                    "",
                    "            //清空省份、所在市、县区",
                    "            Ext.getCmp('EngFirstCheckTask_provinciallevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_provinciallevelid').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_citylevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_citylevelid').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelid').setValue();",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_domainnameFocus",
            "designerId": "83fb0624-d2ba-462f-a853-3605cbbbd621"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_provinciallevelname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_provinciallevelnameFocus",
                "implHandler": [
                    "",
                    "//获取省份",
                    "var areaid = Ext.getCmp('EngFirstCheckTask_domainid');//区域ID",
                    "",
                    "if(areaid.getValue()===''){",
                    "    Ext.toast('请先选择区域!');",
                    "    return;",
                    "}",
                    "",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{areaname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftprovinciallevelid',",
                    "    storeparm: {",
                    "       userid: global.getUserId(),",
                    "       searchkey: textfield.getValue(),",
                    "       areatype: 'B',",
                    "       areaid: areaid.getValue()",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            textfield.setValue(record);",
                    "        } else {",
                    "            var value = record.get('areaname');",
                    "            textfield.setValue(value);",
                    "            Ext.getCmp('EngFirstCheckTask_provinciallevelid').setValue(record.get('areaid'));",
                    "",
                    "            //清空所在市、县区",
                    "            Ext.getCmp('EngFirstCheckTask_citylevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_citylevelid').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelid').setValue();",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_provinciallevelnameFocus",
            "designerId": "087d68e9-bf94-49f6-9586-1eb0cef0a5d1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_citylevelname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_citylevelnameFocus",
                "implHandler": [
                    "",
                    "//获取所在市",
                    "var areaid = Ext.getCmp('EngFirstCheckTask_provinciallevelid');//省份ID",
                    "",
                    "if(areaid.getValue()===''){",
                    "    Ext.toast('请先选择省份!');",
                    "    return;",
                    "}",
                    "",
                    "if(areaid.getValue()=='110000' || areaid.getValue()=='120000' || areaid.getValue()=='310000'|| areaid.getValue()=='500000'|| areaid.getValue()=='810000'|| areaid.getValue()=='820000'){",
                    "    Ext.toast('直辖市或特别行政区请直接选择县区!');",
                    "    return;",
                    "}",
                    "",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{areaname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftcitylevelid',",
                    "    storeparm: {",
                    "       userid: global.getUserId(),",
                    "       searchkey: textfield.getValue(),",
                    "       areatype: 'C',",
                    "       areaid: areaid.getValue()",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            textfield.setValue(record);",
                    "        } else {",
                    "            var value = record.get('areaname');",
                    "            textfield.setValue(value);",
                    "            Ext.getCmp('EngFirstCheckTask_citylevelid').setValue(record.get('areaid'));",
                    "",
                    "            //清空县区",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelname').setValue();",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelid').setValue();",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_citylevelnameFocus",
            "designerId": "e2df6521-092c-429b-9d62-1e98c8b92d0f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_countylevelname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_countylevelnameFocus",
                "implHandler": [
                    "",
                    "//获取县区",
                    "var areaid = Ext.getCmp('EngFirstCheckTask_citylevelid');//所在市ID",
                    "var provid = Ext.getCmp('EngFirstCheckTask_provinciallevelid');//省份ID",
                    "",
                    "if(provid.getValue()!='110000' && areaid.getValue()!='120000' && areaid.getValue()!='310000'&& areaid.getValue()!='500000'&& areaid.getValue()!='810000'&& areaid.getValue()!='820000'){",
                    "    if(areaid.getValue()===''){",
                    "        Ext.toast('请先选择所在市!');",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{areaname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'eng_liftcountylevelid',",
                    "    storeparm: {",
                    "       userid: global.getUserId(),",
                    "       searchkey: textfield.getValue(),",
                    "       areatype: 'D',",
                    "       areaid: areaid.getValue()",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            textfield.setValue(record);",
                    "        } else {",
                    "            var value = record.get('areaname');",
                    "            textfield.setValue(value);",
                    "            Ext.getCmp('EngFirstCheckTask_countylevelid').setValue(record.get('areaid'));",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_countylevelnameFocus",
            "designerId": "1d8f3f38-8e78-4007-85c6-d7e23daa54fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTask_r2",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTask_r2Focus",
                "implHandler": [
                    "//坐标选择",
                    "//点击坐标进到地图界面",
                    "var lng = '';",
                    "var lat = '';",
                    "if(textfield.getValue()!==''){",
                    "    lng = textfield.getValue().split(',')[0];",
                    "    lat = textfield.getValue().split(',')[1];",
                    "}else{",
                    "    lng = map.getLocation().lng;",
                    "    lat = map.getLocation().lat;",
                    "}",
                    "console.log(lng,lat);",
                    "",
                    "viewUtil.goNext('Engineer.EngFirstCheckTask_Map',{lng:lng,lat:lat,fc:function(element, eOpts){",
                    "    var getlnglat = function(e){",
                    "        var map = new BMap.Map(\"EngFirstCheckTask_MapPanel\");",
                    "        var pointA = new BMap.Point(e.point.lng,e.point.lat);",
                    "        var pointB = new BMap.Point(lng,lat);",
                    "        //if((map.getDistance(pointA,pointB)).toFixed(2)>2000){",
                    "        //    Ext.toast('请选择离当前位置两公里范围的地点,'+(map.getDistance(pointA,pointB)).toFixed(2));",
                    "        //}else{",
                    "        //}",
                    "",
                    "        console.log(e.point.lng+'____+__'+e.point.lat);",
                    "        var r2 = e.point.lng+','+e.point.lat;",
                    "        Ext.getCmp('EngFirstCheckTask_r2').setValue(r2);",
                    "",
                    "        var parm = {",
                    "            lng:e.point.lng,",
                    "            lat:e.point.lat",
                    "        };",
                    "        viewUtil.goLast();",
                    "    };",
                    "",
                    "    map.create2('EngFirstCheckTask_MapPanel',{lng:lng,lat:lat,zoom:18,fc:getlnglat});",
                    "",
                    "}});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_r2Focus",
            "designerId": "7b8bcfb9-f2cd-4f11-8cd6-cc5dec8bf4fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textareafield#EngFirstCheckTask_checkuserName",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onEngFirstCheckTask_checkuserNameFocus",
                "implHandler": [
                    "//检验人员选择",
                    "",
                    "// 首检任务单 - 选择检查人员",
                    "",
                    "viewUtil.goNext('Engineer.EngFirstCheckCheckUser',",
                    "                {",
                    "                    checkuserArr:taskcheckuserArr,",
                    "                    show:Ext.getCmp('EngFirstCheckTask_checkuserName'),",
                    "                    hide:Ext.getCmp('EngFirstCheckTask_checkuser'),",
                    "                    flag:'Task'",
                    "                });",
                    "",
                    "// var tpl =",
                    "//     '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{username}</div>' +",
                    "//     '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{department}</div>'",
                    "//     ;",
                    "",
                    "// viewUtil.goNext('Common.ComMultiSelect', {",
                    "//     textfield: textfield,",
                    "//     storeid: 'firstcheck_checkmanlist',",
                    "//     storeparm: {",
                    "//         userid: global.getUserId(),",
                    "//         curpagenum:1,",
                    "//         pagesize:20,",
                    "//         searchkey:textfield.getValue(),",
                    "//     },",
                    "//     itemtpl: tpl,",
                    "//     paging: true,",
                    "//     allowedit: false,",
                    "//     allowsearch: false,",
                    "// //     fnSetFilter: Ext.emptyFn,",
                    "//     fnSetFilter: function(parm, text) {",
                    "//                 parm.searchkey = text;",
                    "//                 return parm;",
                    "//             },",
                    "//     fnSelected: function(record) {",
                    "//         if(typeof(record)==='string') {",
                    "//             Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "//                 checkeduser: record",
                    "//             });",
                    "//         } else {",
                    "//              var username='';",
                    "//              var checkusers = '';",
                    "//              for(var i = 0; i < record.length; i++){",
                    "//                 username = username + record[i].data.username;",
                    "//                 if(i!=record.length-1){",
                    "//                     username = username +',';",
                    "//                 }",
                    "//                  if(i!==0){",
                    "//                      checkusers+=',';",
                    "//                  }",
                    "//                  checkusers+=record[i].get('userid')+'_'+record[i].get('departmentid')+'_'+record[i].get('usertype');",
                    "//              }",
                    "//              console.log(checkusers);",
                    "//              Ext.getCmp('EngFirstCheckTask_Form').setValues({",
                    "//                 checkuser:checkusers,",
                    "//                 checkuserName: username,",
                    "//             });",
                    "//         }",
                    "//     }",
                    "// });",
                    "// textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_checkuserNameFocus",
            "designerId": "4315efa9-0fb8-4ef8-a363-a939f495ffa7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield#EngFirstCheckTask_contype",
                "designer|targetType": "Ext.field.Select",
                "fn": "onEngFirstCheckTask_contypeChange",
                "implHandler": [
                    "",
                    "if(newValue==3){",
                    "    Ext.getCmp('EngFirstCheckTask_controlnum').setHidden(false);",
                    "}else{",
                    "    Ext.getCmp('EngFirstCheckTask_controlnum').setHidden(true);",
                    "}"
                ],
                "name": "change"
            },
            "name": "onEngFirstCheckTask_contypeChange",
            "designerId": "53fa3d6a-384e-4971-b43c-0752ca0dd2eb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnSave",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnSaveTap",
                "implHandler": [
                    "var btnText = button.getText();",
                    "",
                    "if(btnText==='保存'||btnText==='提交'){",
                    "//     this.doEngFirstCheckTask_Show_Process(button);",
                    "    this.doTaskUpdateShowAlertDialog(button);",
                    "    return;",
                    "}else {",
                    "    this.doTaskHanderShowAlertDialog({operationIndex:button.getText(),",
                    "//     this.doEngFirstCheckTask_Process({operationIndex:button.getText(),",
                    "                                  state:'',",
                    "                                  jnl:Ext.getCmp('EngFirstCheckTask_jnlno').getValue()});",
                    "}",
                    "// this.doEngFirstCheckTask_Show_Process(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnSaveTap",
            "designerId": "65db6e32-c1fa-4afe-b3ce-61c95930b733"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnSave2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnSave2Tap",
                "implHandler": [
                    "this.doEngFirstCheckTask_Show_Process(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnSave2Tap",
            "designerId": "b787326b-e9af-48c8-8ced-a5752734ef1e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnCommit",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnCommitTap",
                "implHandler": [
                    "// this.doEngFirstCheckTask_Show_Process(button);",
                    "var btnText = button.getText();",
                    "",
                    "if(btnText==='保存'||btnText==='提交'){",
                    "//     this.doEngFirstCheckTask_Show_Process(button);",
                    "    this.doTaskUpdateShowAlertDialog(button);",
                    "    return;",
                    "}else {",
                    "    this.doTaskHanderShowAlertDialog({operationIndex:button.getText(),",
                    "//     this.doEngFirstCheckTask_Process({operationIndex:button.getText(),",
                    "                                  state:'',",
                    "                                  jnl:Ext.getCmp('EngFirstCheckTask_jnlno').getValue()});",
                    "}",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnCommitTap",
            "designerId": "0910df31-5d35-42f7-88ee-35f72b3839ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnCancel",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnCancelTap",
                "implHandler": [
                    "// this.doEngFirstCheckTask_Show_Process(button);",
                    "var btnText = button.getText();",
                    "",
                    "if(btnText==='保存'||btnText==='提交'){",
                    "",
                    "//     this.doEngFirstCheckTask_Show_Process(button);",
                    "    this.doTaskUpdateShowAlertDialog(button);",
                    "    return;",
                    "}else {",
                    "    this.doTaskHanderShowAlertDialog({operationIndex:button.getText(),",
                    "//     this.doEngFirstCheckTask_Process({operationIndex:button.getText(),",
                    "                                  state:'',",
                    "                                  jnl:Ext.getCmp('EngFirstCheckTask_jnlno').getValue()});",
                    "}",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnCancelTap",
            "designerId": "a8b4409b-4561-4b29-91ef-6427a1c371ed"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnCommit2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnCommit2Tap",
                "implHandler": [
                    "this.doEngFirstCheckTask_Show_Process(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnCommit2Tap",
            "designerId": "2b06ae0a-4277-4b87-8db0-f7a5ef1c83f4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnAgree",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnAgreeTap",
                "implHandler": [
                    "this.doEngFirstCheckTask_Process({operationIndex:button.getText(),",
                    "                                  state:'',",
                    "                                  jnl:Ext.getCmp('EngFirstCheckTask_jnlno').getValue()});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnAgreeTap",
            "designerId": "677f355d-71d7-4cd3-b877-02bb77b5bb76"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnDisagree",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnDisagreeTap",
                "implHandler": [
                    "var me = this;",
                    "var sj = me.doEngFirstCheck_GetSJForm();",
                    "",
                    "Ext.Msg.prompt('原因', null,",
                    "\tfunction(buttonId,value) {",
                    "\t\tif(buttonId=='ok'){",
                    "\t\t\tif(value===''){",
                    "\t\t\t\tExt.toast('审核操作失败,请输入不同意原因');",
                    "\t\t\t\treturn;",
                    "\t\t\t}else{",
                    "\t\t\t\tremark=value;",
                    "\t\t\t\t//首检任务单处理(不同意)",
                    "                loadMask.show();",
                    "                var adapterParm = {",
                    "                                    userid:global.getUserId(),",
                    "                                    jnlno:sj.jnlno,",
                    "                                    state:'不同意',",
                    "                                    remark:remark,",
                    "                                    sj:sj",
                    "                                };",
                    "                var store = dataUtil.createStore('first_check_job_sj');",
                    "                store.updateDat(",
                    "                    function(jnl) {",
                    "                        loadMask.hide();",
                    "                        if(jnl) {",
                    "                            Ext.toast('操作完成！单号是：' + jnl);",
                    "                        } else {",
                    "                            Ext.toast('操作完成！');",
                    "                        }",
                    "",
                    "                // 刷新首检任务列表",
                    "                        me.doEngFirstCheck_Task_Search(Ext.getCmp('EngFirstCheck_TaskStatus'));",
                    "//                         me.doEngFirstCheck_LoadTaskList(",
                    "//                             1,",
                    "//                             pagesize,",
                    "//                             Ext.getCmp('EngFirstCheckTask_Search').getValue()||'',",
                    "//                             'refresh'",
                    "//                         );",
                    "                        viewUtil.goLast();",
                    "                    },",
                    "                    function(info) {",
                    "                        loadMask.hide();",
                    "                        if(!info) info = '(未知)';",
                    "                        Ext.toast('未能完成' + action + '操作，错误信息是：' + info);",
                    "                    },",
                    "                    adapterParm",
                    "                );",
                    "",
                    "            }",
                    "",
                    "\t\t}",
                    "\t\t},",
                    "\t\tnull,",
                    "\t\ttrue,",
                    "\t\tnull,",
                    "\t\t{",
                    "\t\t\tautoCapitalize: true,",
                    "\t\t\tplaceHolder: '请输入审核原因'",
                    "\t\t}",
                    "\t);",
                    "// this.doEngFirstCheckTask_Process({operationIndex:button.getText(),",
                    "//                                   jnl:Ext.getCmp('EngFirstCheckTask_jnlno').getValue()});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnDisagreeTap",
            "designerId": "5d0a8c09-4e80-41a6-83e4-351b19ef83af"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnAddParts",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnAddPartsTap",
                "implHandler": [
                    "//跳转到添加零部件页面",
                    "viewUtil.goNext('Engineer.EngFirstCheckTaskAddParts',{});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnAddPartsTap",
            "designerId": "acfc935d-34e9-47a1-8c05-da0bad89598a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFirstCheckTask_PartList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFirstCheckTask_PartListTap",
                "implHandler": [
                    "if(isReadOnly){",
                    "    return;",
                    "}",
                    "//跳转到添加零部件页面",
                    "viewUtil.goNext('Engineer.EngFirstCheckTaskAddParts',",
                    "                {record:record,index:index});"
                ],
                "name": "itemtap"
            },
            "name": "onEngFirstCheckTask_PartListTap",
            "designerId": "3ce3bc73-fc4a-4b2f-80c0-44779a0ef56b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskAddParts_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskAddParts_BtnReturnTap",
                "implHandler": [
                    "",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskAddParts_BtnReturnTap",
            "designerId": "4e67b048-9314-4f19-9138-ce063df16260"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckTaskAddParts",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckTaskAddPartsInitialize",
                "implHandler": [
                    "//零部件类型.",
                    "partsid = \"\";",
                    "dataUtil.createStore('eng_partstypelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "var record = component.initialConfig.parm.record;",
                    "partStoreIndex = component.initialConfig.parm.index;",
                    "if(record){",
                    "    partsid =record.get('partsid');",
                    "    //设置数据",
                    "    Ext.getCmp('EngFirstCheckTaskAddParts_Form').setRecord(record);",
                    "    if(record.get('iscore')==='Y'){",
                    "        Ext.getCmp('EngFirstCheckTaskAddParts_IsCore').setValue(1);",
                    "    }else{",
                    "        Ext.getCmp('EngFirstCheckTaskAddParts_IsCore').setValue(0);",
                    "    }",
                    "    var src = record.get('partsfile');",
                    "    if(src !== \"resources/images/camera.png\"){",
                    "        src = 'data:image/jpeg;base64,'+src;",
                    "    }",
                    "    //设置图片",
                    "    Ext.getCmp('EngFirstCheckTaskAddParts_File').setSrc(src);",
                    "    console.log(src);",
                    "    return;",
                    "}",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckTaskAddPartsInitialize",
            "designerId": "a4bbe2a8-e12e-4802-9427-0b4c0365af2d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckTaskAddPart_Code",
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckTaskAddPartsChange",
                "implHandler": [
                    ""
                ],
                "name": "change"
            },
            "name": "onEngFirstCheckTaskAddPartsChange",
            "designerId": "c55cc012-b64c-4b01-ad65-09bae8eb4262"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskAddParts_Commit",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskAddParts_CommitButtonTap",
                "implHandler": [
                    "",
                    "//零部件编码判断(后台校验，前台校验)",
                    "var partStore = Ext.getCmp('EngFirstCheckTask_PartList').getStore();",
                    "var code = Ext.getCmp('EngFirstCheckTaskAddPart_Code').getValue();",
                    "",
                    "//修改时不需要校验",
                    "if(partsid!==code){//没有修改零部件编码时不需要校验",
                    "    //前台校验",
                    "    if(partStore.isExist(code)){",
                    "        Ext.toast('零部件编码已存在，请重新输入');",
                    "        return;",
                    "    }",
                    "    //后台校验",
                    "    var checkStore = dataUtil.createStore('eng_firstcheck_checkpart');",
                    "    checkStore.isExist(",
                    "        function(ret){",
                    "            if(ret){",
                    "                Ext.toast('零部件编码已存在，请重新输入');",
                    "            }else{",
                    "                fn();",
                    "            }",
                    "        },",
                    "        function(info){",
                    "            Ext.toast(info);",
                    "        },",
                    "        code);",
                    "",
                    "}else{",
                    "    fn();",
                    "}",
                    "",
                    "function fn(){",
                    "    //检查必填项目",
                    "    var form = Ext.getCmp('EngFirstCheckTaskAddParts_Form');",
                    "    var fields = form.getFields();",
                    "    for(var name in fields) {",
                    "        field = fields[name];",
                    "        if(field.getRequired() && field.getValue()==='') {",
                    "            Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "            return;",
                    "        }",
                    "    }",
                    "    //处置Y/N",
                    "    var part = form.getValues();",
                    "    var iscore = {\"1\":\"Y\",\"0\":\"N\"};",
                    "    var iscoreShow = {\"Y\":\"核心零件\",\"N\":\"非核心零件\"};",
                    "    var textcolor = {\"Y\":\"liftnet-fontColor-red\",\"N\":\"liftnet-fontColor-darkGray\"};",
                    "    part.iscore = iscore[part.iscore];",
                    "    part.iscoreShow = iscoreShow[part.iscore];",
                    "    part.textcolor = textcolor[part.iscore];",
                    "",
                    "    //处置图片",
                    "    part.partsfilename='';",
                    "    var partsfile = Ext.getCmp('EngFirstCheckTaskAddParts_File').getSrc();",
                    "    console.log(partsfile);",
                    "    if(partsfile===undefined){",
                    "        part.partsfile = '';",
                    "    }",
                    "    if(partsfile ==='resources/images/camera.png'){",
                    "        part.partsfile = '';",
                    "    }else{",
                    "        part.partsfile = partsfile.split(',')[1] || partsfile;",
                    "    }",
                    "",
                    "    var store = Ext.getCmp('EngFirstCheckTask_PartList').getStore();",
                    "    if(partStoreIndex!==undefined){",
                    "        store.getAt(partStoreIndex).set(part);//更新",
                    "    }else{",
                    "        store.add(part);//添加",
                    "    }",
                    "",
                    "    // Ext.getCmp('EngFirstCheckTask_PartList').getStore().add(part);",
                    "    Ext.getCmp('EngFirstCheckTask_PartList').refresh();",
                    "",
                    "    viewUtil.goLast();",
                    "}",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskAddParts_CommitButtonTap",
            "designerId": "82ed948e-1529-453d-9a8e-7fde7c5ca5bd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheck_JobStatus",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_JobStatusButtonTap",
                "implHandler": [
                    "popMenu.show('Engineer.EngFirstCheckJobStatus', button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_JobStatusButtonTap",
            "designerId": "4d0f65f3-9225-484a-8242-2b69a9d7ffbb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheck_TaskStatus",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheck_TaskStatusButtonTap",
                "implHandler": [
                    "popMenu.show('Engineer.EngFirstCheckTaskStatus', button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheck_TaskStatusButtonTap",
            "designerId": "20928e5b-75b2-4266-9c90-eef88a246be1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobStatus_0",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobStatus_0ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Job_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobStatus_0ButtonTap",
            "designerId": "0d0068c1-313a-4bed-b72c-77419aeb53c1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobStatus_1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobStatus_1ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Job_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobStatus_1ButtonTap",
            "designerId": "cf2bf32f-ab0e-45b5-8883-2511a4b136dc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobStatus_2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobStatus_2ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Job_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobStatus_2ButtonTap",
            "designerId": "74076442-1ab2-43fa-a65c-c6291dd5765a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckJobStatus_3",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckJobStatus_3ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Job_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckJobStatus_3ButtonTap",
            "designerId": "ed05059e-9891-49a9-ac42-d7547196793d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_0",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_0ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_0ButtonTap",
            "designerId": "da93aa27-83b0-450c-ad27-f5d205465340"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_1ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_1ButtonTap",
            "designerId": "00e49522-8ecd-4317-a1ef-a9be7573fad5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_2ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_2ButtonTap",
            "designerId": "56388ff8-09a9-404c-97f9-a6fb6f66dfa5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_3",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_3ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_3ButtonTap",
            "designerId": "c7307835-7c1e-4dc8-9de0-c0f67965b57e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_4",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_4ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_4ButtonTap",
            "designerId": "0c57ab54-1949-4c56-ba64-16d71e7e9e15"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_5",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_5ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_5ButtonTap",
            "designerId": "1647c4b4-5ed6-463d-9d71-296127498955"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTaskStatus_6",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTaskStatus_6ButtonTap",
                "implHandler": [
                    "loadMask.show();",
                    "this.doEngFirstCheck_Task_Search(button);"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskStatus_6ButtonTap",
            "designerId": "6047547a-659c-4971-a707-a60e0b24d9a2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "doEngFirstCheck_Job_Search",
                "implHandler": [
                    "//搜索数据",
                    "if(button != Ext.getCmp('EngFirstCheck_JobStatus')){",
                    "    popMenu.getShowBy().setText(button.getText());",
                    "    popMenu.hide();",
                    "}",
                    "var searchkeyParm = {",
                    "    //关键字",
                    "    searchkey : Ext.getCmp('EngFirstCheckJob_Search').getValue(),",
                    "  //流程状态",
                    "    flowstatus:",
                    "        getFlowstatus[Ext.getCmp('EngFirstCheck_JobStatus').getText()]",
                    "};",
                    "",
                    "this.doEngFirstCheck_LoadJobList(1,pagesize,searchkeyParm,'search');"
                ]
            },
            "name": "doEngFirstCheck_Job_Search",
            "designerId": "d18c9ef9-b8c8-4646-9f66-8a9ca0a36a97"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "doEngFirstCheck_Task_Search",
                "implHandler": [
                    "//搜索数据",
                    "if(button != Ext.getCmp('EngFirstCheck_TaskStatus')){",
                    "    popMenu.getShowBy().setText(button.getText());",
                    "    popMenu.hide();",
                    "}",
                    "var searchkeyParm = {",
                    "    //关键字",
                    "    searchkey : Ext.getCmp('EngFirstCheckTask_Search').getValue(),",
                    "   //流程状态",
                    "    flowstatus:",
                    "        getTaskstatus[Ext.getCmp('EngFirstCheck_TaskStatus').getText()]",
                    "};",
                    "",
                    "this.doEngFirstCheck_LoadTaskList(1,pagesize,searchkeyParm,'search');"
                ]
            },
            "name": "doEngFirstCheck_Task_Search",
            "designerId": "e55430f8-a7d3-4e1d-9ed6-2c04b8d374a7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngFirstCheck_GetSJForm",
                "implHandler": [
                    "var form = Ext.getCmp('EngFirstCheckTask_Form');",
                    "var sj = form.getValues();",
                    "",
                    "//处理时间",
                    "",
                    "var items = form.getItems().items;",
                    "for(var i = 0,length = items.length;i <length; i++){",
                    "    if(items[i].getXTypes().indexOf('datepickerfield')!=-1){",
                    "        sj[items[i].getName()] = !sj[items[i].getName()]?'':Ext.Date.format(items[i].getValue(),'Y-m-d');",
                    "    }",
                    "",
                    "    if(items[i].getXTypes().indexOf('numberfield')!=-1){",
                    "        sj[items[i].getName()] = sj[items[i].getValue()] || '';",
                    "    }",
                    "}",
                    "// sj.checkdate = (!sj.checkdate?'':Ext.Date.format(sj.checkdate,'Y-m-d'));",
                    "// sj.leafacdate = (!sj.leafacdate?'':Ext.Date.format(sj.leafacdate,'Y-m-d'));",
                    "// sj.r7 = (!sj.r7?'':Ext.Date.format(sj.r7,'Y-m-d'));",
                    "// sj.r8 = (!sj.r8?'':Ext.Date.format(sj.r8,'Y-m-d'));",
                    "// sj.speedcheckdate = (!sj.speedcheckdate?'':Ext.Date.format(sj.speedcheckdate,'Y-m-d'));",
                    "// sj.speednextcheckdate = (!sj.speednextcheckdate?'':Ext.Date.format(sj.speednextcheckdate,'Y-m-d'));",
                    "// sj.finishdate = (!sj.finishdate?'':Ext.Date.format(sj.finishdate,'Y-m-d'));",
                    "",
                    "//处理数组",
                    "var checkeduserArr = [];",
                    "var checkeduser = sj.checkuser;",
                    "var checkeduserStr = sj.checkuserStr;",
                    "if(checkeduserStr!==''&&checkeduser!==''){",
                    "      var checkedusers = checkeduser.split(',');",
                    "      for(var i=0,length = checkedusers.length;i<length;i++){",
                    "          var Checkeduser = checkedusers[i];",
                    "          var result = Checkeduser.split('_');",
                    "          checkeduserArr[i]={",
                    "                userid: result[0],",
                    "                departmentid: result[1],",
                    "                usertype: result[2]",
                    "              };",
                    "           }",
                    "        }",
                    "",
                    "sj.checkuser = checkeduserArr;",
                    "//处理toggle",
                    "if(Ext.getCmp('EngFirstCheckTask_isreformflag').getValue()=='1'){",
                    "    sj.isreformflag = 'Y';",
                    "}else{",
                    "    sj.isreformflag = 'N';",
                    "}",
                    "",
                    "",
                    "",
                    "//处理配件",
                    "var firstcheckpartsArr = [];",
                    "var items = Ext.getCmp('EngFirstCheckTask_PartList').getStore().getData().items;",
                    "for(var i =0,length = items.length;i<length;i++){",
                    "   firstcheckpartsArr[i] = items[i].data;",
                    "}",
                    "sj.firstcheckparts=firstcheckpartsArr;",
                    "",
                    "//处理检查项目",
                    "var firstcheckProjectArr = [];",
                    "var items = Ext.getCmp('EngFirstCheckTask_CheckProList').getStore().getData().items;",
                    "for(var i =0,length = items.length;i<length;i++){",
                    "   firstcheckProjectArr[i] = items[i].data;",
                    "}",
                    "sj.checkproject=firstcheckProjectArr;",
                    "",
                    "//处理现场信息图片",
                    "var picturesJSON = [];",
                    "for(var i=1;i<7;i++){",
                    "    var ImgID = 'EngFirstCheckTask_photo_'+i;",
                    "",
                    "    var Img = Ext.getCmp(ImgID);",
                    "    if(Img){",
                    "    var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "    if(ImgSrc!=='resources/images/camera.png' && ImgSrc!=='resources/images/notPhoto.png'){",
                    "        console.log(ImgID);",
                    "        var pic = ImgSrc.split(',')[1];",
                    "        var picturesJSONSize = picturesJSON.length;",
                    "        var picIndex = picturesJSONSize+1;",
                    "        picturesJSON[picturesJSONSize]={",
                    "            pic : pic,",
                    "            takeremark\t: Ext.getCmp(ImgID+'_label_1').getHtml() || \"\",",
                    "        };",
                    "    }",
                    "    }",
                    "}",
                    "",
                    "sj.sitephoto = picturesJSON;",
                    "",
                    "return sj;"
                ]
            },
            "name": "doEngFirstCheck_GetSJForm",
            "designerId": "473c6f69-73e1-4f6d-8bb0-6ed8e9d8c014"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "form"
                ],
                "fn": "doEngFirstCheck_GetJobForm",
                "implHandler": [
                    "// var form = Ext.getCmp(form);",
                    "var sj = form.getValues();",
                    "",
                    "//处理日期",
                    "sj.planenddate = (!sj.planenddate?'':Ext.Date.format(sj.planenddate,'Y-m-d'));",
                    "sj.planstartdate = (!sj.planstartdate?'':Ext.Date.format(sj.planstartdate,'Y-m-d'));",
                    "",
                    "//处理数组",
                    "var checkeduserArr = [];",
                    "var checkeduser = sj.checkuser;",
                    "var checkeduserStr = sj.checkuserStr;",
                    "",
                    "if(checkeduserStr!==''&&checkeduser!==''){",
                    "      var checkedusers = checkeduser.split(',');",
                    "      for(var i=0;i<checkedusers.length;i++){",
                    "          var Checkeduser = checkedusers[i];",
                    "          var result = Checkeduser.split('_');",
                    "          checkeduserArr[i]={",
                    "                userid: result[0],",
                    "                departmentid: result[1],",
                    "                usertype: result[2]",
                    "              };",
                    "           }",
                    "        }",
                    "",
                    "sj.checkuser = checkeduserArr;",
                    "",
                    "var elevatorArr = [];",
                    "var elevator = sj.elevator;",
                    "var elevatorStr = sj.elevatorStr;",
                    "",
                    "console.log('elevatorStr:'+elevatorStr);",
                    "",
                    "if(elevatorStr!==''&&elevator!==''){",
                    "      var elevators = elevator.split(',');",
                    "      for(var i=0;i<elevators.length;i++){",
                    "          var Elevator = elevators[i];",
                    "          var result = Elevator.split('_');",
                    "          elevatorArr[i]={",
                    "                prono: result[0],",
                    "                liftautono: result[1],",
                    "                detailrowid:result[2]",
                    "              };",
                    "           }",
                    "        }",
                    "",
                    "sj.elevator = elevatorArr;",
                    "",
                    "return sj;"
                ]
            },
            "name": "doEngFirstCheck_GetJobForm",
            "designerId": "4375a3a3-213b-470c-a3fd-9c127f2ba815"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFirstCheckTaskAddParts_File",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFirstCheckTaskAddParts_FileTap",
                "implHandler": [
                    "//添加附件",
                    "var me = this;",
                    "if(Ext.getCmp('EngFirstCheckTaskAddParts_File').getSrc()==='resources/images/camera.png'){",
                    "    //没有照片弹出拍照对话框",
                    "    Ext.getCmp('addpart_camera_show').show();",
                    "}else{",
                    "    //有照片则查看大图",
                    "    viewUtil.goNext('Engineer.EngFirstCheckTask_AddPartPhoto',",
                    "                    {src:Ext.getCmp('EngFirstCheckTaskAddParts_File').getSrc()}",
                    "                   );",
                    "}",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTaskAddParts_FileTap",
            "designerId": "00934b08-965d-48c1-ab00-6e981c2867f3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#addpart_source_camear",
                "designer|targetType": "Ext.Button",
                "fn": "onaddpart_source_camearTap",
                "implHandler": [
                    "//相机",
                    "Ext.getCmp('addpart_camera_show').hide();",
                    "console.log('-----进入相机');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        //完成拍照后回调",
                    "",
                    "        //判断是否有相片返回",
                    "        if(filename!==''){",
                    "            Ext.getCmp('EngFirstCheckTaskAddParts_File').setSrc(",
                    "                filename",
                    "            );",
                    "        }",
                    "    },//回调函数",
                    "    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onaddpart_source_camearTap",
            "designerId": "b6c9537d-dfa9-4840-a87f-21889619d9db"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#addpart_source_album",
                "designer|targetType": "Ext.Button",
                "fn": "onaddpart_source_albumTap",
                "implHandler": [
                    "//相册",
                    "Ext.getCmp('addpart_camera_show').hide();",
                    "console.log('-----进入相机');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        //选择图片后回调",
                    "        //判断是否有照片返回",
                    "        ",
                    "        if(filename!==''){",
                    "            Ext.getCmp('EngFirstCheckTaskAddParts_File').setSrc(",
                    "                filename",
                    "            );",
                    "        }",
                    "    },//回调函数",
                    "    source:'ALBUM',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onaddpart_source_albumTap",
            "designerId": "aee3e024-15fd-4969-93ae-b3a6e33f6594"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckTask_AddPartPhoto",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckTask_AddPartPhotoInit",
                "implHandler": [
                    "",
                    "var src = component.initialConfig.parm.src;",
                    "Ext.getCmp('EngFirstCheckTask_AddPartPhoto_show').setSrc(src);",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckTask_AddPartPhotoInit",
            "designerId": "af5f6f2d-b9b2-4c10-b905-785acf451e08"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_AddPartPhoto_BtnDel",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_AddPartPhoto_BtnDelTap",
                "implHandler": [
                    "//删除",
                    "Ext.Msg.confirm(\"注意\", \"是否确认删除此图片?\", function(n) {",
                    "            if(n=='no')return;",
                    "            Ext.getCmp('EngFirstCheckTaskAddParts_File').setSrc('resources/images/camera.png');",
                    "            viewUtil.goLast();",
                    "        });"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_AddPartPhoto_BtnDelTap",
            "designerId": "0eb8cf23-7d42-4205-91a0-8a2e62711259"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_AddPartPhoto_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_AddPartPhoto_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_AddPartPhoto_BtnReturnTap",
            "designerId": "db44f81d-829c-4e61-a8ef-24bbc8c1ff34"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngFirstCheckTask_showCount",
                "implHandler": [
                    "var store = Ext.getCmp('EngFirstCheckTask_CheckProList').getStore();",
                    "    //统计",
                    "    var qualified = store.count('√');",
                    "    var notthis = store.count('/');",
                    "    var unqualified = store.count('×');",
                    "",
                    "    Ext.getCmp('EngFirstCheck_LblCount').setHtml(",
                    "        '合格：'+qualified+'，不合格：'+unqualified+'，无此选项：'+notthis",
                    "    );"
                ]
            },
            "name": "doEngFirstCheckTask_showCount",
            "designerId": "0f13c657-79e4-44fc-9e64-eac2182cfc29"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "tabpanel#EngFirstCheck_TplList",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onEngFirstCheck_TplListActiveItemChange",
                "implHandler": [
                    "if(!Ext.getCmp('EngFirstCheck_BtnAdd')){",
                    "    return;",
                    "}",
                    "//当前界面为派工单列表界面同时有新增权限",
                    "var isShowAddBtn = !(value._itemId=='EngFirstCheck_CtnJobList'&&jobaddjurisdiction);",
                    "Ext.getCmp('EngFirstCheck_BtnAdd').setHidden(isShowAddBtn);"
                ],
                "name": "activeitemchange"
            },
            "name": "onEngFirstCheck_TplListActiveItemChange",
            "designerId": "ebe657b1-1f12-4c14-848d-3c435def3dc4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "tabpanel#EngFirstCheckTask_TplList",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onEngFirstCheckTask_TplListActiveItemChange",
                "implHandler": [
                    "",
                    "var me = this;",
                    "if(value._itemId==='EngFirstCheckTask_CtnCheckProject'){",
                    "    var newTypeId = Ext.getCmp('EngFirstCheckTask_typeid').getValue();",
                    "    //没有值不执行任何操作",
                    "    if(!newTypeId){",
                    "        return;",
                    "    }",
                    "    //当前typeid与新的typeid一致，不执行任何操作",
                    "    if(nowtypeid==newTypeId){",
                    "        return;",
                    "    }",
                    "    //有值但是不变，加载原来的数据",
                    "    if(typeid==newTypeId){",
                    "        Ext.getCmp('EngFirstCheckTask_CheckProList').getStore().setData(checkProjects);",
                    "        //检查项目统计",
                    "        me.doEngFirstCheckTask_showCount();",
                    "    }else{",
                    "        nowtypeid=newTypeId;",
                    "        //值改变后获取新检验项目",
                    "        loadMask.show();",
                    "        Ext.getCmp('EngFirstCheckTask_CheckProList').getStore().loadDat(",
                    "            function(){",
                    "                loadMask.hide();",
                    "                //检查项目统计",
                    "                me.doEngFirstCheckTask_showCount();",
                    "            },",
                    "            function(){",
                    "                loadMask.hide();",
                    "                Ext.toast('获取检验项目失败');",
                    "            },",
                    "            {",
                    "                typeid:newTypeId",
                    "            }",
                    "        );",
                    "    }",
                    "}"
                ],
                "name": "activeitemchange"
            },
            "name": "onEngFirstCheckTask_TplListActiveItemChange",
            "designerId": "8c2c769e-2341-4899-8634-9962071e3a9e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFirstCheckTask_camera",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFirstCheckTask_cameraImageTap",
                "implHandler": [
                    "var me = this;",
                    "Ext.getCmp('task_camera_show').show();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_cameraImageTap",
            "designerId": "5b75f9cd-45db-481d-828d-db2c8abd3ecd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngTaskPhoto",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngTaskPhotoInit",
                "implHandler": [
                    "",
                    "var ImgID = component.initialConfig.parm.ImgID;",
                    "var flag = component.initialConfig.parm.flag;",
                    "var NextImgId = component.initialConfig.parm.NextImgId;",
                    "var fcname = component.initialConfig.parm.fcname;",
                    "console.log(flag);",
                    "if(flag=='Y'){",
                    "    Ext.getCmp('EngTaskPhoto_BtnDel').setHidden(true);",
                    "    Ext.getCmp('EngTaskPhoto_PanelBtnSave').setHidden(true);",
                    "    Ext.getCmp('EngTaskPhoto_remark').setReadOnly(true);",
                    "}",
                    "Ext.getCmp('EngTaskPhoto_ImgID').setValue(ImgID);",
                    "Ext.getCmp('EngTaskPhotoNextImgId').setValue(NextImgId);",
                    "Ext.getCmp('EngTaskPhotofcname').setValue(fcname);",
                    "var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "Ext.getCmp('EngTaskPhoto_show').setSrc(ImgSrc);",
                    "",
                    "Ext.getCmp('EngTaskPhoto_remark').setValue(",
                    "    Ext.getCmp(ImgID+'_label_1').getHtml()",
                    ");",
                    "",
                    "//跟Panel注册左右滑动事件",
                    "// Ext.get('EngTaskPhoto_Panel').on('swipe', 'onFaultPhotoSwipe', this);",
                    "",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngTaskPhotoInit",
            "designerId": "d44faf24-a10d-49f1-834b-d9736e45a903"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngTaskPhoto_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngTaskPhoto_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngTaskPhoto_BtnReturnTap",
            "designerId": "3e2e4751-3954-452f-b293-2e9b13a15a62"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngTaskPhoto_BtnDel",
                "designer|targetType": "Ext.Button",
                "fn": "onEngTaskPhoto_BtnDelTap",
                "implHandler": [
                    "//删除该照片",
                    "var ImgID = Ext.getCmp('EngTaskPhoto_ImgID').getValue();",
                    "",
                    "var NextImgId = Ext.getCmp('EngTaskPhotoNextImgId').getValue();",
                    "var fcname = Ext.getCmp('EngTaskPhotofcname').getValue();",
                    "var fcname2 = NextImgId.substring(0,NextImgId.length-1);",
                    "",
                    "",
                    "//判断是否存在相机照片",
                    "var hasCamera = false;",
                    "for(var i=1;i<7;i++){",
                    "    var imgID = NextImgId+i;",
                    "    var imgSrc = Ext.getCmp(imgID).getSrc();",
                    "    if(imgSrc==='resources/images/camera.png'){",
                    "        hasCamera = true;",
                    "    }",
                    "}",
                    "console.log(hasCamera);",
                    "if(Ext.getCmp(ImgID)){",
                    "    if(hasCamera){",
                    "        Ext.getCmp(ImgID).setSrc('resources/images/notPhoto.png');",
                    "        Ext.getCmp(ImgID).setItemId();",
                    "    }else{",
                    "        Ext.getCmp(ImgID).setSrc('resources/images/camera.png');",
                    "        Ext.getCmp(ImgID).setItemId(fcname);",
                    "    }",
                    "",
                    "",
                    "    //冒泡排序",
                    "for(var j=1;j<7;j++){",
                    "    for(var z=j+1;z<7;z++){",
                    "        var imgID2 = NextImgId+j;",
                    "        var imgSrc2 = Ext.getCmp(imgID2).getSrc();",
                    "//         console.log(imgSrc2);",
                    "        if(imgSrc2!=='resources/images/camera.png' && imgSrc2!=='resources/images/notPhoto.png'){",
                    "            continue;",
                    "        }else{",
                    "            var imgID3 = NextImgId+z;",
                    "            var imgSrc3 = Ext.getCmp(imgID3).getSrc();",
                    "            if(imgSrc3!=='resources/images/camera.png' && imgSrc3!=='resources/images/notPhoto.png'){",
                    "                Ext.getCmp(imgID2).setSrc(imgSrc3);",
                    "                Ext.getCmp(imgID2).setItemId(fcname2);",
                    "                Ext.getCmp(imgID3).setSrc(imgSrc2);",
                    "                Ext.getCmp(imgID3).setItemId();",
                    "                //修改label",
                    "                Ext.getCmp(imgID2+'_label_1').setHtml(Ext.getCmp(imgID3+'_label_1').getHtml());",
                    "                Ext.getCmp(imgID3+'_label_1').setHtml('');",
                    "",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "        //冒泡排序",
                    "for(var j=1;j<7;j++){",
                    "    for(var z=j+1;z<7;z++){",
                    "        var imgID2 = NextImgId+j;",
                    "        var imgSrc2 = Ext.getCmp(imgID2).getSrc();",
                    "//         console.log(imgSrc2);",
                    "        if(imgSrc2!=='resources/images/camera.png' && imgSrc2!=='resources/images/notPhoto.png'){",
                    "            continue;",
                    "        }else{",
                    "            var imgID3 = NextImgId+z;",
                    "            var imgSrc3 = Ext.getCmp(imgID3).getSrc();",
                    "            if(imgSrc3==='resources/images/camera.png'){",
                    "                Ext.getCmp(imgID2).setSrc(imgSrc3);",
                    "                Ext.getCmp(imgID2).setItemId(fcname);",
                    "                Ext.getCmp(imgID3).setSrc(imgSrc2);",
                    "                Ext.getCmp(imgID3).setItemId();",
                    "                //修改label",
                    "                Ext.getCmp(imgID2+'_label_1').setHtml(Ext.getCmp(imgID3+'_label_1').getHtml());",
                    "                Ext.getCmp(imgID3+'_label_1').setHtml('');",
                    "",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "}",
                    "",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngTaskPhoto_BtnDelTap",
            "designerId": "8a3d82bc-53c2-40bd-ba93-9fa750c71f99"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngTaskPhoto_BtnSave",
                "designer|targetType": "Ext.Button",
                "fn": "onEngTaskPhoto_BtnSaveTap",
                "implHandler": [
                    "//保存",
                    "var imgid = Ext.getCmp('EngTaskPhoto_ImgID').getValue();",
                    "Ext.getCmp(imgid+'_label_1').setHtml(",
                    "    Ext.getCmp('EngTaskPhoto_remark').getValue()",
                    ");",
                    "",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngTaskPhoto_BtnSaveTap",
            "designerId": "9e5d77c4-0095-4548-96ae-3c1f91cea195"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFirstCheckTask_photo",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFirstCheckTask_photoTap",
                "implHandler": [
                    "//EngFirstCheckTask_photo_1_label_1",
                    "",
                    "",
                    "//点击图片时进入另一页面显示图片",
                    "console.log('----ImgID----');",
                    "var ImgID = image.getId();",
                    "console.log(ImgID);",
                    "console.log('----ImgID----');",
                    "viewUtil.goNext('Engineer.EngTaskPhoto',{ImgID:ImgID,flag:'N',NextImgId:'EngFirstCheckTask_photo_',fcname:'EngFirstCheckTask_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_photoTap",
            "designerId": "ba683050-ab9b-4d56-b224-8f3ee14a3dca"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFirstCheckTask_photoX",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFirstCheckTask_photoXTap",
                "implHandler": [
                    "//点击图片时进入另一页面显示图片",
                    "console.log('----ImgID----');",
                    "var ImgID = image.getId();",
                    "console.log(ImgID);",
                    "console.log('----ImgID----');",
                    "viewUtil.goNext('Engineer.EngTaskPhoto',{ImgID:ImgID,flag:'Y',NextImgId:'EngFirstCheckTask_photo_',fcname:'EngFirstCheckTask_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_photoXTap",
            "designerId": "f0940b72-04e0-40dc-b508-a3c9a25cb9da"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#task_source_camear",
                "designer|targetType": "Ext.Button",
                "fn": "ontask_source_camearButtonTap",
                "implHandler": [
                    "Ext.getCmp('task_camera_show').hide();",
                    "console.log('-----进入相机');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        for(var i=1;i<7;i++){",
                    "            var ImgID = 'EngFirstCheckTask_photo_'+i;",
                    "            var Img = Ext.getCmp(ImgID);",
                    "            var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "            if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngFirstCheckTask_photo');",
                    "",
                    "                    if(i!==6){",
                    "",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngFirstCheckTask_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngFirstCheckTask_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                                NextImg.setItemId('EngFirstCheckTask_camera');",
                    "                                NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "            }",
                    "        }",
                    "    },//回调函数",
                    "    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "ontask_source_camearButtonTap",
            "designerId": "8fc3ff23-5804-4852-9a4f-ad896180433a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#task_source_album",
                "designer|targetType": "Ext.Button",
                "fn": "ontask_source_albumButtonTap",
                "implHandler": [
                    "Ext.getCmp('task_camera_show').hide();",
                    "console.log('-----进入相册');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        for(var i=1;i<7;i++){",
                    "            var ImgID = 'EngFirstCheckTask_photo_'+i;",
                    "            var Img = Ext.getCmp(ImgID);",
                    "            var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "            ",
                    "            if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngFirstCheckTask_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngFirstCheckTask_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngFirstCheckTask_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                                NextImg.setItemId('EngFirstCheckTask_camera');",
                    "                                NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "            }",
                    "        }",
                    "    },//回调函数",
                    "    source:'ALBUM',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "ontask_source_albumButtonTap",
            "designerId": "9d88e39f-d056-40f6-b0fa-27688631bf4e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "nextstate"
                ],
                "fn": "doEngFirstCheckTask_setReadOnly",
                "implHandler": [
                    "var nextstateName = [];",
                    "for(var i in nextstate){",
                    "    nextstateName[i] = nextstate[i].name;",
                    "}",
                    "if(nextstateName.indexOf('保存')!=-1||nextstateName.indexOf('提交')!=-1){",
                    "    //可编辑",
                    "    isReadOnly = false;",
                    "    return;",
                    "}",
                    "",
                    "isReadOnly = true;",
                    "//表单只读",
                    "var items = Ext.getCmp('EngFirstCheckTask_Form').getItems().items;",
                    "for(var i = 0,length = items.length;i <length; i++){",
                    "    items[i].setReadOnly(true);",
                    "    items[i].suspendEvents();",
                    "}",
                    "",
                    "//现场信息只读",
                    "",
                    "//零部件只读",
                    "Ext.getCmp('EngFirstCheckTask_PanelAdd').setHidden(true);"
                ]
            },
            "name": "doEngFirstCheckTask_setReadOnly",
            "designerId": "3c19a1c5-89db-4bbc-91bc-0d92e4365eab"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "nextstate"
                ],
                "fn": "doEngFirstCheckJobAdd_setReadOnly",
                "implHandler": [
                    "if(!nextstate && updatejurisdiction){",
                    "    //查看、有修改权限",
                    "    return;",
                    "}",
                    "",
                    "var nextstateName = [];",
                    "for(var i in nextstate){",
                    "    nextstateName[i] = nextstate[i].name;",
                    "}",
                    "if(nextstateName.indexOf('保存')!=-1||nextstateName.indexOf('提交')!=-1){",
                    "    //可编辑",
                    "    return;",
                    "}",
                    "//表单只读",
                    "var items = Ext.getCmp('EngFirstCheckJobAdd_Form').getItems().items;",
                    "for(var i = 0,length = items.length;i <length; i++){",
                    "    if(items[i].id!='EngFirstCheckJobAdd_BtnPanel'){",
                    "        items[i].setReadOnly(true);",
                    "        //不可点击",
                    "        items[i].suspendEvents();",
                    "    }",
                    "}"
                ]
            },
            "name": "doEngFirstCheckJobAdd_setReadOnly",
            "designerId": "0c80ac23-310c-4905-b4d7-b29a71fc4b26"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "nextstate",
                    "obj"
                ],
                "fn": "doEngAllCheckJobAdd_setReadOnly",
                "implHandler": [
                    "if(!nextstate && updatejurisdiction){",
                    "    //查看、有修改权限",
                    "    return;",
                    "}",
                    "",
                    "var nextstateName = [];",
                    "for(var i in nextstate){",
                    "    nextstateName[i] = nextstate[i].name;",
                    "}",
                    "if(nextstateName.indexOf('保存')!=-1||nextstateName.indexOf('提交')!=-1){",
                    "    //可编辑",
                    "    return;",
                    "}",
                    "//表单只读",
                    "var items = Ext.getCmp(obj+'JobAdd_Form').getItems().items;",
                    "for(var i = 0,length = items.length;i <length; i++){",
                    "    if(items[i].id!=obj+'JobAdd_BtnPanel'){",
                    "        items[i].setReadOnly(true);",
                    "        //不可点击",
                    "        items[i].suspendEvents();",
                    "    }",
                    "}obj"
                ]
            },
            "name": "doEngAllCheckJobAdd_setReadOnly",
            "designerId": "5e3e1687-2a34-4b58-b30a-d1411c760089"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record",
                    "form",
                    "processDate"
                ],
                "fn": "doEngFirstCheckTask_setArray",
                "implHandler": [
                    "var checkusers = record.get('checkuser');",
                    "var checkuserStr=\"\";",
                    "var checkeduser = \"\";",
                    "//处理数组",
                    "for(var i = 0; i < checkusers.length; i++){",
                    "    checkuserStr = checkuserStr + checkusers[i].username + '('+",
                    "        checkusers[i].usertypename+')';",
                    "    if(i!=checkusers.length-1){",
                    "        checkuserStr = checkuserStr +',';",
                    "    }",
                    "    if(i!==0){",
                    "         checkeduser+=',';",
                    "     }",
                    "     checkeduser+=checkusers[i].userid+'_'+checkusers[i].departmentid+'_'+checkusers[i].usertype;",
                    " }",
                    "var elevators = record.get('elevator');",
                    "if(elevators){",
                    "    var elevator = '';",
                    "     for(i = 0; i < elevators.length; i++){",
                    "         if(i!==0){",
                    "             elevator+=',';",
                    "         }",
                    "         elevator+=elevators[i].prono+'_'+elevators[i].liftautono+'_'+elevators[i].detailrowid;",
                    "     }",
                    "}",
                    "",
                    "",
                    "if(processDate){",
                    "//处理日期",
                    "var planstartdate = record.get('planstartdate');",
                    "var planenddate = record.get('planenddate');",
                    "form.setValues({",
                    "    planstartdate:planstartdate===''?'0':new Date(planstartdate),",
                    "    planenddate:planenddate===''?'0':new Date(planenddate)",
                    "});",
                    "}",
                    "",
                    "form.setValues({",
                    "    checkeduserName: checkuserStr,",
                    "    checkuser:checkeduser,",
                    "    elevator:elevator,",
                    "//     liftnum:elevators.length,",
                    "//     planstartdate:planstartdate===''?'0':new Date(planstartdate),",
                    "//     planenddate:planenddate===''?'0':new Date(planenddate)",
                    "});",
                    ""
                ]
            },
            "name": "doEngFirstCheckTask_setArray",
            "designerId": "b14585b6-3d26-4e8c-a400-fb98803bf1e0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckTask_Map",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckTask_MapInitialize",
                "implHandler": [
                    "var lng = component.initialConfig.parm.lng;//当前经度",
                    "var lat = component.initialConfig.parm.lat;//当前纬度",
                    "",
                    "Ext.getCmp('EngFirstCheckTask_MapPanel').on('painted',component.initialConfig.parm.fc);",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckTask_MapInitialize",
            "designerId": "b6f00d1d-6603-4c49-a0cd-30b29ab14655"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckTask_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckTask_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckTask_BtnReturnTap",
            "designerId": "b276440a-8f8d-4388-8b69-2da8e6607df9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckTask_Map",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckTask_MapDestory",
                "implHandler": [
                    "map.destroyById('EngFirstCheckTask_MapPanel');"
                ],
                "name": "destroy"
            },
            "name": "onEngFirstCheckTask_MapDestory",
            "designerId": "7a7677f3-0860-44b2-8b0f-b046d33948a1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFirstCheckCheckUser2_username",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFirstCheckCheckUser2_usernameTap",
                "implHandler": [
                    "//跳转到选择人员界面",
                    "// 新增派工单 - 选择检查人员",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{username}</div>' +",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{department}</div>'",
                    "    ;",
                    "",
                    "var items = Ext.getCmp('EngFirstCheckCheckUser_List').getStore().getData().items;",
                    "var usernames=[];",
                    "for(var i = 0,length = items.length; i<length;i++){",
                    "    usernames[i] = items[i].data.username;",
                    "}",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'firstcheck_checkmanlist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        curpagenum:1,",
                    "        pagesize:20,",
                    "        searchkey:textfield.getValue(),",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "//     fnSetFilter: Ext.emptyFn,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    filterData:{'field':'username','value':usernames},",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFirstCheckCheckUser2_Form').setValues({",
                    "                checkeduser: record",
                    "            });",
                    "        } else {",
                    "            var userid = record.get('userid');",
                    "            if(Ext.getCmp('EngFirstCheckCheckUser_List').getStore()",
                    "                .isExist(userid)){",
                    "                Ext.toast('不能选择重复的检查人员');",
                    "            }else{",
                    "                Ext.getCmp('EngFirstCheckCheckUser2_Form').setRecord(record);",
                    "            }",
                    "         }",
                    "     }",
                    " });",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser2_usernameTap",
            "designerId": "7f0f8f9c-2dd7-4fd8-b566-3ca462cca23a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser2_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser2_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser2_BtnReturnTap",
            "designerId": "1ef27fd0-a6cf-4753-b1bb-a69a695e84ad"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser_BtnReturnTap",
            "designerId": "fcd2da18-a5a4-4617-9cdb-f80a96361abc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser_BtnAdd",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser_BtnAddTap",
                "implHandler": [
                    "//跳转到添加检验人员界面",
                    "viewUtil.goNext('Engineer.EngFirstCheckCheckUser2',{});"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser_BtnAddTap",
            "designerId": "380cb703-efbf-48b3-bdcd-80d70d451776"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser2_BtnSave",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser2_BtnSaveTap",
                "implHandler": [
                    "//跳转到添加检验人员界面",
                    "var form = Ext.getCmp('EngFirstCheckCheckUser2_Form');",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    if(field.getRequired() && field.getValue()==='') {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "}",
                    "var record = form.getValues();",
                    "var usertypename = {\"0\":\"负责人\",\"1\":\"检验人员\",\"2\":\"实习生\",\"3\":\"其他人员\"};",
                    "record.usertypename = usertypename[record.usertype];",
                    "var store = Ext.getCmp('EngFirstCheckCheckUser_List').getStore();",
                    "",
                    "if(index!==undefined){",
                    "    store.getAt(index).set(record);//更新",
                    "}else{",
                    "    store.add(record);//添加",
                    "}",
                    "",
                    "// store.addOrUpdate(record);",
                    "",
                    "Ext.getCmp('EngFirstCheckCheckUser_List').refresh();",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser2_BtnSaveTap",
            "designerId": "582cf94d-e4f8-4428-b755-f0067d66f8f0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser_BtnSave",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser_BtnSaveTap",
                "implHandler": [
                    "//跳转回添加界面",
                    "var store = Ext.getCmp(\"EngFirstCheckCheckUser_List\").getStore();",
                    "",
                    "//检查是否有人",
                    "if(store.getAllCount()<=0){",
                    "    Ext.toast(\"请选择至少一名检验人员\");",
                    "    return;",
                    "}",
                    "",
                    "//检查负责人",
                    "if(store.getPrincipal()===0){",
                    "    Ext.toast(\"请指定一个负责人\");",
                    "    return;",
                    "}else if(store.getPrincipal()>1){",
                    "    Ext.toast(\"只能指定一个负责人\");",
                    "    return;",
                    "}",
                    "",
                    "//回显名字",
                    "var checkuserName = \"\";",
                    "var items = store.getData().items;",
                    "for(var i in items){",
                    "    checkuserName+=items[i].data.username+'('+items[i].data.usertypename+'),';",
                    "}",
                    "checkuserName = checkuserName.substring(0,checkuserName.length-1);",
                    "// Ext.getCmp('EngFirstCheckJobAdd_checkuserName').setValue(checkuserName);",
                    "show.setValue(checkuserName);",
                    "//设置数组",
                    "var checkusers = items;",
                    "var checkeduser='';",
                    "var usertypename = {\"0\":\"负责人\",\"1\":\"检验人员\",\"2\":\"实习生\",\"3\":\"其他人员\"};",
                    "for(var i = 0; i < checkusers.length; i++){",
                    "    if(flag==='Job'){",
                    "       checkuserArr[i]={",
                    "        userid:checkusers[i].data.userid,",
                    "        username:checkusers[i].data.username,",
                    "        departmentid:checkusers[i].data.departmentid,",
                    "        departmentname:checkusers[i].data.departmentname,",
                    "        usertype:checkusers[i].data.usertype,",
                    "        usertypename:usertypename[checkusers[i].data.usertype]",
                    "        };",
                    "    }",
                    "",
                    "    if(flag===\"Task\"){",
                    "        taskcheckuserArr[i]={",
                    "        userid:checkusers[i].data.userid,",
                    "        username:checkusers[i].data.username,",
                    "        departmentid:checkusers[i].data.departmentid,",
                    "        departmentname:checkusers[i].data.departmentname,",
                    "        usertype:checkusers[i].data.usertype,",
                    "        usertypename:usertypename[checkusers[i].data.usertype]",
                    "        };",
                    "    }",
                    "",
                    "    if(i!==0){",
                    "         checkeduser+=',';",
                    "     }",
                    "     checkeduser+=checkusers[i].data.userid+'_'+checkusers[i].data.departmentid+'_'+checkusers[i].data.usertype;",
                    " }",
                    "// Ext.getCmp('EngFirstCheckJobAdd_checkuser').setValue(checkeduser);",
                    "hide.setValue(checkeduser);",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser_BtnSaveTap",
            "designerId": "91487697-c8b7-4fce-8d80-5f768e062fec"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFirstCheckCheckUser2_BtnDelete",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFirstCheckCheckUser2_BtnDeleteTap",
                "implHandler": [
                    "Ext.getCmp('EngFirstCheckCheckUser_List').getStore().removeAt(index);",
                    "if(flag==='Task'){",
                    "    taskcheckuserArr.splice(index, 1);",
                    "}",
                    "if(flag==='Job'){",
                    "    checkuserArr.splice(index, 1);",
                    "}",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFirstCheckCheckUser2_BtnDeleteTap",
            "designerId": "bb4c4b1a-8ddf-46b7-bf50-55c9d782f0ea"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFirstCheckCheckUser_List",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFirstCheckCheckUser_ListItemTap",
                "implHandler": [
                    "//跳转到添加检验人员界面",
                    "viewUtil.goNext('Engineer.EngFirstCheckCheckUser2',{record:record,index:index});"
                ],
                "name": "itemtap"
            },
            "name": "onEngFirstCheckCheckUser_ListItemTap",
            "designerId": "75206f36-f27e-4b2f-8d81-8cc11ea57136"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckCheckUser2",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckCheckUser2Init",
                "implHandler": [
                    "//添加检验人员初始化",
                    "var record = component.initialConfig.parm.record;",
                    "index = component.initialConfig.parm.index;",
                    "",
                    "if(record){",
                    "    Ext.getCmp('EngFirstCheckCheckUser2_Form').setRecord(record);",
                    "    Ext.getCmp('EngFirstCheckCheckUser2_BtnDelete').setHidden(false);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckCheckUser2Init",
            "designerId": "0b9b4297-ddbd-47e5-8203-93133faea42c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFirstCheckCheckUser",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFirstCheckCheckUserInit",
                "implHandler": [
                    "//添加检验人员初始化",
                    "var checkuserArr = component.initialConfig.parm.checkuserArr;",
                    "show = component.initialConfig.parm.show;",
                    "hide = component.initialConfig.parm.hide;",
                    "flag = component.initialConfig.parm.flag;",
                    "if(checkuserArr){",
                    "    Ext.getCmp('EngFirstCheckCheckUser_List').getStore().setData(checkuserArr);",
                    "}else{",
                    "    Ext.getCmp('EngFirstCheckCheckUser_BtnSave').setHidden(true);",
                    "    Ext.getCmp('EngFirstCheckCheckUser_List').getStore().removeAll();",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFirstCheckCheckUserInit",
            "designerId": "6789ee7c-47ba-49b9-8ef4-4d85b6fbdc0e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doSlideShowAlertDialog",
                "implHandler": [
                    "var me = this;",
                    "var operation;",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "if(operation===\"修改\"||operation==='退回'||operation==='审核'){",
                    "    me.doEngFirstCheckJob_Process(parm);",
                    "    return;",
                    "}",
                    "Ext.Msg.confirm(\"注意\", \"是否确认\"+operation+\"?\", function(n) {",
                    "            if(n=='no')return;",
                    "            me.doEngFirstCheckJob_Process(parm);",
                    "        });"
                ]
            },
            "name": "doSlideShowAlertDialog",
            "designerId": "acd5d31d-cf03-41a4-a9cf-3553a8033a8f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doAddShowAlertDialog",
                "implHandler": [
                    "var me = this;",
                    "",
                    "Ext.Msg.confirm(\"注意\", \"是否确认\"+parm+\"?\", function(n) {",
                    "            if(n=='no')return;",
                    "            me.doEngFirstCheckJobAdd_Process(parm);",
                    "        });"
                ]
            },
            "name": "doAddShowAlertDialog",
            "designerId": "88338cfa-5236-4210-b13b-7da4288cbab6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doHanderShowAlertDialog",
                "implHandler": [
                    "var me = this;",
                    "",
                    "if(parm==='退回'||parm==='不同意'){",
                    "    me.doEngFirstCheckJobShow_Process(parm);",
                    "    return;",
                    "}",
                    "Ext.Msg.confirm(\"注意\", \"是否确认\"+parm+\"?\", function(n) {",
                    "            if(n=='no')return;",
                    "            me.doEngFirstCheckJobShow_Process(parm);",
                    "        });"
                ]
            },
            "name": "doHanderShowAlertDialog",
            "designerId": "7e6bedd7-4319-4c97-9fb5-7632e9faa931"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doTaskHanderShowAlertDialog",
                "implHandler": [
                    "var me = this;",
                    "var operation;",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "if(operation===\"审核\"||operation===\"不同意\"){",
                    "    me.doEngFirstCheckTask_Process(parm);",
                    "    return;",
                    "}",
                    "",
                    "Ext.Msg.confirm(\"注意\", \"是否确认\"+operation+\"?\", function(n) {",
                    "            if(n=='no')return;",
                    "            me.doEngFirstCheckTask_Process(parm);",
                    "        });"
                ]
            },
            "name": "doTaskHanderShowAlertDialog",
            "designerId": "cbea5044-2a23-439b-b43d-de5bdcf9df5f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doTaskUpdateShowAlertDialog",
                "implHandler": [
                    "var me = this;",
                    "",
                    "",
                    "Ext.Msg.confirm(\"注意\", \"是否确认\"+parm.getText()+\"?\", function(n) {",
                    "            if(n=='no')return;",
                    "            me.doEngFirstCheckTask_Show_Process(parm);",
                    "        });"
                ]
            },
            "name": "doTaskUpdateShowAlertDialog",
            "designerId": "0ff3b032-d93a-440c-af7d-bb39e237f10e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#EngReformcheck",
                "designer|targetType": "Engineer.EngReformcheck",
                "fn": "onEngReformcheckInitialize",
                "implHandler": [
                    "",
                    "var me = this;",
                    "var jobList = Ext.getCmp('EngReformcheck_ListJob');",
                    "var taskList = Ext.getCmp('EngReformcheck_ListTask');",
                    "//清空store数据",
                    "taskList.getStore().removeAll();",
                    "",
                    "jobaddjurisdiction = false;",
                    "console.log('init');",
                    "jobupdatejurisdiction = false;",
                    "taskUpdatejurisdiction = false;",
                    "",
                    "jobCurPage = 0;//全局变量",
                    "taskCurPage = 0;",
                    "pagesize = 20;",
                    "//获取状态",
                    "getFlowstatus = {",
                    "    '全部':'%',",
                    "    '未接收':'1',",
                    "    '已接收':'2',",
                    "    '退回':'3',",
                    "};",
                    "",
                    "getTaskstatus = {",
                    "    '全部':'%',",
                    "    '新建':'0',",
                    "    '待审':'1',",
                    "    '审批中':'2',",
                    "    '通过':'3',",
                    "    '不通过':'4',",
                    "    '作废':'5'",
                    "};",
                    "",
                    "// 初始化派工单列表下拉刷新、滑动按钮插件",
                    "jobList.setPlugins(",
                    "     [",
                    "      {",
                    "                    autoSnapBack: false,",
                    "                    lastUpdatedText: '上次刷新:&nbsp;',",
                    "                    loadedText: '已刷新',",
                    "                    loadingText: '正在刷新派工单...',",
                    "                    pullText: '下拉刷新...',",
                    "                    releaseText: '放开开始刷新...',",
                    "                    type: 'pullrefresh',",
                    "                    listeners : {",
                    "                        latestfetched : function() {",
                    "",
                    "                            console.log('执行清空STORE。。。');",
                    "                            Ext.getCmp('EngReformcheck_ListJob').getStore().removeAll();",
                    "                            console.log('执行清空STORE。。。');",
                    "",
                    "                            me.doEngAllCheck_LoadJobList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngReformcheckJob_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getFlowstatus[Ext.getCmp('EngReformcheck_JobStatus').getText()]",
                    "                                },",
                    "                                'refresh',",
                    "                                null,",
                    "                                'EngReformcheck'",
                    "                            );",
                    "                    \t}",
                    "                    }",
                    "                },",
                    "                // 以下滑动按钮插件应从EngHomeController的onEngHomeInitial()中复制！",
                    "                {",
                    "                    xclass: 'ux.SlideActions',",
                    "                    openPosition: 150,",
                    "                    buttons:",
                    "                        [",
                    "                            // 按钮1",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "                                text: '1',",
                    "                                initial: function(button) {",
                    "                                    //初始化滑动按钮",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 0);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                    //处理点击事件",
                    "                                    me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 0",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮2",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                                text: '2',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 1);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 1",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮3",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-orange',",
                    "                                text: '3',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 2);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    jobList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doSlideShowAlertDialog({",
                    "//                                     me.doEngFirstCheckJob_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 2",
                    "                                        });",
                    "                                }",
                    "                            }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        );",
                    "",
                    "// 初始化首检任务列表下拉刷新、滑动按钮插件",
                    "",
                    "        taskList.setPlugins(",
                    "            [",
                    "                {",
                    "                    autoSnapBack: false,",
                    "                    lastUpdatedText: '上次刷新:&nbsp;',",
                    "                    loadedText: '已刷新',",
                    "                    loadingText: '正在刷新首检任务...',",
                    "                    pullText: '下拉刷新...',",
                    "                    releaseText: '放开开始刷新...',",
                    "                    type: 'pullrefresh',",
                    "                    listeners : {",
                    "                        latestfetched : function() {",
                    "                                    console.log('执行清空STORE。。。');",
                    "                            Ext.getCmp('EngReformcheck_ListTask').getStore().removeAll();",
                    "                            console.log('执行清空STORE。。。');",
                    "",
                    "                            me.doEngAllCheck_LoadTaskList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "",
                    "                                    searchkey:Ext.getCmp('EngReformcheckTask_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngReformcheck_TaskStatus').getText()]",
                    "                                },",
                    "                                'refresh'",
                    "                            );",
                    "                    \t}",
                    "                    }",
                    "                },",
                    "                // 以下滑动按钮插件应从EngHomeController的onEngHomeInitial()中复制！",
                    "                {",
                    "                    xclass: 'ux.SlideActions',",
                    "                    openPosition: 100,",
                    "                    buttons:",
                    "                        [",
                    "                            // 按钮1",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "                                text: '1',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 0);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 0",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮2",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                                text: '2',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 1);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 1",
                    "                                        });",
                    "                                }",
                    "                            },",
                    "                            // 按钮3",
                    "                            {",
                    "                                xtype: 'button',",
                    "                                baseCls: 'x-button liftnet-list-button liftnet-bgColor-orange',",
                    "                                text: '3',",
                    "                                initial: function(button) {",
                    "                                        me.doEngFirstCheck_InitialNextStateButton(button, 2);",
                    "                                },",
                    "                                listeners: {",
                    "                                    tap: function(button, e){",
                    "                                        e.stopPropagation();",
                    "                                        return false;",
                    "                                    },",
                    "                                    scope: this",
                    "                                },",
                    "                                handler: function(button, e) {",
                    "                                    taskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                       me.doTaskHanderShowAlertDialog({",
                    "//                                     me.doEngFirstCheckTask_Process({",
                    "                                            record: button.getRecord(),",
                    "                                            operationIndex: 2",
                    "                                        });",
                    "                                }",
                    "                            }",
                    "                    ]",
                    "                }",
                    "            ]",
                    "        );",
                    "loadMask.show();",
                    "//进来自动加载第一页",
                    "me.doEngAllCheck_LoadJobList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngReformcheckJob_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngReformcheck_JobStatus').getText()]",
                    "                                },",
                    "                                'firstload',",
                    "    null,",
                    "    'EngReformcheck'",
                    ");",
                    "me.doEngAllCheck_LoadTaskList(",
                    "                                1,",
                    "                                pagesize,",
                    "                                {",
                    "                                    searchkey:Ext.getCmp('EngReformcheckTask_Search').getValue()||'',",
                    "                                    flowstatus:",
                    "                                        getTaskstatus[Ext.getCmp('EngReformcheck_TaskStatus').getText()]",
                    "                                },",
                    "                                'firstload',",
                    "     null,",
                    "    'EngReformcheck'",
                    "                            );"
                ],
                "name": "initialize"
            },
            "name": "onEngReformcheckInitialize",
            "designerId": "df86bde9-521d-4c9e-87d7-daec9fb77c4c"
        }
    ]
}