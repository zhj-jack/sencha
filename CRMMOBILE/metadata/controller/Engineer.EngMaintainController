{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Engineer.EngMaintainController"
    },
    "name": "MyController",
    "designerId": "e557689a-16c8-4e7e-8d36-2732349a3b34",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 保养业务 标签 **********",
                    ""
                ],
                "designer|controlQuery": "container#EngMaintain",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Container",
                "fn": "onEngMaintainInitialize",
                "implHandler": [
                    "var me = this;",
                    "",
                    "// 初始化下拉刷新、滑动按钮插件",
                    "var maintainList = Ext.getCmp('EngMaintain_ListTask');",
                    "maintainList.setPlugins(",
                    "    [",
                    "        {",
                    "            autoSnapBack: false,",
                    "            lastUpdatedText: '上次刷新:&nbsp;',",
                    "            loadedText: '已刷新',",
                    "            loadingText: '正在刷新保养待办...',",
                    "            pullText: '下拉刷新...',",
                    "            releaseText: '放开开始刷新...',",
                    "            type: 'pullrefresh',",
                    "            listeners : {",
                    "                latestfetched : function() {",
                    "                    me.doEngMaintain_LoadMaintainList();",
                    "            \t}",
                    "            }",
                    "         }",
                    "//            ,",
                    "//         {",
                    "//             xclass: 'ux.SlideActions',",
                    "//             openPosition: 75,",
                    "//             buttons:",
                    "//                 [",
                    "//                     {",
                    "//                         xtype: 'button',",
                    "//                         baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "//                         text: '1',",
                    "//                         initial: function(button) {",
                    "//                             liftnet.app.getController('Engineer.EngMaintainController').",
                    "//                                 doEngMaintain_InitialNextStateButton(button, 0);",
                    "//                         },",
                    "//                         listeners: {",
                    "//                             tap: function(button, e){",
                    "//                                 e.stopPropagation();",
                    "//                                 return false;",
                    "//                             },",
                    "//                             scope: this",
                    "//                         },",
                    "//                         handler: function(button, e) {",
                    "//                             maintainList.fireEvent('hide');",
                    "//                             liftnet.app.getController('Engineer.EngMaintainController').",
                    "//                                 doEngMaintain_Process({",
                    "//                                     record: button.getRecord(),",
                    "//                                     operationIndex: 0",
                    "//                                 });",
                    "//                         }",
                    "//                     }",
                    "//                 ]",
                    "//         }",
                    "    ]",
                    "",
                    ");",
                    "",
                    "// var f1 = Ext.getCmp('EngMaintain_date1');",
                    "// var f2 = Ext.getCmp('EngMaintain_date2');",
                    "// f1.suspendEvents();",
                    "// f2.suspendEvents();",
                    "// f1.setValue(new Date());",
                    "// f2.setValue(new Date());",
                    "// f1.resumeEvents(true);",
                    "// f2.resumeEvents(true);",
                    "",
                    "    var maintainTaskList=Ext.getCmp('EngMaintain_ListTaskRec');",
                    "",
                    "    maintainTaskList.setPlugins(",
                    "    [",
                    "        {",
                    "            autoSnapBack: false,",
                    "            lastUpdatedText: '上次刷新:&nbsp;',",
                    "            loadedText: '已刷新',",
                    "            loadingText: '正在刷新保养待办...',",
                    "            pullText: '下拉刷新...',",
                    "            releaseText: '放开开始刷新...',",
                    "            type: 'pullrefresh',",
                    "            listeners : {",
                    "                latestfetched : function() {",
                    "                    me.doEngMaintain_LoadMaintainTaskRecList();",
                    "            \t}",
                    "            }",
                    "         },",
                    "        {",
                    "            xclass: 'ux.SlideActions',",
                    "            openPosition: 175,",
                    "            buttons:",
                    "                [",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                        text: '1',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 0);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainTaskList.fireEvent('hide');",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 0",
                    "                                });",
                    "                        }",
                    "                    },",
                    "                    // 按钮2",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-dark',",
                    "                        text: '2',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 1);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainTaskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 1",
                    "                                });",
                    "                        }",
                    "                    },",
                    "                    // 按钮3",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                        text: '3',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 2);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainTaskList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 2",
                    "                                });",
                    "                        }",
                    "                    }",
                    "                ]",
                    "        }",
                    "    ]",
                    "",
                    ");"
                ],
                "name": "initialize"
            },
            "name": "onEngMaintainInitialize",
            "designerId": "139a9ac5-7474-49eb-abf7-6f1a58f5ce4c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield#EngMaintain_FldSearch",
                "designer|targetType": "Ext.field.Search",
                "fn": "onEngMaintain_FldSearchChange",
                "implHandler": [
                    "//this.doEngMaintain_LoadMaintainList();",
                    "Ext.getCmp('EngMaintain_ListTask').getStore().filteDat(textfield.getValue());"
                ],
                "name": "change"
            },
            "name": "onEngMaintain_FldSearchChange",
            "designerId": "5d9520c7-69a6-4f74-9d82-c3426034ece3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngMaintain_ListTask",
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngMaintain_ListTaskItemTap",
                "implHandler": [
                    "// 保养业务 - 进入任务明细",
                    "viewUtil.goNext('Engineer.EngMaintainTask', {record:record});"
                ],
                "name": "itemtap"
            },
            "name": "onEngMaintain_ListTaskItemTap",
            "designerId": "6de7e3e8-a3d7-42f5-81fd-4d14d3531c19"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngMaintainTask",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngMaintainTaskInitialize",
                "implHandler": [
                    "// 保养计划操作 - 到场、拍照、扫描、完工",
                    "loadMask.show();",
                    "",
                    "var me = this;",
                    "var userid = global.getUserId();",
                    "var now = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "var position = map.getLocation().addr;",
                    "if(!position || position==='') position = '(未知位置)';",
                    "",
                    "var taskrecord = component.initialConfig.parm.record; // 待办记录",
                    "var rowid = taskrecord.get('rowid');",
                    "",
                    "// var button = Ext.getCmp('EngMaintainTask_Btn');",
                    "// var panel = Ext.getCmp('EngMaintainTask_PnlOperation');",
                    "// button.setHidden(true);",
                    "// panel.setHidden(true);",
                    "",
                    "",
                    "// 取出保养明细数据",
                    "var store = dataUtil.createStore('by_bymissiondetail');",
                    "store.loadDat(",
                    "    function(n) {",
                    "        loadMask.hide();",
                    "        if(n<1) {",
                    "            Ext.toast('未能读取保养计划数据！');",
                    "            viewUtil.goLast();",
                    "            return;",
                    "        }",
                    "",
                    "        // 显示保养任务数据",
                    "        var record = store.getData().get(0);",
                    "        var state = record.get('ByTaskState');",
                    "",
                    "        // 测试数据(开始)",
                    "        if(global.isWorklight()) {",
                    "            state = taskrecord.get('taskstate');",
                    "            switch(state) {",
                    "                case '已完工':",
                    "                    record.set('FinishDate', '2015-12-01');",
                    "                    record.set('FinishTime', '14:35');",
                    "",
                    "                    record.set('finishtime', '2015-12-01 14:35:23');",
                    "",
                    "                    record.set('B_FinishDate', '2015-12-01');",
                    "                    record.set('B_FinishTime', '14:35');",
                    "                    record.set('B_FinishAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');",
                    "                    break;",
                    "",
                    "                case '保养中':",
                    "                    record.set('arrivetime', '2015-12-01 12:00:51');",
                    "",
                    "                    record.set('B_ArriveDate', '2015-12-01');",
                    "                    record.set('B_ArriveTime', '12:00:21');",
                    "                    record.set('B_ArriveAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');",
                    "                    break;",
                    "                case '未开始':",
                    "                    break;",
                    "",
                    "                default:",
                    "                    Ext.toast('1.未知的状态:' + state);",
                    "            }",
                    "        }",
                    "        //测试数据(完)",
                    "",
                    "",
                    "        Ext.getCmp('form_by_bymissiondetail').setRecord(record);",
                    "",
                    "        Ext.getCmp('EngMaintainTask_DetailList').setData([{text:'aaa',abc:'hhh'},{text:'bbb',abc:'hhh'},{text:'ccc',abc:'hhh'}]);;",
                    "",
                    "        // 根据待办指示决定明细页面操作按钮个数",
                    "      //  button.record = taskrecord;",
                    "       // me.doEngMaintain_InitialNextStateButton(button, 0);",
                    "",
                    "        // 没有操作按钮时隐藏明细页面按钮底板",
                    "       // panel.setHidden(button.getHidden());",
                    "    },",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast('未能读取保养计划数据！');",
                    "        viewUtil.goLast();",
                    "    },",
                    "    rowid",
                    ");",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngMaintainTaskInitialize",
            "designerId": "9ece3e6c-1d49-4316-9391-fc65868d8209"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngMaintainTask_Btn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngMaintainTask_BtnTap",
                "implHandler": [
                    "// 保养任务 - 处理",
                    "this.doEngMaintain_Process({",
                    "    record: button.record, operationIndex: 0,",
                    "    fn: function() { viewUtil.goLast(); } // 操作后关闭窗口",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onEngMaintainTask_BtnTap",
            "designerId": "e0c73c60-09b7-4254-bdad-0f6d201a7526"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngMaintainTask_BtnReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngMaintainTask_BtnReturnTap",
                "implHandler": [
                    "// 保养任务明细 - 返回首页",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngMaintainTask_BtnReturnTap",
            "designerId": "df2a881d-0c2d-4ba3-b226-cac1ad956c2b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngMaintainTask_taskname",
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngMaintainTask_tasknameFocus",
                "implHandler": [
                    "// 选择班组",
                    "var tpl ='<div class=\"liftnet-Maintenance-BYWorkList\">'+",
                    "    '<div class=\"liftnet-Maintenance-BYWorkList-left\">'+",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{taskusername}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{tasklevel}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{taskarea}</div>'+",
                    "    '</div>'+",
                    "    '<div class=\"liftnet-Maintenance-BYWorkList-right\">'+",
                    "    '<div class=\"liftnet-Maintenance-listConBox-state liftnet-font-size12 liftnet-fontColor-gray liftnet-font-right\">{storagename}</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-font-right liftnet-fontColor-gray\">{tasklinkphone}</div>'+",
                    "    '</div>'+",
                    "    '</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "            textfield: textfield,",
                    "            storeid: 'common_MaintainTaskMan',",
                    "            storeparm: {",
                    "                userid: global.getUserId(),",
                    "                //storageid: storageid",
                    "            },",
                    "            itemtpl: tpl,",
                    "            paging: false,",
                    "            allowedit: false,",
                    "            allowsearch: false,",
                    "            fnSetFilter: Ext.emptyFn,",
                    "            fnSelected: function(record) {",
                    "                if(typeof(record)==='string') {",
                    "                    Ext.getCmp('form_by_bymissiondetail').setValues({",
                    "                        taskname: record",
                    "                    });",
                    "                } else {",
                    "                    Ext.getCmp('form_by_bymissiondetail').setValues({",
                    "                       taskname: record.get('taskusername')+'('+record.get('storagename')+')',",
                    "",
                    "                    });",
                    "                }",
                    "            }",
                    "        });",
                    "textfield.blur();"
                ],
                "name": "focus"
            },
            "name": "onEngMaintainTask_tasknameFocus",
            "designerId": "7794ac19-81d5-4b67-9426-eb4dbc650b26"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngMaintain_Process",
                "implHandler": [
                    "/* 保养处理入口",
                    "   参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "",
                    "var fn = parm.fn;",
                    "var p = map.getLocation();",
                    "var adapter_parm = {",
                    "    userid:\t\tglobal.getUserId(),",
                    "    BillNo:\t\tparm.record.get('BillNo'),",
                    "    rowid:\t\tparm.record.get('rowid'),",
                    "    WorkType:\tparm.record.get('worktype'),",
                    "    WorkDate:\tparm.record.get('WorkDate'),",
                    "    ServiceNo:\tparm.record.get('ServiceNo'),",
                    "    check_start:operation,",
                    "    lon:\t\tp.lng,",
                    "    lat:\t\tp.lat",
                    "};",
                    "",
                    "loadMask.show();",
                    "var store = dataUtil.createStore('by_byrwscenscf');",
                    "store.loadDat(",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast(operation + '操作已完成！');",
                    "",
                    "        // 刷新保养待办列表",
                    "        liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();",
                    "        me.doEngMaintain_LoadMaintainList();",
                    "",
                    "        if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "    },",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast('未能完成' + operation + '操作，请稍后再试！');",
                    "    },",
                    "    adapter_parm",
                    ");"
                ]
            },
            "name": "doEngMaintain_Process",
            "designerId": "5f0f0b88-1ac7-4b8e-8fe9-edcfe9f8e3d2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 公用方法 **********",
                    ""
                ],
                "designer|params": [
                    "filterStr"
                ],
                "fn": "doEngMaintainPlanFilter",
                "implHandler": [
                    "// 保养业务 - 选择状态后执行搜索",
                    "popMenu.getShowBy().setText(filterStr);",
                    "popMenu.hide();",
                    "this.doEngMaintain_LoadMaintainPlanList(1,20,'search');"
                ]
            },
            "name": "doEngMaintainPlanFilter",
            "designerId": "44dc69a7-bf2f-40fd-b163-865a96eab677"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 故障处理方法 **********",
                    ""
                ],
                "designer|params": [
                    "button",
                    "index"
                ],
                "fn": "doEngMaintain_InitialNextStateButton",
                "implHandler": [
                    "// 初始化处理按钮",
                    "// 参数：按钮对象、按钮索引号",
                    "//      保养计划暂时只有一种操作，因此忽略index",
                    "//index = 0;",
                    "var b = button.record.get('nextstate');",
                    "if(!b){",
                    "    b = [];",
                    "}",
                    "",
                    "if(b[index]&&b[index].text!=='') {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(false);",
                    "        button.setText(b[index].name);",
                    "    } else {",
                    "        button.hidden = false;",
                    "        button.text = b[index].name;",
                    "    }",
                    "} else {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(true);",
                    "    } else {",
                    "        button.hidden = true;",
                    "    }",
                    "}"
                ]
            },
            "name": "doEngMaintain_InitialNextStateButton",
            "designerId": "9057aba9-deb1-41f9-8d27-41092b476bff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngMaintain_LoadMaintainList",
                "implHandler": [
                    "// 保养业务标签页 - 保养计划列表刷新",
                    "//var state = Ext.getCmp('EngMaintain_BtnTaskStatus').getText();",
                    "//var date1 = Ext.getCmp('EngMaintain_date1').getValue();",
                    "//var date2 = Ext.getCmp('EngMaintain_date2').getValue();",
                    "var FldSearch = Ext.getCmp('EngMaintain_FldSearch').getValue();",
                    "//if(!date1 || !date2) {",
                    "//    return;",
                    "//}",
                    "//date1 = Ext.Date.format(new Date(date1), 'Y-m-d');",
                    "//date2 = Ext.Date.format(new Date(date2), 'Y-m-d');",
                    "Ext.getCmp('EngMaintain_ListTask').getStore().loadDat(",
                    "    function(n) {",
                    "        // 设置角标",
                    "        /*",
                    "        var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "                Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');",
                    "            }, this);",
                    "        task.delay(1000);",
                    "        task.cancel();",
                    "        */",
                    "        //if(n===0) Ext.toast('没有符合条件的保养计划数据!');",
                    "        console.log('保养计划列表搜索完成!');",
                    "    },",
                    "    function() {",
                    "        Ext.toast('暂时未能获取保养计划!');",
                    "    },",
                    "    {",
                    "        userid: global.getUserId(),",
                    "        fldsearch: FldSearch",
                    "    }",
                    ");"
                ]
            },
            "name": "doEngMaintain_LoadMaintainList",
            "designerId": "1e46e931-7490-418f-a31c-5e6a0b994e51"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngMaintain_LoadMaintainTaskRecList",
                "implHandler": [
                    "// 派工单标签页 - 派工单刷新",
                    "",
                    "        var FldSearch = Ext.getCmp('EngMaintainTaskRec_FldSearch').getValue();",
                    "        Ext.getCmp('EngMaintain_ListTaskRec').getStore().loadDat(",
                    "            function(n) {",
                    "                // 设置角标",
                    "                /*",
                    "                var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "                        Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');",
                    "                    }, this);",
                    "                task.delay(1000);",
                    "                task.cancel();",
                    "                */",
                    "                //if(n===0) Ext.toast('没有符合条件的保养计划数据!');",
                    "                console.log('派工单列表搜索完成!');",
                    "            },",
                    "            function() {",
                    "                Ext.toast('暂时未能获取派工单!');",
                    "            },",
                    "            {",
                    "                userid: global.getUserId(),",
                    "                fldsearch: FldSearch",
                    "            }",
                    "        );"
                ]
            },
            "name": "doEngMaintain_LoadMaintainTaskRecList",
            "designerId": "fe86a698-020e-4727-a418-da62e40534ad"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "page, pagesize, searchkey, scrollparm"
                ],
                "fn": "doEngMaintain_LoadMaintainPlanList",
                "implHandler": [
                    "// 派工单标签页 - 派工单刷新",
                    "",
                    "        var FldSearch='';",
                    "        var state = '';",
                    "        if(Ext.getCmp('EngMaintainPlanS_FldSearch')){",
                    "            var stateT=Ext.getCmp('EngMaintain_BtnTaskStatus').getText();",
                    "            switch(stateT){    //转换成标志",
                    "                case '全部':",
                    "                    state='%';",
                    "                    break;",
                    "                case '未开始':",
                    "                    state='0';",
                    "                    break;",
                    "                case '到场':",
                    "                    state='1';",
                    "                    break;",
                    "                case '完工':",
                    "                    state='2';",
                    "                    break;",
                    "            }",
                    "         FldSearch = Ext.getCmp('EngMaintainPlanS_FldSearch').getValue();",
                    "             Ext.getCmp('EngMaintain_ListPlan').getStore().loadDat(",
                    "            function(n) {",
                    "",
                    "                if(scrollparm){",
                    "                    Ext.getCmp('EngMaintain_ListPlan').scrollToRecord(scrollparm);",
                    "                    loadMask.hide();",
                    "                }",
                    "                if(searchkey==='search'){",
                    "                     loadMask.hide();",
                    "",
                    "                }",
                    "                loadMask.hide();",
                    "",
                    "",
                    "                // 设置角标",
                    "                /*",
                    "                var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "                        Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');",
                    "                    }, this);",
                    "                task.delay(1000);",
                    "                task.cancel();",
                    "                */",
                    "                //if(n===0) Ext.toast('没有符合条件的保养计划数据!');",
                    "                console.log('保养计划列表搜索完成!');",
                    "            },",
                    "            function() {",
                    "                Ext.toast('暂时未能获取保养计划!');",
                    "                if(curPage!=1){",
                    "                    curPage--;//获取数据失败页数减一",
                    "                }",
                    "                loadMask.hide();",
                    "            },",
                    "            {",
                    "                userid: global.getUserId(),",
                    "                curpagenum:page,",
                    "                pagesize:pagesize,",
                    "                searchkey:FldSearch,",
                    "                state:state",
                    "            }",
                    "        );",
                    "        }",
                    ""
                ]
            },
            "name": "doEngMaintain_LoadMaintainPlanList",
            "designerId": "379ec484-29a6-4f3b-af67-573dde7baa8a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngMaintainTask_DetailList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngMaintainTask_DetailListItemTap",
                "implHandler": [
                    "console.log(record.data);"
                ],
                "name": "itemtap"
            },
            "name": "onEngMaintainTask_DetailListItemTap",
            "designerId": "113989f0-52e5-4fec-8bc5-d2c070ac135a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngMaintain_MainWorkClickBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngMaintain_MainWorkClickBtnTap",
                "implHandler": [
                    "",
                    "viewUtil.goNext('Engineer.EngMaintainPlan');"
                ],
                "name": "tap"
            },
            "name": "onEngMaintain_MainWorkClickBtnTap",
            "designerId": "261473fe-f08c-4311-885f-1e8aefeb1974"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#EngMaintainS",
                "designer|targetType": "Ext.Container",
                "fn": "onEngMaintainSInitialize",
                "implHandler": [
                    "var me = this;",
                    "curPage = 1;//全局变量",
                    "var pagesize = 20;",
                    "",
                    "",
                    "    var maintainPlanList=Ext.getCmp('EngMaintain_ListPlan');",
                    "",
                    "    maintainPlanList.setPlugins(",
                    "    [",
                    "        {",
                    "            autoSnapBack: false,",
                    "            lastUpdatedText: '上次刷新:&nbsp;',",
                    "            loadedText: '已刷新',",
                    "            loadingText: '正在刷新保养待办...',",
                    "            pullText: '下拉刷新...',",
                    "            releaseText: '放开开始刷新...',",
                    "            type: 'pullrefresh',",
                    "            listeners : {",
                    "                latestfetched : function() {",
                    "                    curPage=1;",
                    "                    me.doEngMaintain_LoadMaintainPlanList(curPage,pagesize,'');",
                    "            \t}",
                    "            }",
                    "         },",
                    "        {",
                    "            xclass: 'ux.SlideActions',",
                    "            openPosition: 80,",
                    "            buttons:",
                    "                [",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                        text: '1',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 0);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainPlanList.fireEvent('hide');",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintainPlan_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 0",
                    "                                });",
                    "                        }",
                    "                    },",
                    "                    // 按钮2",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-dark',",
                    "                        text: '2',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 1);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainPlanList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintainPlan_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 1",
                    "                                });",
                    "                        }",
                    "                    },",
                    "                    // 按钮3",
                    "                    {",
                    "                        xtype: 'button',",
                    "                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                        text: '3',",
                    "                        initial: function(button) {",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintain_InitialNextStateButton(button, 2);",
                    "                        },",
                    "                        listeners: {",
                    "                            tap: function(button, e){",
                    "                                e.stopPropagation();",
                    "                                return false;",
                    "                            },",
                    "                            scope: this",
                    "                        },",
                    "                        handler: function(button, e) {",
                    "                            maintainPlanList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                            liftnet.app.getController('Engineer.EngMaintainController').",
                    "                                doEngMaintainPlan_Process({",
                    "                                    record: button.getRecord(),",
                    "                                    operationIndex: 2",
                    "                                });",
                    "                        }",
                    "                    }",
                    "                ]",
                    "        }",
                    "    ]",
                    "",
                    ");",
                    "",
                    "",
                    "",
                    "var moreButton=Ext.getCmp('EngMaintain_MorePButton');",
                    "var scroller = maintainPlanList.getScrollable().getScroller();",
                    "moreButton.on('tap',function(button, e, eOpts){",
                    "",
                    "    var store = Ext.getCmp('EngMaintain_ListPlan').getStore();",
                    "    var count =store.getAllCount();",
                    "",
                    "    if(count>0){",
                    "        var record = store.getAt(store.getAllCount() - 1);",
                    "        console.log('more');",
                    "        loadMask.show();",
                    "        var scrollparm = {",
                    "            scroller:scroller,",
                    "            x:0,",
                    "            y:0+maintainPlanList.getItemHeight()*count+20+16//Item的高度+Tpl样式中各种边距",
                    "        };",
                    "        me.doEngMaintain_LoadMaintainPlanList(++curPage,pagesize,'',record);",
                    "    }else{",
                    "        console.log('no more');",
                    "    }",
                    "",
                    "",
                    "});",
                    "",
                    "//监听滑动结束事件",
                    "",
                    "// scroller.on('scrollend',function(scroll, x, y, eOpts){",
                    "//     //滑动到底部加载更多",
                    "//     if(y+scroller.getContainerSize().y==scroller.getSize().y){",
                    "//         console.log('loadmore');",
                    "//         loadMask.show();",
                    "//         var scrollparm = {",
                    "//             scroller:scroller,",
                    "//             x:x,",
                    "//             y:y+maintainPlanList.getItemHeight()+20+16//Item的高度+Tpl样式中各种边距",
                    "//         };",
                    "//         me.doEngMaintain_LoadMaintainPlanList(++curPage,pagesize,'',scrollparm);",
                    "//     }",
                    "// });",
                    "",
                    "/*",
                    "初始化查询",
                    "*/",
                    "    var firstInit=0;",
                    "    Ext.getCmp('EngMaintain_BtnTaskStatus').on('tap',function(button, e, eOpts){",
                    "        popMenu.show('Engineer.EngNavMaintainStatus', button);",
                    "        if(firstInit===0){",
                    "           Ext.getCmp('EngNavMaintainStatus_0').on('tap',function(button0, e, eOpts){",
                    "                curPage=1;",
                    "                me.doEngMaintainPlanFilter(button0.getText());",
                    "                console.log('innerHtml');",
                    "            });",
                    "",
                    "            Ext.getCmp('EngNavMaintainStatus_1').on('tap',function(button1, e, eOpts){",
                    "                curPage=1;",
                    "                me.doEngMaintainPlanFilter(button1.getText());",
                    "                console.log('innerHtml');",
                    "            });",
                    "            Ext.getCmp('EngNavMaintainStatus_2').on('tap',function(button2, e, eOpts){",
                    "                curPage=1;",
                    "                me.doEngMaintainPlanFilter(button2.getText());",
                    "                console.log('innerHtml');",
                    "            });",
                    "            Ext.getCmp('EngNavMaintainStatus_3').on('tap',function(button3, e, eOpts){",
                    "                curPage=1;",
                    "                me.doEngMaintainPlanFilter(button3.getText());",
                    "                console.log('innerHtml');",
                    "            });",
                    "            firstInit=1;",
                    "        }",
                    "",
                    "    });",
                    "    Ext.getCmp('EngMaintainPlanS_FldSearch').on('change',",
                    "        function(textfield, newValue, oldValue, eOpts){",
                    "            curPage=1;",
                    "            loadMask.show();",
                    "            me.doEngMaintain_LoadMaintainPlanList(1,20,'search');",
                    "    });",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngMaintainSInitialize",
            "designerId": "a1d93961-1a1a-487c-911c-252da325cd0b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngMaintainPlan_Process",
                "implHandler": [
                    "/* 保养计划及实绩处理入口",
                    "   参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "",
                    "var fn = parm.fn;",
                    "var p = map.getLocation();",
                    "var adapter_parm = {",
                    "    userid:\t\tglobal.getUserId(),",
                    "    fid:\t\tparm.record.get('fid')?parm.record.get('fid'):'',",
                    "    pid:\t\tparm.record.get('pid'),",
                    "    state:\t\t'0',",
                    "    status:\t\t'R',",
                    "    planjnlno:\tparm.record.get('planjnlno')?parm.record.get('planjnlno'):'',",
                    "    prodno:\t\tparm.record.get('prodno'),",
                    "    checkcontent:\t[],",
                    "    lon:\t\tp.lng,",
                    "    lat:\t\tp.lat,",
                    "    addr:\t\tp.addr,",
                    "    pictures:[],",
                    "    elesignature:[],",
                    "};",
                    "",
                    "switch(operation){",
                    "    case '到场':",
                    "        adapter_parm.status='R';",
                    "        break;",
                    "    case '完工':",
                    "       // adapter_parm.status='F';",
                    "      //  adapter_parm.checkcontent=parm.record.get('checkcontent');",
                    "        viewUtil.goNext('Engineer.EngMaintainPlanDetail', {record:parm.record,Fin:'Y'});",
                    "        return;",
                    "        //break;",
                    "    default:",
                    "        break;",
                    "}",
                    "",
                    "console.log(adapter_parm);",
                    "",
                    "",
                    "loadMask.show();",
                    "var store = dataUtil.createStore('by_maintainplanSub');",
                    "store.loadDat(",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast(operation + '操作已完成！');",
                    "",
                    "        // 刷新保养待办列表",
                    "        //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();",
                    "        me.doEngMaintain_LoadMaintainPlanList(1,20,'');",
                    "",
                    "        if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "    },",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast('未能完成' + operation + '操作，请稍后再试！');",
                    "    },",
                    "    adapter_parm",
                    ");"
                ]
            },
            "name": "doEngMaintainPlan_Process",
            "designerId": "b39d0041-55da-42a9-9a8e-80a73aee491a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngMaintain_ListPlan",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngMaintain_ListPlanItemTap",
                "implHandler": [
                    "// 保养计划及实绩 - 进入任务明细",
                    "viewUtil.goNext('Engineer.EngMaintainPlanDetail', {record:record});"
                ],
                "name": "itemtap"
            },
            "name": "onEngMaintain_ListPlanItemTap",
            "designerId": "4aab8f64-f5b0-4d65-bdd6-2a41a73034ba"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngMaintainPlan",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngMaintainPlanInitialize",
                "implHandler": [
                    "// 保养计划操作 - 到场、拍照、扫描、完工",
                    "loadMask.show();",
                    "",
                    "var me = this;",
                    "var userid = global.getUserId();",
                    "var now = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "var position = map.getLocation().addr;",
                    "if(!position || position==='') position = '(未知位置)';",
                    "",
                    "var taskrecord = component.initialConfig.parm.record; // 待办记录",
                    "var pid = taskrecord.get('pid');",
                    "",
                    "//var button = Ext.getCmp('EngMaintainPlan_Btn');",
                    "//var panel = Ext.getCmp('EngMaintainPlan_PnlOperation');",
                    "//button.setHidden(true);",
                    "//panel.setHidden(true);",
                    "",
                    "var pnlArrive = Ext.getCmp('EngMaintainPlan_PnlArrive');",
                    "var pnlFinish = Ext.getCmp('EngMaintainPlan_PnlFinish');",
                    "var btnArrive = Ext.getCmp('EngMaintainPlan_BtnArrive');",
                    "var btnPanel=Ext.getCmp('EngMaintainPlanCC_PnlOperation');//EngMaintainPlan_BtnSave  EngMaintainPlan_BtnSub",
                    "var btnSave=Ext.getCmp('EngMaintainPlan_BtnSave');",
                    "var btnSub=Ext.getCmp('EngMaintainPlan_BtnSub');",
                    "var pnlStart=Ext.getCmp('EngMaintainPlan_PnlStart');",
                    "",
                    "",
                    "",
                    "",
                    "// 取出保养明细数据",
                    "var store = dataUtil.createStore('by_maintainplandetail');",
                    "store.loadDat(",
                    "    function(n) {",
                    "        loadMask.hide();",
                    "        if(n<1) {",
                    "            Ext.toast('未能读取保养计划数据！');",
                    "            viewUtil.goLast();",
                    "            return;",
                    "        }",
                    "",
                    "        // 显示保养任务数据",
                    "        var record = store.getData().get(0);",
                    "        var state = record.get('ByPlanState');",
                    "        var reachstatus=record.get('reachstatus');",
                    "        var finishstatus=record.get('finishstatus');",
                    "",
                    "",
                    "        state = taskrecord.get('flowstatus');",
                    "",
                    "        var canhandle=taskrecord.get('nextstate').length===0?false:true;",
                    "        // 测试数据(开始)",
                    "        if(!global.isWorklight()) {",
                    "            switch(state) {",
                    "                case '完工':",
                    "                    record.set('FinishDate', '2015-12-01');",
                    "                    record.set('FinishTime', '14:35');",
                    "",
                    "",
                    "                    record.set('B_FinishDate', '2015-12-01');",
                    "                    record.set('B_FinishTime', '14:35');",
                    "                    record.set('B_FinishAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');",
                    "                    break;",
                    "                case '到场':",
                    "                    record.set('arrivetime', '2015-12-01 12:00:51');",
                    "",
                    "                    record.set('B_ArriveDate', '2015-12-01');",
                    "                    record.set('B_ArriveTime', '12:00:21');",
                    "                    record.set('B_ArriveAddress', '广州市荔湾区黄沙大道144号大冶有色大厦');",
                    "                    break;",
                    "                case '未开始':",
                    "                    break;",
                    "",
                    "                default:",
                    "                    Ext.toast('1.未知的状态:' + state);",
                    "            }",
                    "        }",
                    "",
                    "        var geoc1 = new BMap.Geocoder();",
                    "",
                    "        if(record.get('reachlon')!=null&&record.get('reachlon')!=''){",
                    "            geoc1.getLocation(",
                    "                    new BMap.Point(record.get('reachlon'), record.get('reachlat')),function(result){",
                    "                       record.set('B_ArriveAddress',result.address);",
                    "                         Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+record.get('B_ArriveAddress'));",
                    "                    }",
                    "                 );",
                    "        }",
                    "         if(record.get('finishlon')!=null&&record.get('finishlon')!=''){",
                    "            geoc1.getLocation(",
                    "                    new BMap.Point(record.get('finishlon'), record.get('finishlat')),function(result){",
                    "                       record.set('B_FinishAddress',result.address);",
                    "                       Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+record.get('B_FinishAddress'));",
                    "                    }",
                    "                 );",
                    "        }",
                    "",
                    "",
                    "        //测试数据(完)",
                    "",
                    "        var workdate = record.get('WorkDate') + '(' + record.get('WorkWeekDay') + ')';",
                    "        var worktime = record.get('WorkSTime') + '-' + record.get('WorkETime');",
                    "      //  Ext.getCmp('EngMaintainTask_Toolbar').setTitle(workdate + ' ' + worktime);",
                    "        Ext.getCmp('form_by_maintainplan1').setRecord(record);",
                    "        Ext.getCmp('form_by_maintainplan1').setValues({",
                    "            WorkDateWeekDay: workdate,",
                    "            WorkSETime: worktime",
                    "        });",
                    "        // 时间线节点数据",
                    "        Ext.getCmp('B_ArriveDate').setHtml('<span></span>'+record.get('reachdate')+' '+record.get('reachtime'));",
                    "        Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+record.get('B_ArriveAddress'));",
                    "",
                    "        Ext.getCmp('B_FinishDate').setHtml('<span></span>'+record.get('finishdate')+' '+record.get('finishtime'));",
                    "        Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+record.get('B_FinishAddress'));",
                    "",
                    "",
                    "              //显示保养项目",
                    "        if(state=='完工'||!canhandle){",
                    "          Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'Y');",
                    "        }else if(state=='未开始'){",
                    "            Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'N');",
                    "        }else{",
                    "             Ext.getCmp('EngmaintainPlanCCList').getStore().loadDat(record.get('checkcontent'),'N');",
                    "        }",
                    "",
                    "        // 时间线 - 根据状态显示进度块及操作按钮",
                    "        switch(state) {",
                    "            case '未开始':",
                    "                if(canhandle){//有操作权限",
                    "                    pnlArrive.setHidden(!true);",
                    "                    pnlFinish.setHidden(true);",
                    "                    btnArrive.setHidden(!true);",
                    "                    btnPanel.setHidden(true);",
                    "                    Ext.getCmp('B_ArriveDate').setHtml('<span></span>'+now);",
                    "                    Ext.getCmp('B_ArriveAddress').setHtml('<span></span>'+position);",
                    "                    Ext.getCmp('EngMaintainCheckContent_List').destroy();",
                    "                    Ext.getCmp('EngMaintainContain_Img').setHidden(true);",
                    "                }else{//没有操作权限",
                    "                    pnlArrive.setHidden(true);",
                    "                    pnlFinish.setHidden(true);",
                    "                    btnArrive.setHidden(true);",
                    "                    btnPanel.setHidden(true);",
                    "                    Ext.getCmp('EngContainer_AcceptMap').setHidden(true);",
                    "                    Ext.getCmp('EngMaintainCheckContent_List').destroy();",
                    "                    Ext.getCmp('EngMaintainContain_Img').setHidden(true);",
                    "                    pnlStart.setHidden(true);",
                    "                    Ext.getCmp('EngMaintainPlan_TabProcess').setHtml('<div style=\"margin:30px;text-align:center\">暂时没有任务进度！</div>');",
                    "",
                    "                }",
                    "                break;",
                    "",
                    "            case '到场':",
                    "                if(canhandle){",
                    "                    pnlArrive.setHidden(!true);",
                    "                    pnlFinish.setHidden(!true);",
                    "                    btnArrive.setHidden(true);",
                    "                    Ext.getCmp('B_FinishDate').setHtml('<span></span>'+now);",
                    "                    Ext.getCmp('B_FinishAddress').setHtml('<span></span>'+position);",
                    "",
                    "                    Ext.getCmp('EngMaintain_signaturePanel').add({",
                    "                        xtype: 'signaturefield',",
                    "                        id: 'EngMaintainP_signature',",
                    "                        sigWidth: window.innerWidth?window.innerWidth:400,",
                    "                        sigHeight: window.innerHeight?window.innerHeight/3:200,",
                    "                        label:'<font color=\"red\">签名</font>',",
                    "                        labelWidth: '17%'",
                    "                    });",
                    "",
                    "                    var signatures=record.get('elesignature');",
                    "                    if(signatures!==null&&signatures.length>0){",
                    "                        Ext.getCmp('EngMaintainP_signature').setValue('data:image/jpg;base64,' +signatures[0].signpic);",
                    "                    }",
                    "                }else{",
                    "                    pnlArrive.setHidden(!true);",
                    "                    pnlFinish.setHidden(true);",
                    "                    btnArrive.setHidden(true);",
                    "                    btnPanel.setHidden(true);",
                    "                    Ext.getCmp('EngContainer_AcceptMap').setHidden(true);",
                    "",
                    "                     //显示照片",
                    "                var pictures1 = record.get('pictures');//照片信息",
                    "                if(pictures1!==null&&pictures1.length>0){",
                    "                    for(var z1=0;z1<pictures1.length;z1++){",
                    "                        var index1 = z1+1;",
                    "                        var ImgID1 = 'EngMaintainP_photo_'+index1;",
                    "                        var pictureBase641 = pictures1[z1].pic;",
                    "                        var ImgSrc1 = 'data:image/jpg;base64,' +pictureBase641;",
                    "",
                    "                        Ext.getCmp(ImgID1).setSrc(ImgSrc1);",
                    "                        Ext.getCmp(ImgID1).setItemId('EngMaintainP_photoX');",
                    "                    }",
                    "",
                    "                    //没图片信息就把图片隐藏",
                    "                    for(var k1=1;k1<7;k1++){",
                    "                        var img1 = 'EngMaintainP_photo_'+k1;",
                    "                        var imgsrc1 = Ext.getCmp(img1).getSrc();",
                    "                        if(imgsrc1==='resources/images/camera.png'||imgsrc1=='resources/images/notPhoto.png'){",
                    "                            Ext.getCmp(img1).setHidden(true);",
                    "",
                    "                        }",
                    "                    }",
                    "",
                    "                }else{",
                    "                    //没图片信息就把图片隐藏",
                    "                    for(var u1 = 1;u1<7;u1++){",
                    "                        var imgN1 = 'EngMaintainP_photo_'+u1;",
                    "                        Ext.getCmp(imgN1).setHidden(true);",
                    "                    }",
                    "                }",
                    "                var signatures1=record.get('elesignature');",
                    "                if(signatures1!==null&&signatures1.length>0){",
                    "",
                    "                    Ext.getCmp('EngMaintain_signaturePanel').setHtml(",
                    "                        '<div style=\"float:left;width:30%;line-height:45px;color:red;\">电子签名</div>'+",
                    "                        '<img src=\"data:image/jpeg;base64,'+signatures1[0].signpic+'\" width=\"90\" height=\"45\">'",
                    "                    );",
                    "                }",
                    "                }",
                    "",
                    "",
                    "                break;",
                    "",
                    "            case '完工':",
                    "                pnlArrive.setHidden(!true);",
                    "                pnlFinish.setHidden(!true);",
                    "                btnArrive.setHidden(true);",
                    "                btnPanel.setHidden(true);",
                    "                Ext.getCmp('EngContainer_AcceptMap').setHidden(true);",
                    "                //Ext.getCmp(''EngContainer_AcceptMapParent).destroy();",
                    "",
                    "                 //显示照片",
                    "                var pictures = record.get('pictures');//照片信息",
                    "                if(pictures!==null&&pictures.length>0){",
                    "                    for(var z=0;z<pictures.length;z++){",
                    "                        var index = z+1;",
                    "                        var ImgID = 'EngMaintainP_photo_'+index;",
                    "                        var pictureBase64 = pictures[z].pic;",
                    "                        var ImgSrc = 'data:image/jpg;base64,' +pictureBase64;",
                    "",
                    "                        Ext.getCmp(ImgID).setSrc(ImgSrc);",
                    "                        Ext.getCmp(ImgID).setItemId('EngMaintainP_photoX');",
                    "                    }",
                    "",
                    "                    //没图片信息就把图片隐藏",
                    "                    for(var k=1;k<7;k++){",
                    "                        var img = 'EngMaintainP_photo_'+k;",
                    "                        var imgsrc = Ext.getCmp(img).getSrc();",
                    "                        if(imgsrc==='resources/images/camera.png'||imgsrc=='resources/images/notPhoto.png'){",
                    "                            Ext.getCmp(img).setHidden(true);",
                    "",
                    "                        }",
                    "                    }",
                    "",
                    "                }else{",
                    "                    //没图片信息就把图片隐藏",
                    "                    for(var u = 1;u<7;u++){",
                    "                        var imgN = 'EngMaintainP_photo_'+u;",
                    "                        Ext.getCmp(imgN).setHidden(true);",
                    "                    }",
                    "                }",
                    "                var signatures2=record.get('elesignature');",
                    "                if(signatures2!==null&&signatures2.length>0){",
                    "",
                    "                    Ext.getCmp('EngMaintain_signaturePanel').setHtml(",
                    "                        '<div style=\"float:left;width:30%;line-height:45px;color:red;\">电子签名</div>'+",
                    "                        '<img src=\"data:image/jpeg;base64,'+signatures2[0].signpic+'\" width=\"90\" height=\"45\">'",
                    "                    );",
                    "                }",
                    "",
                    "                break;",
                    "",
                    "            default:",
                    "                Ext.toast('2.未知的状态:' + state);",
                    "        }",
                    "",
                    "        // 没有进度则隐藏进度面板",
                    "        if(pnlArrive.getHidden()&&",
                    "           pnlFinish.getHidden()) {",
                    "            //Ext.getCmp('EngMaintainPlan_TabProcess').destroy();",
                    "        }",
                    "",
                    "        // 根据待办指示决定明细页面操作按钮个数",
                    "      //  button.record = taskrecord;",
                    "      //  me.doEngMaintain_InitialNextStateButton(button, 0);",
                    "",
                    "        // 没有操作按钮时隐藏明细页面按钮底板",
                    "     //   panel.setHidden(button.getHidden());",
                    "",
                    "",
                    "        btnArrive.on('tap', function() {",
                    "    me.doEngMaintainPlan_Process2({",
                    "        record: record, operationIndex: '到场',",
                    "        fn: function() { viewUtil.goLast(); }",
                    "    });",
                    "});",
                    "btnSave.on('tap', function() {",
                    "    me.doEngMaintainPlan_Process2({",
                    "        record: record, operationIndex: '保存',",
                    "        fn: function() { viewUtil.goLast(); }",
                    "    });",
                    "});",
                    "btnSub.on('tap', function() {",
                    "    me.doEngMaintainPlan_Process2({",
                    "        record: record, operationIndex: '提交',",
                    "        fn: function() { viewUtil.goLast(); }",
                    "    });",
                    "});",
                    "        console.log('component.initialConfig.parm.Fin>'+component.initialConfig.parm.Fin);",
                    "        if(component.initialConfig.parm.Fin&&component.initialConfig.parm.Fin==='Y'){",
                    "            Ext.getCmp('EngMaintainPlan_MTabPanel').setActiveItem(2);",
                    "        }",
                    "    },",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast('未能读取保养计划数据！');",
                    "        viewUtil.goLast();",
                    "    },",
                    "    pid",
                    ");",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngMaintainPlanInitialize",
            "designerId": "c068c469-47f2-4024-bade-43b77f5a5068"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngmaintainPlanCCList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngmaintainPlanCCListItemTap",
                "implHandler": [
                    "// 如果点击了列表的图标区域，则改变状态",
                    "if(e.target.id==='statusArea') {",
                    "    switch(record.get('checkverdict')) {",
                    "        case '√':",
                    "            newStatus = '×';",
                    "            break;",
                    "        case '×':",
                    "            newStatus = '/';",
                    "            break;",
                    "        case '/':",
                    "            newStatus = '√';",
                    "            break;",
                    "    }",
                    "//console.log(Ext.getCmp('EngmaintainPlanCCList').getStore());",
                    "    // 更改数据记录",
                    "    record.set('checkverdict', newStatus);",
                    "}"
                ],
                "name": "itemtap"
            },
            "name": "onEngmaintainPlanCCListItemTap",
            "designerId": "c58bceff-8991-4110-8d87-52cfb01709fd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#EngContainer_AcceptMap",
                "designer|targetType": "Ext.Container",
                "fn": "onEngContainer_AcceptMapInitialize",
                "implHandler": [
                    " var me = this;",
                    "console.log('____________MapInitialize__________________');",
                    "var p = map.getLocation();//取位置信息",
                    "if(!p.lat || !p.lng){",
                    "p.lat = 23.123819;//纬度",
                    "p.lng = 113.237778;//经度",
                    "}",
                    "",
                    "",
                    "// 实时监控-地图",
                    "me.doEngFault_AcceptMap1('EngAcceptMap',p);",
                    "",
                    "",
                    "",
                    "//bmap.addEventListener(\"click\", theLocation);",
                    "console.log('____________MapInitialize__________________');"
                ],
                "name": "initialize"
            },
            "name": "onEngContainer_AcceptMapInitialize",
            "designerId": "4372cc47-77d8-4482-b307-95cbcefca51a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id",
                    "p"
                ],
                "fn": "doEngFault_AcceptMap1",
                "implHandler": [
                    "  // 实时监控-地图",
                    "                Ext.getCmp(id)",
                    "                .setSrc('http://api.map.baidu.com/staticimage/v2?ak=64048452fca8dd67eabb72ff5b4dd0ac'+",
                    "                       '&markers='+p.lng+','+p.lat+",
                    "                       '&center='+p.lng+','+p.lat+'&height=100&zoom=12');",
                    "",
                    "                var geoc = new BMap.Geocoder();",
                    "                geoc.getLocation(",
                    "                    new BMap.Point(p.lng, p.lat),function(result){",
                    "                        console.log(result);",
                    "                //         result.surroundingPois",
                    "                        Ext.getCmp('EngAcceptMap_address').setHtml(result.address);",
                    "                        Ext.getCmp('EngAcceptMap_lng').setValue(result.point.lng);",
                    "                        Ext.getCmp('EngAcceptMap_lat').setValue(result.point.lat);",
                    "                    }",
                    "                 );"
                ]
            },
            "name": "doEngFault_AcceptMap1",
            "designerId": "3a433f1c-d8a4-430f-aa84-d6adf745c6b9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngAcceptMap_location",
                "designer|params": [
                    "panel"
                ],
                "designer|targetType": "Ext.Panel",
                "fn": "onEngAcceptMap_locationTap",
                "implHandler": [
                    "        console.log('.......EngMapTap..........');",
                    "        //获取当前经度和纬度",
                    "        var lng = Ext.getCmp('EngAcceptMap_lng').getValue();",
                    "        var lat = Ext.getCmp('EngAcceptMap_lat').getValue();",
                    "        console.log(lng+'____'+lat);",
                    "       ",
                    "        var me=this;",
                    "        viewUtil.goNext('Engineer.AcceptMap_adjust',{lng:lng,lat:lat,fc:function(element, eOpts){",
                    "",
                    "    var lng = Ext.getCmp('Adujust_lng').getValue();",
                    "    var lat = Ext.getCmp('Adujust_lat').getValue();",
                    "    var getlnglat = function(e){",
                    "        var map = new BMap.Map(\"EngProject_map1\");",
                    "        var pointA = new BMap.Point(e.point.lng,e.point.lat);",
                    "        var pointB = new BMap.Point(lng,lat);",
                    "        //if((map.getDistance(pointA,pointB)).toFixed(2)>2000){",
                    "        //    Ext.toast('请选择离当前位置两公里范围的地点,'+(map.getDistance(pointA,pointB)).toFixed(2));",
                    "        //}else{",
                    "        //}",
                    "",
                    "        console.log(e.point.lng+'____+__'+e.point.lat);",
                    "",
                    "        var parm = {",
                    "            lng:e.point.lng,",
                    "            lat:e.point.lat",
                    "        };",
                    "        Ext.getCmp('Adujust_lng').setValue(e.point.lng);",
                    "        Ext.getCmp('Adujust_lat').setValue(e.point.lat);",
                    "        me.doEngFault_AcceptMap1('EngAcceptMap',parm);",
                    "        viewUtil.goLast();",
                    "    };",
                    " console.log('........EngMapTap.........');",
                    "    map.create2('EngProject_map1',{lng:lng,lat:lat,zoom:16,fc:getlnglat});",
                    "",
                    "}});"
                ],
                "name": "tap"
            },
            "name": "onEngAcceptMap_locationTap",
            "designerId": "6b532635-44cf-4e8c-8a66-57d3de376e02"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngMaintainPlan_Process2",
                "implHandler": [
                    "/* 保养计划及实绩处理入口",
                    "   参数{ record:保养记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭保养详细信息页面 }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "if(typeof(parm.operationIndex)==='string') {",
                    "    operation = parm.operationIndex;",
                    "} else {",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "}",
                    "",
                    "var fn = parm.fn;",
                    "var p = map.getLocation();",
                    "var adapter_parm = {",
                    "    userid:\t\tglobal.getUserId(),",
                    "    fid:\t\tparm.record.get('fid')?parm.record.get('fid'):'',",
                    "    pid:\t\tparm.record.get('pid'),",
                    "    state:\t\t'0',",
                    "    status:\t\t'R',",
                    "    planjnlno:\t\tparm.record.get('planjnlno'),",
                    "    prodno:\t\tparm.record.get('prodno'),",
                    "    checkcontent:\t[],",
                    "    lon:\t\tp.lng,",
                    "    lat:\t\tp.lat,",
                    "    addr:\t\tp.addr,",
                    "    pictures:[],",
                    "    elesignature:[],",
                    "};",
                    "",
                    "var elesignatures=Ext.getCmp('EngMaintainP_signature');",
                    "if(elesignatures){",
                    "    var elevalue=elesignatures.getValue();",
                    "    if(elevalue){",
                    "    adapter_parm.elesignature=[{signpic:elevalue.split(',')[1]}];",
                    "    }",
                    "}",
                    "",
                    "",
                    "getcheckcontnet=function(){",
                    "    var epc=Ext.getCmp('EngmaintainPlanCCList').getStore();",
                    "var ccont=[];",
                    "for(var i=0;i<epc.getCount();i++){",
                    "    var rec=epc.getAt(i);",
                    "    ccont[i]={",
                    "        locations:rec.get('locations'),",
                    "        lno:rec.get('lno'),",
                    "        plancontents:rec.get('plancontents'),",
                    "        checkverdict:rec.get('checkverdict'),",
                    "        zid:rec.get('zid'),",
                    "        lifttype:rec.get('lifttype'),",
                    "        plantype:rec.get('plantype'),",
                    "    };",
                    "}",
                    "    return ccont;",
                    "};",
                    "",
                    "",
                    "//保存图片信息",
                    "var picturesJSON = [];",
                    "for(var i=1;i<7;i++){",
                    "    var ImgID = 'EngMaintainP_photo_'+i;",
                    "",
                    "    var Img = Ext.getCmp(ImgID);",
                    "    if(Img){",
                    "    var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "    if(ImgSrc!=='resources/images/camera.png' && ImgSrc!=='resources/images/notPhoto.png'){",
                    "        console.log(ImgID);",
                    "        var pic = ImgSrc.split(',')[1];",
                    "        var picturesJSONSize = picturesJSON.length;",
                    "        var picIndex = picturesJSONSize+1;",
                    "        picturesJSON[picturesJSONSize]={",
                    "            pic : pic,",
                    "            remark\t: '保养现场照片',",
                    "            takeproject\t: '保养现场照片',",
                    "            picname\t: parm.record.get('fid')?parm.record.get('fid'):'000'+'_'+picIndex",
                    "        };",
                    "    }",
                    "    }",
                    "}",
                    "console.log(picturesJSON);",
                    "",
                    "",
                    "var canSUB=true;",
                    "var mustSign=false;",
                    "switch(operation){",
                    "    case '到场':",
                    "        adapter_parm.status='R';",
                    "        adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();",
                    "        adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();",
                    "        adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();",
                    "        break;",
                    "    case '完工':",
                    "        adapter_parm.status='F';",
                    "        adapter_parm.checkcontent=getcheckcontnet();",
                    "        adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();",
                    "        adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();",
                    "        adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();",
                    "        if(adapter_parm.checkcontent.length===0){",
                    "            canSUB=false;",
                    "        }",
                    "        break;",
                    "    case '保存':",
                    "        adapter_parm.state='0';",
                    "        adapter_parm.checkcontent=getcheckcontnet();",
                    "        adapter_parm.pictures=picturesJSON;",
                    "        adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();",
                    "        adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();",
                    "        adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();",
                    "        if(adapter_parm.checkcontent.length===0){",
                    "            canSUB=false;",
                    "        }",
                    "        break;",
                    "    case '提交':",
                    "        adapter_parm.status='F';",
                    "        adapter_parm.state='1';",
                    "        adapter_parm.pictures=picturesJSON;",
                    "        adapter_parm.checkcontent=getcheckcontnet();",
                    "        adapter_parm.lon=Ext.getCmp('EngAcceptMap_lng').getValue();",
                    "        adapter_parm.lat=Ext.getCmp('EngAcceptMap_lat').getValue();",
                    "        adapter_parm.addr =Ext.getCmp('EngAcceptMap_address').getHtml();",
                    "        if(adapter_parm.checkcontent.length===0){",
                    "            canSUB=false;",
                    "        }",
                    "       /* if(!elesignatures.getValue()){",
                    "            canSUB=false;",
                    "            mustSign=true;",
                    "        }*/",
                    "        break;",
                    "    default:",
                    "        break;",
                    "}",
                    "",
                    "",
                    "if(canSUB){",
                    "    loadMask.show();",
                    "    var store = dataUtil.createStore('by_maintainplanSub');",
                    "    store.loadDat(",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast(operation + '操作已完成！');",
                    "",
                    "            // 刷新保养待办列表",
                    "            //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();",
                    "            liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "            curPage=1;",
                    "            me.doEngMaintain_LoadMaintainPlanList(1,20,'');",
                    "",
                    "            if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能完成' + operation + '操作，请稍后再试！');",
                    "        },",
                    "        adapter_parm",
                    "    );",
                    "}else{",
                    "    if(mustSign){",
                    "        Ext.toast('不存在电子签名，无法保存！');",
                    "    }else{",
                    "       Ext.toast('保养单明细为空,无法保存！');",
                    "    }",
                    "}",
                    ""
                ]
            },
            "name": "doEngMaintainPlan_Process2",
            "designerId": "a2bbfee8-28ed-49ad-a782-3249676e4aa5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngMaintainP_camera",
                "designer|targetType": "Ext.Img",
                "fn": "onEngMaintainP_cameraTap",
                "implHandler": [
                    "var me = this;",
                    "",
                    "Ext.getCmp('camera_showM').show();",
                    "/*console.log('-------进入拍照功能');",
                    "",
                    "var source='CAMEAR';",
                    "",
                    "var parm = {",
                    "    callback :function(filename){",
                    "            for(var i=1;i<7;i++){",
                    "                var ImgID = 'EngMaintainP_photo_'+i;",
                    "                var Img = Ext.getCmp(ImgID);",
                    "                var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "                if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngMaintainP_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngMaintainP_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngMaintainP_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                            NextImg.setItemId('EngMaintainP_camera');",
                    "                            NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "                }",
                    "            }",
                    "    },//回调函数",
                    "    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);*/"
                ],
                "name": "tap"
            },
            "name": "onEngMaintainP_cameraTap",
            "designerId": "a8a7cd9e-8901-4c26-97e6-e355031c38af"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngMaintainP_photo",
                "designer|targetType": "Ext.Img",
                "fn": "onEngMaintainP_photoTap",
                "implHandler": [
                    "//点击图片时进入另一页面显示图片",
                    "console.log('----ImgID----');",
                    "var ImgID = image.getId();",
                    "console.log(ImgID);",
                    "console.log('----ImgID----');",
                    "viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'N',NextImgId:'EngMaintainP_photo_',fcname:'EngMaintainP_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEngMaintainP_photoTap",
            "designerId": "10200930-7a55-4ea1-bb19-591dbdbec93f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngMaintainP_photoX",
                "designer|targetType": "Ext.Img",
                "fn": "onEngMaintainP_photoXTap",
                "implHandler": [
                    " //点击图片时进入另一页面显示图片",
                    "        console.log('----ImgID----');",
                    "        var ImgID = image.getId();",
                    "        console.log(ImgID);",
                    "        console.log('----ImgID----');",
                    "        viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'Y',NextImgId:'EngMaintainP_photo_',fcname:'EngMaintainP_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEngMaintainP_photoXTap",
            "designerId": "5a34f548-159a-41c6-b903-4ed6e6afc25e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#source_camearM",
                "designer|targetType": "Ext.Button",
                "fn": "onSource_camearMTap",
                "implHandler": [
                    "Ext.getCmp('camera_showM').hide();",
                    "console.log('-------进入拍照功能');",
                    "",
                    "        var source='CAMEAR';",
                    "",
                    "        var parm = {",
                    "            callback :function(filename){",
                    "                    for(var i=1;i<7;i++){",
                    "                        var ImgID = 'EngMaintainP_photo_'+i;",
                    "                        var Img = Ext.getCmp(ImgID);",
                    "                        var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "                        if(filename!==''){",
                    "                        if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                            Img.setSrc(filename);",
                    "                            Img.setItemId('EngMaintainP_photo');",
                    "",
                    "                            if(i!==6){",
                    "                                var z = i+1;",
                    "                                var NextImgID = 'EngMaintainP_photo_'+z;",
                    "                                console.log(NextImgID);",
                    "                                var NextImg = Ext.getCmp(NextImgID);",
                    "                                var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                                if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                                    var IMGSHOW = true;",
                    "                                    for(var j=1;j<7;j++){",
                    "                                        var PID = 'EngMaintainP_photo_'+j;",
                    "                                        var P = Ext.getCmp(PID);",
                    "                                        var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                        if(PSrc==='resources/images/camera.png'){",
                    "                                            IMGSHOW = false;",
                    "                                        }",
                    "",
                    "                                    }",
                    "                                    if(IMGSHOW){",
                    "                                    NextImg.setItemId('EngMaintainP_camera');",
                    "                                    NextImg.setSrc('resources/images/camera.png');",
                    "                                    }",
                    "                                }",
                    "                            }",
                    "",
                    "                            return;",
                    "                        }",
                    "                        }",
                    "                    }",
                    "            },//回调函数",
                    "            source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "            direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "            width:640,\t//width",
                    "            height:640 // height",
                    "        };",
                    "        phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onSource_camearMTap",
            "designerId": "5a612ecf-28c9-426b-9d10-0be9e281ade7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#source_albumM",
                "designer|targetType": "Ext.Button",
                "fn": "onSource_albumMTap",
                "implHandler": [
                    "Ext.getCmp('camera_showM').hide();",
                    "console.log('-----进入相册');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        for(var i=1;i<7;i++){",
                    "            var ImgID = 'EngMaintainP_photo_'+i;",
                    "            var Img = Ext.getCmp(ImgID);",
                    "            var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "            if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngMaintainP_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngMaintainP_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngMaintainP_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                                NextImg.setItemId('EngMaintainP_camera');",
                    "                                NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "            }",
                    "        }",
                    "    },//回调函数",
                    "    source:'ALBUM',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onSource_albumMTap",
            "designerId": "1cd1bacb-ebad-4faa-833e-8dab45fdb64a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngReception",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngReceptionInitialize",
                "implHandler": [
                    "loadMask.show();",
                    "var me=this;",
                    "var userid=global.getUserId();",
                    "var button1 = Ext.getCmp('EngRecption_BtnJS');",
                    "var button2 = Ext.getCmp('EngRecption_BtnTH');",
                    "var taskrecord = component.initialConfig.parm.record; // 待办记录",
                    "var jnlno;",
                    "if(taskrecord){",
                    "    jnlno=taskrecord.get('jnlno');",
                    "}else{",
                    "    jnlno=component.initialConfig.parm.jnlno;",
                    "}",
                    "",
                    "var store=dataUtil.createStore('by_maintainRecption');",
                    "store.loadDat(function(n){",
                    "    loadMask.hide();",
                    "    if(n<1) {",
                    "            Ext.toast('未能读取保养计划数据！');",
                    "            viewUtil.goLast();",
                    "            return;",
                    "        }",
                    "    var record = store.getAt(0);",
                    "    button1.record = record;",
                    "    button2.record = record;",
                    "//     var record=store.getData().get(0);",
                    "    if(record.get('nextstate') && record.get('nextstate').length>0){",
                    "        button1.jnlno = jnlno;",
                    "        button2.jnlno = jnlno;",
                    "        //显示按钮",
                    "        Ext.getCmp('EngRecption_PnlOperation').setHidden(false);",
                    "        liftnet.app.getController('Engineer.EngMaintainController').",
                    "                doEngMaintain_InitialNextStateButton(button1,0);",
                    "",
                    "        liftnet.app.getController('Engineer.EngMaintainController').",
                    "                doEngMaintain_InitialNextStateButton(button2,1);",
                    "    }else{",
                    "        Ext.getCmp('EngRecption_PnlOperation').setHidden(true);",
                    "    }",
                    "",
                    "",
                    "    Ext.getCmp('form_by_engreception').setRecord(record);",
                    "",
                    "    Ext.getCmp('EngRecption_ListDetial').getStore().loadDat(record.get('detail'));",
                    "",
                    "},function(){",
                    "    loadMask.hide();",
                    "    Ext.toast('未能读取保养任务数据！');",
                    "    viewUtil.goLast();",
                    "},jnlno);",
                    "",
                    "//电梯列表点击事件",
                    "    Ext.getCmp('EngRecption_ListDetial').on('itemtap',function(dataview, index, target, record, e, eOpts){",
                    "        if(!record.get('prodno')){",
                    "            Ext.toast('电梯注册码为空</br></br>无法查看相关电梯档案');",
                    "            return;",
                    "        }",
                    "        viewUtil.goNext('Engineer.EngMonitorElevatorInfo',{prono:record.get('prodno')});",
                    "    });"
                ],
                "name": "initialize"
            },
            "name": "onEngReceptionInitialize",
            "designerId": "fda8ee12-319d-4c35-88e3-3387f72393b3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngMaintainTaskReceive_Process",
                "implHandler": [
                    "var receviestatus;",
                    "var userid = global.getUserId();",
                    "var jnlno = parm.jnlno;",
                    "var EngFaultAccept_remark = '';",
                    "switch(parm.state){",
                    "    case \"接收\":",
                    "        receviestatus = 'A';",
                    "        process();",
                    "        return;",
                    "",
                    "    case \"退回\":",
                    "        receviestatus = 'B';",
                    "Ext.Msg.prompt('退回原因', null,",
                    "                function(buttonId,value) {",
                    "                        if(buttonId=='ok'){",
                    "                            EngFaultAccept_remark = value;",
                    "                            if(EngFaultAccept_remark!==''){",
                    "                                process();",
                    "                                 return;",
                    "                            }else{",
                    "                                Ext.toast('请填写退回原因');",
                    "                                return;",
                    "                            }",
                    "",
                    "                        }else{",
                    "                            return;",
                    "                        }",
                    "                    },",
                    "                    null,",
                    "                    true,",
                    "                    '' || '',",
                    "                    {",
                    "                        autoCapitalize: true,",
                    "                        placeHolder: '请输入退回原因',",
                    "",
                    "                    }",
                    "                );",
                    "        return;",
                    "}",
                    "",
                    "function process(){",
                    "    //保养任务处理",
                    "loadMask.show();",
                    "            var store = dataUtil.createStore('by_maintainReceptionSub');",
                    "            store.loadDat(",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    Ext.toast(parm.state+'操作已完成！');",
                    "",
                    "                    // 刷新保养待办列表",
                    "                    //liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoMaintain();",
                    "                    liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "",
                    "                    viewUtil.goLast();",
                    "                },",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    Ext.toast('未能完成'+parm.state+'操作，请稍后再试！');",
                    "                },",
                    "                {userid:userid,",
                    "                 jnlno:jnlno,",
                    "                 remark:EngFaultAccept_remark||'',",
                    "                 needhelp:'',",
                    "                 receviestatus:receviestatus,",
                    "                }",
                    "            );",
                    "}",
                    "",
                    ""
                ]
            },
            "name": "doEngMaintainTaskReceive_Process",
            "designerId": "6d03171d-bf54-4cc1-a431-155458e26c95"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngRecption_BtnJS",
                "designer|targetType": "Ext.Button",
                "fn": "onEngRecption_BtnJSTap",
                "implHandler": [
                    "this.doEngMaintainTaskReceive_Process({state:button.getText(),jnlno:button.jnlno});"
                ],
                "name": "tap"
            },
            "name": "onEngRecption_BtnJSTap",
            "designerId": "b56e32a7-2add-4815-b575-939a2bda4c3c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngRecption_BtnTH",
                "designer|targetType": "Ext.Button",
                "fn": "onEngRecption_BtnTHTap",
                "implHandler": [
                    "",
                    "this.doEngMaintainTaskReceive_Process({state:button.getText(),jnlno:button.jnlno});"
                ],
                "name": "tap"
            },
            "name": "onEngRecption_BtnTHTap",
            "designerId": "eee5004f-196a-449d-bc65-9cb4ec32d827"
        }
    ]
}