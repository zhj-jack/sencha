{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Engineer.EngFaultReportController"
    },
    "name": "MyController",
    "designerId": "841e4d8d-bb96-414a-9158-d1e49baeee26",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "datepickerfield#EngFaultReport_date1",
                "designer|params": [
                    "datepickerfield",
                    "newDate",
                    "oldDate",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.DatePicker",
                "fn": "onEngFaultReport_date1Change",
                "implHandler": [
                    "this.doEngFault_LoadReportList();"
                ],
                "name": "change"
            },
            "name": "onEngFaultReport_date1Change",
            "designerId": "ab827fac-aa1d-4bd8-8e53-9eb1844a0c12"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "datepickerfield#EngFaultReport_date2",
                "designer|params": [
                    "datepickerfield",
                    "newDate",
                    "oldDate",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.DatePicker",
                "fn": "onEngFaultReport_date2Change",
                "implHandler": [
                    "this.doEngFault_LoadReportList();"
                ],
                "name": "change"
            },
            "name": "onEngFaultReport_date2Change",
            "designerId": "6bbc1187-745d-4d0d-abb1-c88756f68aa3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 故障报告书 **********",
                    ""
                ],
                "designer|controlQuery": "list#EngFault_ListReport",
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFault_ListReportItemTap",
                "implHandler": [
                    "// 进入“故障报告表”明细页面",
                    "viewUtil.goNext('Engineer.EngFaultReport', {record: record});"
                ],
                "name": "itemtap"
            },
            "name": "onEngFault_ListReportItemTap",
            "designerId": "43edc5a0-7a3d-452c-b84f-5b0bbcd0daa4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFaultReport",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFaultReportInitialize",
                "implHandler": [
                    "// 故障报告书操作 - 保存、提交、通过、不通过",
                    "loadMask.show();",
                    "",
                    "var me = this;",
                    "",
                    "// 初始化数据",
                    "var form = Ext.getCmp('form_sx_reportdetail');",
                    "var store;",
                    "var button1 = Ext.getCmp('EngFaultReport_Btn1');",
                    "var button2 = Ext.getCmp('EngFaultReport_Btn2');",
                    "",
                    "/* 签名 */",
                    "/*",
                    "form.add(",
                    "    {",
                    "        xtype: 'signaturefield',",
                    "        id: 'signatureField',",
                    "        sigWidth: 300,",
                    "        sigHeight: 300,",
                    "        label: '签名',",
                    "        labelwidth: '40%'",
                    "    });",
                    "*/",
                    "",
                    "// 初始化下拉选择项目",
                    "dataUtil.createStore('common_storagelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "dataUtil.createStore('common_getdeptlist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "",
                    "var rpno = component.initialConfig.parm.record.get('rpno');",
                    "var nextstate = component.initialConfig.parm.record.get('nextstate');",
                    "var takestate = component.initialConfig.parm.record.get('state');",
                    "console.log(nextstate);",
                    "console.log('--takestate----'+takestate+'---');",
                    "Ext.getCmp('EngFaultReport_Tbar').setTitle('故障报告');",
                    "",
                    "if(takestate=='新建'){",
                    "    console.log('新建');",
                    "    var status;",
                    "    store = dataUtil.createStore('sx_reportdetail');",
                    "    store.loadDat(",
                    "        function() {",
                    "            // 测试数据",
                    "            if(!global.isWorklight()) {",
                    "                status = component.initialConfig.parm.record.get('state');",
                    "                store.getAt(0).set('status', status);",
                    "            }",
                    "            form.setRecord(store.getAt(0));",
                    "",
                    "",
                    "            // 困人相关",
                    "            var istrap = store.getAt(0).get('istrap');",
                    "            //me.onEngFaultReport_istrapChange(",
                    "            //    Ext.getCmp('EngFaultReport_istrap'), istrap, istrap, null);",
                    "",
                    "            //原因分析",
                    "            var analysisStr = '';",
                    "            var report_analysisStr = '';",
                    "            var analysis = store.getAt(0).get('analysis');",
                    "            if(analysis.length>0){",
                    "                for(var i=0;i<analysis.length;i++){",
                    "                    if(i!==0){",
                    "                     analysisStr+='、';",
                    "                     report_analysisStr+='+';",
                    "                 }",
                    "                     analysisStr+=analysis[i].faultanalysis;",
                    "                    report_analysisStr+=analysis[i].faulttype+'_';",
                    "                    report_analysisStr+=analysis[i].faultcode+'_';",
                    "                    report_analysisStr+=analysis[i].faultanalysis+'_';",
                    "                    report_analysisStr+=analysis[i].ladder;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_analysis').setValue(analysisStr);",
                    "            Ext.getCmp('report_analysisStr').setValue(report_analysisStr);",
                    "",
                    "            //故障原因",
                    "            var reasonStr = '';",
                    "            var report_reasonStr = '';",
                    "            var reason = store.getAt(0).get('reason');",
                    "            if(reason.length>0){",
                    "                for(var j=0;j<reason.length;j++){",
                    "                    if(j!==0){",
                    "                     reasonStr+=',';",
                    "                     report_reasonStr+='&';",
                    "                 }",
                    "                    reasonStr+=reason[j].reasonname;",
                    "                    report_reasonStr+=reason\t[j].reasonname;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_reason').setValue(reasonStr);",
                    "            Ext.getCmp('report_reasonStr').setValue(report_reasonStr);",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "            // 故障原因",
                    "            //var lifttype = store.getAt(0).get('lifttype');",
                    "            //var causeanalysis = store.getAt(0).get('causeanalysis');",
                    "            //me.doEngFaultReport_Load_faultsituation(lifttype, causeanalysis);",
                    "",
                    "            status = store.getAt(0).get('status');",
                    "            switch(status) {",
                    "                case '新建':",
                    "                    var nextstate = store.getAt(0).get('nextstate');",
                    "                    console.log(nextstate);",
                    "                    var BtnSave = true;",
                    "                    var BtnSub = true;",
                    "                    if(nextstate==null || nextstate.length<=0){",
                    "                        //把按钮区域隐藏",
                    "                        Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "                        //把更换件的按钮隐藏",
                    "                        Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "",
                    "                        //表单只读",
                    "                        var fields = form.getFields();",
                    "                        for(var key in fields) {",
                    "                            field = fields[key];",
                    "                            if(field.setReadOnly()){",
                    "                                field.setReadOnly(true);",
                    "                            }",
                    "                            if(field.setItemId()){",
                    "                                field.setItemId();",
                    "                            }",
                    "",
                    "                        }",
                    "",
                    "                    }else{",
                    "                        for(var n=0;n<nextstate.length;n++){",
                    "                            var name=nextstate[n].name;",
                    "                            if(name=='保存'){",
                    "                                BtnSave = false;",
                    "                            }",
                    "                            if(name=='提交'){",
                    "                                BtnSub = false;",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    Ext.getCmp('EngFaultReport_Btn1').setHidden(BtnSave);",
                    "                    Ext.getCmp('EngFaultReport_Btn2').setHidden(BtnSub);",
                    "",
                    "                    if(BtnSave && BtnSub){//按钮全隐藏了把区域也隐藏",
                    "                        Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "                        Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "                        Ext.getCmp('EngFaultReport_ListParts').suspendEvents();",
                    "                    }else{",
                    "                        // 初始化配件列表滑动操作",
                    "                        var partsList = Ext.getCmp('EngFaultReport_ListParts');",
                    "                        partsList.setPlugins(",
                    "                            [",
                    "                                {",
                    "                                    xclass: 'ux.SlideActions',",
                    "                                    openPosition: 75,",
                    "                                    buttons:",
                    "                                    [",
                    "                                        // 删除按钮",
                    "                                        {",
                    "                                            xtype: 'button',",
                    "                                            baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                                            text: '<i class=\"fa fa-lg fa-trash-o\"></i>',",
                    "                                            listeners: {",
                    "                                                tap: function(button, e){",
                    "                                                    e.stopPropagation();",
                    "                                                    return false;",
                    "                                                },",
                    "                                                scope: this",
                    "                                            },",
                    "                                            handler: function(button, e) {",
                    "                                                partsList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                                partsList.getStore().remove(button.getRecord());",
                    "                                            }",
                    "                                        }",
                    "                                    ]",
                    "                                }",
                    "                            ]",
                    "                        );",
                    "                    }",
                    "                    break;",
                    "                /*case '待审':",
                    "                Ext.getCmp('EngFaultReport_Tbar').setTitle('故障报告审核');",
                    "                        // 全屏蔽输入",
                    "                    var fields2 = form.getFields();",
                    "                    for(var key in fields2) {",
                    "                        if(key!=='remark'){",
                    "                        field = fields2[key];",
                    "                        if(field.setReadOnly) {",
                    "                            field.setReadOnly(true);",
                    "                        }",
                    "",
                    "                        //屏蔽方法",
                    "                        if(field.setItemId()){",
                    "                            field.setItemId();",
                    "                        }",
                    "                        }else{",
                    "                            Ext.getCmp('report_remark').setHidden(false);",
                    "                        }",
                    "",
                    "                    }",
                    "",
                    "                   //",
                    "                    //Ext.getCmp('report_remark').setReadOnly(false);",
                    "",
                    "                    button1.setText('同意');",
                    "                    button2.setText('不同意');",
                    "                    Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "",
                    "                    break;*/",
                    "",
                    "                default:",
                    "                    // 全屏蔽输入",
                    "                    var fields = form.getFields();",
                    "                    for(var name in fields) {",
                    "                        field = fields[name];",
                    "                        if(field.setReadOnly) {",
                    "                            field.setReadOnly(true);",
                    "                        }",
                    "                    }",
                    "                    Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "                    Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "                    break;",
                    "            }",
                    "            loadMask.hide();",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能读取故障报告书资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "        },",
                    "            rpno",
                    "    );",
                    "}else if(takestate==='待审' || takestate==='审批中'){",
                    "    console.log(takestate);",
                    "    var status;",
                    "    store = dataUtil.createStore('sx_reportAuditdetail');",
                    "    store.loadDat(",
                    "        function() {",
                    "            // 测试数据",
                    "            if(!global.isWorklight()) {",
                    "                status = component.initialConfig.parm.record.get('state');",
                    "                store.getAt(0).set('status', status);",
                    "            }",
                    "            form.setRecord(store.getAt(0));",
                    "",
                    "",
                    "            nextstate =  store.getAt(0).get('nextstate');",
                    "            console.log(nextstate);",
                    "            if(nextstate.length>0){",
                    "                console.log(nextstate[0]);",
                    "                if(nextstate[0])",
                    "                    button1.setText(nextstate[0].name);",
                    "                if(nextstate[1])",
                    "                    button2.setText(nextstate[1].name);",
                    "            }else{",
                    "                Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "            }",
                    "",
                    "            var partslist = store.getAt(0).get('partslist');",
                    "            dataUtil.createStore('sx_reportparts').setData(partslist);",
                    "",
                    "            //原因分析",
                    "            var analysisStr = '';",
                    "            var report_analysisStr = '';",
                    "            var analysis = store.getAt(0).get('analysis');",
                    "            if(analysis.length>0){",
                    "                for(var i=0;i<analysis.length;i++){",
                    "                    if(i!==0){",
                    "                     analysisStr+='、';",
                    "                     report_analysisStr+='+';",
                    "                 }",
                    "                     analysisStr+=analysis[i].faultanalysis;",
                    "                    report_analysisStr+=analysis[i].faulttype+'_';",
                    "                    report_analysisStr+=analysis[i].faultcode+'_';",
                    "                    report_analysisStr+=analysis[i].faultanalysis+'_';",
                    "                    report_analysisStr+=analysis[i].ladder;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_analysis').setValue(analysisStr);",
                    "            Ext.getCmp('report_analysisStr').setValue(report_analysisStr);",
                    "",
                    "            //故障原因",
                    "            var reasonStr = '';",
                    "            var report_reasonStr = '';",
                    "            var reason = store.getAt(0).get('reason');",
                    "            if(reason.length>0){",
                    "                for(var j=0;j<reason.length;j++){",
                    "                    if(j!==0){",
                    "                     reasonStr+=',';",
                    "                     report_reasonStr+='&';",
                    "                 }",
                    "                    reasonStr+=reason[j].reasonname;",
                    "                    report_reasonStr+=reason\t[j].reasonname;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_reason').setValue(reasonStr);",
                    "            Ext.getCmp('report_reasonStr').setValue(report_reasonStr);",
                    "",
                    "            Ext.getCmp('EngFaultReport_ListParts').suspendEvents();",
                    "",
                    "",
                    "            loadMask.hide();",
                    "",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能读取故障报告书资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "",
                    "            loadMask.hide();",
                    "        },",
                    "        rpno",
                    "    );",
                    "",
                    "",
                    "    Ext.getCmp('EngFaultReport_Tbar').setTitle('故障报告审核');",
                    "    // 全屏蔽输入",
                    "",
                    "    var fields2 = form.getFields();",
                    "    for(var key in fields2) {",
                    "        if(key!=='remark'&& key!=='createbydept'){",
                    "            field = fields2[key];",
                    "            if(field.setReadOnly) {",
                    "                field.setReadOnly(true);",
                    "            }",
                    "",
                    "            //屏蔽方法",
                    "            if(field.setItemId()){",
                    "                field.setItemId();",
                    "            }",
                    "        }else{",
                    "            Ext.getCmp('report_remark').setHidden(false);",
                    "        }",
                    "",
                    "    }",
                    "",
                    "    //",
                    "    //Ext.getCmp('report_remark').setReadOnly(false);",
                    "",
                    "    Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "",
                    "}else if(takestate==='不通过'){",
                    "    console.log(takestate);",
                    "    var status;",
                    "    store = dataUtil.createStore('sx_reportAuditdetail');",
                    "    store.loadDat(",
                    "        function() {",
                    "            // 测试数据",
                    "            if(!global.isWorklight()) {",
                    "                status = component.initialConfig.parm.record.get('state');",
                    "                store.getAt(0).set('status', status);",
                    "            }",
                    "",
                    "            form.setRecord(store.getAt(0));",
                    "",
                    "",
                    "            nextstate =  store.getAt(0).get('nextstate');",
                    "            console.log(nextstate);",
                    "",
                    "            if(nextstate.length>0){",
                    "                if(nextstate[0])",
                    "                    button1.setText(nextstate[0].name);",
                    "                    button1.setHtml(nextstate[0].name);",
                    "                if(nextstate[1])",
                    "                    button2.setText(nextstate[1].name);",
                    "                    button2.setHtml(nextstate[1].name);",
                    "",
                    "            }else{",
                    "                Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "                Ext.getCmp('EngFaultReport_ListParts').suspendEvents();",
                    "                var fields2 = form.getFields();",
                    "                for(var key in fields2) {",
                    "                    if(key!=='remark'&& key!=='createbydept'){",
                    "                        field = fields2[key];",
                    "                        if(field.setReadOnly) {",
                    "                            field.setReadOnly(true);",
                    "                        }",
                    "",
                    "                        //屏蔽方法",
                    "                        if(field.setItemId()){",
                    "                            field.setItemId();",
                    "                        }",
                    "                    }else{",
                    "                        Ext.getCmp('report_remark').setHidden(false);",
                    "                    }",
                    "",
                    "                }",
                    "                Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "",
                    "            }",
                    "",
                    "",
                    "            //原因分析",
                    "            var analysisStr = '';",
                    "            var report_analysisStr = '';",
                    "            var analysis = store.getAt(0).get('analysis');",
                    "            if(analysis.length>0){",
                    "                for(var i=0;i<analysis.length;i++){",
                    "                    if(i!==0){",
                    "                     analysisStr+='、';",
                    "                     report_analysisStr+='+';",
                    "                 }",
                    "                     analysisStr+=analysis[i].faultanalysis;",
                    "                    report_analysisStr+=analysis[i].faulttype+'_';",
                    "                    report_analysisStr+=analysis[i].faultcode+'_';",
                    "                    report_analysisStr+=analysis[i].faultanalysis+'_';",
                    "                    report_analysisStr+=analysis[i].ladder;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_analysis').setValue(analysisStr);",
                    "            Ext.getCmp('report_analysisStr').setValue(report_analysisStr);",
                    "",
                    "            //故障原因",
                    "            var reasonStr = '';",
                    "            var report_reasonStr = '';",
                    "            var reason = store.getAt(0).get('reason');",
                    "            if(reason.length>0){",
                    "                for(var j=0;j<reason.length;j++){",
                    "                    if(j!==0){",
                    "                     reasonStr+=',';",
                    "                     report_reasonStr+='&';",
                    "                 }",
                    "                    reasonStr+=reason[j].reasonname;",
                    "                    report_reasonStr+=reason\t[j].reasonname;",
                    "                }",
                    "            }",
                    "",
                    "            Ext.getCmp('report_reason').setValue(reasonStr);",
                    "            Ext.getCmp('report_reasonStr').setValue(report_reasonStr);",
                    "",
                    "",
                    "",
                    "            loadMask.hide();",
                    "",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能读取故障报告书资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "",
                    "            loadMask.hide();",
                    "        },",
                    "        rpno",
                    "    );",
                    "",
                    "",
                    "    Ext.getCmp('EngFaultReport_Tbar').setTitle('故障报告');",
                    "",
                    "",
                    "}else{",
                    "    // 全屏蔽输入",
                    "    var fields = form.getFields();",
                    "    for(var name in fields) {",
                    "        field = fields[name];",
                    "        if(field.setReadOnly) {",
                    "            field.setReadOnly(true);",
                    "        }",
                    "    }",
                    "    Ext.getCmp('EngFaultReport_ListParts').suspendEvents();",
                    "    Ext.getCmp('EngFaultReport_PnlOperation').setHidden(true);",
                    "    Ext.getCmp('EngFaultReportParts_PnlOperation').setHidden(true);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFaultReportInitialize",
            "designerId": "3b3c1d07-d1f4-45f8-b077-c0257431b117"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "togglefield#EngFaultReport_istrap",
                "designer|params": [
                    "togglefield",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.Toggle",
                "fn": "onEngFaultReport_istrapChange",
                "implHandler": [
                    "var istrap = newValue;",
                    "var fieldtrapnum = Ext.getCmp('EngFaultReport_trapnum');",
                    "var fieldtraptime = Ext.getCmp('EngFaultReport_traptime');",
                    "fieldtrapnum.setReadOnly(!istrap);",
                    "fieldtraptime.setReadOnly(!istrap);",
                    "if(istrap) {",
                    "    fieldtrapnum.setRequired(true);",
                    "    fieldtraptime.setRequired(true);    ",
                    "} else {",
                    "    fieldtrapnum.setValue(0);",
                    "    fieldtraptime.setValue('');",
                    "    fieldtrapnum.setRequired(false);",
                    "    fieldtraptime.setRequired(false);    ",
                    "}"
                ],
                "name": "change"
            },
            "name": "onEngFaultReport_istrapChange",
            "designerId": "b799f3f9-3bc2-4f11-ae3e-617cd945f8f9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_traptime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_traptimeFocus",
                "implHandler": [
                    "// 故障报告书 - 困人时长",
                    "this.doEngFaultReport_ShowDurationPicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_traptimeFocus",
            "designerId": "c101baaa-6ad0-40ef-b722-5780ae1b9dc0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_stoptime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_stoptimeFocus",
                "implHandler": [
                    "// 故障报告书 - 停运时长",
                    "this.doEngFaultReport_ShowDurationPicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_stoptimeFocus",
            "designerId": "8e681572-56e9-4272-a2f3-6294fadfbae2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_handletime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_handletimeFocus",
                "implHandler": [
                    "// 故障报告书 - 处理时长",
                    "this.doEngFaultReport_ShowDurationPicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_handletimeFocus",
            "designerId": "7237c329-dc21-4e84-99aa-7df128a49a6c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield#EngFaultReport_lifttype",
                "designer|params": [
                    "selectfield",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.Select",
                "fn": "onEngFaultReport_lifttypeChange",
                "implHandler": [
                    "Ext.getCmp('EngFaultReport_causeanalysis').setValue('');",
                    "this.doEngFaultReport_Load_faultsituation(newValue, '');"
                ],
                "name": "change"
            },
            "name": "onEngFaultReport_lifttypeChange",
            "designerId": "93e94477-22cd-4b85-ab3c-93bd013c49d6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_causeanalysis",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_causeanalysisFocus",
                "implHandler": [
                    "// 故障报告书 - 故障原因",
                    "if(Ext.getCmp('EngFaultReport_PnlOperation').getHidden()) return;",
                    "",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{faultTypeName}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_faultsituation',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        TypeRef: Ext.getCmp('EngFaultReport_lifttype').getValue()",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('form_sx_reportdetail').setValues({",
                    "                causeanalysis: record",
                    "            });",
                    "        } else {",
                    "            var id = record.get('faultTypeID');",
                    "            var name = record.get('faultTypeName');",
                    "            textfield.setOptions({text:name, value:id});",
                    "            textfield.setValue(id);",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_causeanalysisFocus",
            "designerId": "0f6e26ed-d576-45fe-8e0f-7568dfa78b4f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_brktime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_brktimeFocus",
                "implHandler": [
                    "// 故障报告书 - 故障时间",
                    "liftnet.app.getController('Engineer.EngFaultController')",
                    "    .doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_brktimeFocus",
            "designerId": "aad17c61-aeee-45d9-b746-255de6e8bf02"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultReport_finishtime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultReport_finishtimeFocus",
                "implHandler": [
                    "// 故障报告书 - 完成时间",
                    "liftnet.app.getController('Engineer.EngFaultController')",
                    "    .doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_finishtimeFocus",
            "designerId": "4b6a4932-d34e-404f-b0b7-3180628f09ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReport_Btn1",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReport_Btn1Tap",
                "implHandler": [
                    "this.doEngFaultReport_Process(button.getText()+'_'+button.getHtml());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_Btn1Tap",
            "designerId": "3ba68516-5e3a-49c6-87b4-8298a624cd3e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReport_Btn2",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReport_Btn2Tap",
                "implHandler": [
                    "this.doEngFaultReport_Process(button.getText()+'_'+button.getHtml());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_Btn2Tap",
            "designerId": "f0968480-17e9-4665-9337-0243a0b3a078"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReport_DurationPickerOK",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReport_DurationPickerOKTap",
                "implHandler": [
                    "// 故障报告书 - 时长选择 - 确定",
                    "var picker = Ext.getCmp('EngFaultReport_DurationPicker');",
                    "var values = picker.getValues();",
                    "this.EngFaultReport_currentfield.setValue(",
                    "    values.day +",
                    "    values.hour + ':' + values.minute",
                    ");"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_DurationPickerOKTap",
            "designerId": "363d7c2e-7ecc-441c-9225-f37086b06966"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReport_BtnReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReport_BtnReturnTap",
                "implHandler": [
                    "// 故障报告书 - 返回上页",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_BtnReturnTap",
            "designerId": "3fd34062-a756-4bcc-91ea-b852a1b31d93"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReport_btnAdd",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReport_btnAddTap",
                "implHandler": [
                    "// 故障报告书 - 更换件列表",
                    "viewUtil.goNext('Engineer.EngFaultReportParts',{});"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReport_btnAddTap",
            "designerId": "86cb7dc2-2a6c-4c01-8769-5d2feb82161a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportParts_BtnConfirm",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportParts_BtnConfirmTap",
                "implHandler": [
                    "// “添加配件”页面 - 确定",
                    "var data = Ext.getCmp('form_sx_reportdetail_trplist').getValues();",
                    "if(!data.materialsname || !data.materialsnum ||",
                    "   data.materialsname==='' || data.materialsnum<=0) {",
                    "    Ext.toast('请输入名称和数量！');",
                    "    return;",
                    "}",
                    "var index = Ext.getCmp('reportpart_index').getValue();",
                    "",
                    "if(index!==''){",
                    "    Ext.getCmp('EngFaultReport_ListParts').getStore().getAt(index).set(data);",
                    "}else{",
                    "    Ext.getCmp('EngFaultReport_ListParts').getStore().add(data);",
                    "}",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportParts_BtnConfirmTap",
            "designerId": "dbec4f72-831f-4015-9078-e1ffb9fdbd1e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportParts_BtnReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportParts_BtnReturnTap",
                "implHandler": [
                    "// “添加配件”页面 - 返回上页",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportParts_BtnReturnTap",
            "designerId": "29ea24c7-56e3-4541-8ea4-5f2e52769b14"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngFault_LoadReportList",
                "implHandler": [
                    "// 故障业务标签页 - 故障报告书列表刷新",
                    "var date1 = Ext.getCmp('EngFaultReport_date1').getValue();",
                    "var date2 = Ext.getCmp('EngFaultReport_date2').getValue();",
                    "if(!date1 || !date2) {",
                    "    return;",
                    "}",
                    "date1 = Ext.Date.format(new Date(date1), 'Y-m-d');",
                    "date2 = Ext.Date.format(new Date(date2), 'Y-m-d');",
                    "Ext.getCmp('EngFault_ListReport').getStore().loadDat(",
                    "    function(n) {",
                    "        // 设置角标",
                    "        /*",
                    "        var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "                Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');",
                    "            }, this);",
                    "        task.delay(1000);",
                    "        task.cancel();",
                    "        */",
                    "        if(n===0) Ext.toast('没有符合条件的故障报告书数据!');",
                    "        console.log('故障报告书列表搜索完成!');",
                    "    },",
                    "    function() {",
                    "        Ext.toast('暂时未能获取故障报告书列表!');",
                    "    },",
                    "    {",
                    "        userid: global.getUserId(),",
                    "        startrptime: date1,",
                    "        endrptime: date2,",
                    "        curpagenum:1,",
                    "        pagesize:20,",
                    "        searchkey:''",
                    "    }",
                    ");"
                ]
            },
            "name": "doEngFault_LoadReportList",
            "designerId": "d25f940c-fd1f-40cb-9bc0-702e11394a27"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "textfield"
                ],
                "fn": "doEngFaultReport_ShowDurationPicker",
                "implHandler": [
                    "// 故障报告书 - 时长选择初始化 - 0000:00",
                    "var picker = Ext.getCmp('EngFaultReport_DurationPicker');",
                    "picker.getToolbar().setTitle(textfield.getLabel());",
                    "",
                    "var value = textfield.getValue() || '0000:00';",
                    "var day    = global.pad2(parseInt(value.substr(0,2))||0);",
                    "var hour   = global.pad2(parseInt(value.substr(2,2))||0);",
                    "var minute = global.pad2(parseInt(value.substr(5,2))||0);",
                    "",
                    "picker.setValue({",
                    "    day: day,",
                    "    hour: hour,",
                    "    minute: minute",
                    "});",
                    "",
                    "picker.show();",
                    "this.EngFaultReport_currentfield = textfield; // 记录当前日期字段"
                ]
            },
            "name": "doEngFaultReport_ShowDurationPicker",
            "designerId": "355734d7-50ea-4a0e-a173-38334f0861fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "action"
                ],
                "fn": "doEngFaultReport_Process",
                "implHandler": [
                    "// 故障报告书操作 - 保存/提交/通过/不通过/提交/作废",
                    "var me = this;",
                    "var form = Ext.getCmp('form_sx_reportdetail');",
                    "var rp = form.getValues();",
                    "var state;",
                    "",
                    "",
                    "//截取原因分析",
                    "var report_analysisStr = Ext.getCmp('report_analysisStr').getValue();",
                    "var analysisJSON = [];",
                    "if(report_analysisStr!==''){",
                    "    var AnalysisStrs = report_analysisStr.split('+');",
                    "    if(AnalysisStrs.length>0){",
                    "        for(var i=0;i<AnalysisStrs.length;i++){",
                    "            analysisJSON[i] = {",
                    "                faulttype: AnalysisStrs[i].split('_')[0],",
                    "                faultcode: AnalysisStrs[i].split('_')[1],",
                    "                faultanalysis: AnalysisStrs[i].split('_')[2],",
                    "                ladder: AnalysisStrs[i].split('_')[3]",
                    "            };",
                    "        }",
                    "            console.log('-------AnalysisStrs------');",
                    "            console.log(analysisJSON);",
                    "            console.log('-------AnalysisStrs------');",
                    "    }",
                    "}",
                    "",
                    "//截取故障原因",
                    "var report_reason = rp.reason;",
                    "var reasonJSON = [];",
                    "if(report_reason!==''){",
                    "    var Report_reason = report_reason.split('&');",
                    "    if(Report_reason.length>0){",
                    "        for(var i=0;i<Report_reason.length;i++){",
                    "            reasonJSON[i] = {",
                    "                reasonname: Report_reason[i]",
                    "            };",
                    "        }",
                    "            console.log('-------reasonJSON------');",
                    "            console.log(reasonJSON);",
                    "            console.log('-------reasonJSON------');",
                    "    }",
                    "}",
                    "",
                    "",
                    "",
                    "var rptime = '';//报告时间",
                    "var rpuser = '';//报告人ID",
                    "var approvalby = '';//审核人ID",
                    "var approvalbydept = '';//审核人所属部门",
                    "var createby = '';//创建人ID",
                    "",
                    "// 操作标志",
                    "console.log(action);",
                    "switch(action) {",
                    "    case '保存_null':",
                    "        state = '0';",
                    "        rp.rptime = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "        rp.rpuser = global.getUserId();",
                    "        rp.createby = global.getUserId();",
                    "",
                    "        break;",
                    "",
                    "    case '提交_null':",
                    "        state = '1';",
                    "        rp.rptime = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "        rp.rpuser = global.getUserId();",
                    "        rp.createby = global.getUserId();",
                    "        break;",
                    "    case '同意_null':",
                    "        state = '同意';",
                    "        rp.approvalby = global.getUserId();",
                    "        rp.approvalbydept = rp.createbydept;",
                    "        break;",
                    "    case '不同意_null':",
                    "        state = '不同意';",
                    "        rp.approvalby = global.getUserId();",
                    "        rp.approvalbydept = rp.createbydept;",
                    "        break;",
                    "    case '提交_提交':",
                    "        state = '提交';",
                    "        rp.approvalby = global.getUserId();",
                    "        rp.approvalbydept = rp.createbydept;",
                    "        break;",
                    "    case '作废_作废':",
                    "        state = '作废';",
                    "        rp.approvalby = global.getUserId();",
                    "        rp.approvalbydept = rp.createbydept;",
                    "        break;",
                    "",
                    "    default:",
                    "        Ext.toast('未知的操作：' + action);",
                    "}",
                    "",
                    "// 检查必填项目",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    //console.log(field.getLabel() + ':' + field.getRequired() + ',' + field.getValue());",
                    "    if(field.getRequired() &&",
                    "       (field.getValue()==='' || !field.getValue())) {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "",
                    "    if(name==='remark' && state==='不同意' &&",
                    "      (field.getValue()==='' || !field.getValue())) {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "",
                    "}",
                    "",
                    "",
                    "rp.trcontent = '';//受信内容",
                    "rp.dealresult = '';//处理结果",
                    "rp.reason = reasonJSON;//故障原因",
                    "rp.analysis = analysisJSON;//原因分析",
                    "",
                    "var trplist = [];",
                    "var partsStore = Ext.getCmp('EngFaultReport_ListParts').getStore();",
                    "partsStore.getData().each(function(r) {",
                    "    trplist.push({",
                    "        materialsname: r.get('materialsname'),",
                    "        materialsnum: r.get('materialsnum'),",
                    "        model: r.get('model'),",
                    "        prices:\tr.get('prices'),",
                    "        remark:\tr.get('remark')",
                    "    });",
                    "});",
                    "rp.partslist = trplist;",
                    "var parm = {",
                    "    userid: global.getUserId(),",
                    "    state: state,",
                    "    rp: rp,",
                    "    rpno:rp.rpno,",
                    "    remark:rp.remark",
                    "    //trplist: trplist",
                    "};",
                    "",
                    "",
                    "",
                    "console.log(parm);",
                    "loadMask.show();",
                    "var me = this;",
                    "var store = dataUtil.createStore('sx_reportdetailsv');",
                    "store.updateDat(",
                    "    function(rpno) {",
                    "        loadMask.hide();",
                    "        Ext.toast(action.split('_')[0] + '操作完成！报告编号为:'+rpno);",
                    "",
                    "        // 刷新故障报告书待办列表",
                    "//         liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoFaultReport();",
                    "        liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "//         me.doEngFault_LoadReportList();",
                    "        liftnet.app.getController('Engineer.EngFaultController').",
                    "            doEngFault_LoadReportList(1,20,'','refresh');",
                    "        liftnet.app.getController('Engineer.EngFaultController').",
                    "            doEngFault_ResetReportCurPage();",
                    "        viewUtil.goLast();",
                    "    },",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast('未能完成' + action + '操作，请稍候再试！');",
                    "    },",
                    "    parm",
                    ");"
                ]
            },
            "name": "doEngFaultReport_Process",
            "designerId": "30e2dc3a-27f9-4639-9909-a48a0adf370a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "lifttype",
                    "value"
                ],
                "fn": "doEngFaultReport_Load_faultsituation",
                "implHandler": [
                    "var faultnamestore = dataUtil.createStore('common_faultsituation');",
                    "var v = value;",
                    "faultnamestore.loadDat(",
                    "    function(n) {",
                    "        var data = faultnamestore.getData();",
                    "        var options = [];",
                    "        for(var i=0;i<n; i++) {",
                    "            var text = data.getAt(i).get('faultTypeName');",
                    "            var value = data.getAt(i).get('faultTypeID');",
                    "            options.push({text:text, value:value});",
                    "        }",
                    "        Ext.getCmp('EngFaultReport_causeanalysis').setOptions(options);",
                    "        Ext.getCmp('EngFaultReport_causeanalysis').setValue(v);",
                    "    },",
                    "    Ext.emptyFn,",
                    "    {",
                    "        userid: global.getUserId(),",
                    "        TypeRef: lifttype",
                    "    }",
                    ");",
                    ""
                ]
            },
            "name": "doEngFaultReport_Load_faultsituation",
            "designerId": "28d8bc7b-ab32-4b60-977d-a3cc88d98024"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#report_prono",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onReport_pronoTap",
                "implHandler": [
                    "// 新增受信 - 设备注册码（服务号）",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{prodno}</div>';",
                    "",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_getserviceno',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        serviceno: textfield.getValue(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.serviceno = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            textfield.setValue(record);",
                    "        } else {",
                    "            textfield.setValue(record.get('prodno'));",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onReport_pronoTap",
            "designerId": "c3b5ffb9-8e4b-4cab-9421-7294e1752416"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#report_repairman",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onReport_repairmanTap",
                "implHandler": [
                    " // 新增受信 - 派工人员",
                    "        var tpl =",
                    "            '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{repairman}</div>' +",
                    "            '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{department}</div>' ;",
                    "",
                    "        viewUtil.goNext('Common.ComMultiSelect', {",
                    "            textfield: textfield,",
                    "            storeid: 'Common_repairmanlist',",
                    "            storeparm: {",
                    "                userid: global.getUserId(),",
                    "                //storageid: storageid",
                    "            },",
                    "            itemtpl: tpl,",
                    "            paging: false,",
                    "            allowedit: false,",
                    "            allowsearch: false,",
                    "            fnSetFilter: Ext.emptyFn,",
                    "            fnSelected: function(record) {",
                    "                if(typeof(record)==='string') {",
                    "                    Ext.getCmp('form_sx_reportdetail').setValues({",
                    "                        repairman: record",
                    "                    });",
                    "                } else {",
                    "                    var repairman = '';",
                    "                    var department = '';",
                    "                    for(var i = 0; i < record.length; i++){",
                    "                        if(i!==0){",
                    "                          repairman +=',';",
                    "                          department+=',';",
                    "                        }",
                    "                        repairman += record[i].get('repairman');",
                    "                        department += record[i].get('department');",
                    "",
                    "                    }",
                    "                    Ext.getCmp('form_sx_reportdetail').setValues({",
                    "                            repairman: repairman,",
                    "                            repairmandept:department,",
                    "",
                    "                    });",
                    "                }",
                    "            }",
                    "        });",
                    "        textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onReport_repairmanTap",
            "designerId": "a7703ab0-e3b9-4100-ae73-73b9170b4ddc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngReport_Button",
                "designer|targetType": "Ext.Button",
                "fn": "onEngReport_ButtonTap",
                "implHandler": [
                    "//故障报告-状态筛选按钮",
                    "        popMenu.show('Engineer.EngFaultReportStatus', button);"
                ],
                "name": "tap"
            },
            "name": "onEngReport_ButtonTap",
            "designerId": "9d72b197-5bf2-4181-b058-e00a3eef0021"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textareafield#SXreport_reason",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onReport_reasonTap",
                "implHandler": [
                    "//先把当前故障原因加入Store",
                    "var reasonStr = Ext.getCmp('report_reasonStr').getValue();",
                    "",
                    "console.log(reasonStr);",
                    "if(reasonStr===''){",
                    "}else{",
                    "    var reasonJSON = [];",
                    "    var reason = reasonStr.split('&');",
                    "    console.log(reason.length);",
                    "    if(reason.length>0){",
                    "        for(var i=0;i<reason.length;i++){",
                    "            reasonJSON[i]={",
                    "                reasonname : reason[i]",
                    "            };",
                    "        }",
                    "    }",
                    "    dataUtil.createStore('sx_report_reason').add(reasonJSON);",
                    "}",
                    "",
                    "",
                    "//故障原因----跳转至另一页面",
                    "viewUtil.goNext('Engineer.EngFaultReportReason',{textareafield:textareafield});"
                ],
                "name": "tap"
            },
            "name": "onReport_reasonTap",
            "designerId": "b41b9d28-bc41-490a-b796-b92520a39172"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Reason_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onReason_BtnReturnTap",
                "implHandler": [
                    "//故障原因----返回上一页",
                    "Ext.getCmp('Reason_List').getStore().removeAll();",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onReason_BtnReturnTap",
            "designerId": "10b0a609-7362-4f52-a3e4-2cae2e79ecfc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Reason_BtnAdd",
                "designer|targetType": "Ext.Button",
                "fn": "onReason_BtnAddTap",
                "implHandler": [
                    "//故障原因增加----跳转至另一页面",
                    "viewUtil.goNext('Engineer.EngFaultReportReasonAdd');"
                ],
                "name": "tap"
            },
            "name": "onReason_BtnAddTap",
            "designerId": "2c19dca2-d15b-4f6e-ace2-3b2c5118e9aa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#ReasonAdd_Sub",
                "designer|targetType": "Ext.Button",
                "fn": "onReasonAdd_SubTap",
                "implHandler": [
                    "//故障原因增加确定",
                    "var me = this;",
                    "var form = Ext.getCmp('ReasonAdd_form');",
                    "var rp = form.getValues();",
                    "",
                    "",
                    "var ReasonAdd_str = rp.ReasonAdd_str;",
                    "console.log('--------ReasonAdd_str------------');",
                    "console.log(ReasonAdd_str);",
                    "console.log('--------ReasonAdd_str------------');",
                    "",
                    "var parm = [{",
                    "    reasonname:ReasonAdd_str",
                    "}];",
                    "",
                    "Ext.getCmp('Reason_List').getStore().add(parm);",
                    "viewUtil.goLast();",
                    "",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onReasonAdd_SubTap",
            "designerId": "a8c77dbc-0962-4b0c-9504-b89a810c258a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#ReasonAdd_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onReasonAdd_BtnReturnTap",
                "implHandler": [
                    "//故障原因增加返回上一页面",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onReasonAdd_BtnReturnTap",
            "designerId": "2dec7520-cc06-4190-a2de-cf4b659826aa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Reason_BtnSub",
                "designer|targetType": "Ext.Button",
                "fn": "onReason_BtnSubTap",
                "implHandler": [
                    "//故障原因确定",
                    "var rp =  Ext.getCmp('Reason_List').getStore().getData();",
                    "",
                    "var ReasonJson = rp.all;",
                    "var ReasonStr = '';",
                    "var report_reasonStr = '';",
                    "if(ReasonJson.length>0){",
                    "    for(var i=0;i<ReasonJson.length;i++){",
                    "        if(i!==0){",
                    "            ReasonStr+=',';",
                    "            report_reasonStr+='&';",
                    "        }",
                    "            ReasonStr+=ReasonJson[i].data.reasonname;",
                    "            report_reasonStr+=ReasonJson[i].data.reasonname;",
                    "    }",
                    "}",
                    "",
                    "console.log('________');",
                    "console.log(ReasonStr);",
                    "console.log('________');",
                    "if(Ext.getCmp('report_reason')){",
                    " Ext.getCmp('report_reason').setValue(ReasonStr);",
                    "}",
                    "if(Ext.getCmp('report_reasonStr')){",
                    " Ext.getCmp('report_reasonStr').setValue(report_reasonStr);",
                    "}",
                    "if(Ext.getCmp('sxreport_reason')){",
                    " Ext.getCmp('sxreport_reason').setValue(ReasonStr);",
                    "}",
                    "if(Ext.getCmp('sxreport_reasonStr')){",
                    " Ext.getCmp('sxreport_reasonStr').setValue(report_reasonStr);",
                    "}",
                    "",
                    " Ext.getCmp('Reason_List').getStore().removeAll();",
                    " viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onReason_BtnSubTap",
            "designerId": "a54ca45b-ed6d-402a-b2bf-aa31ce993387"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#EngFaultReportReason",
                "designer|targetType": "Ext.Container",
                "fn": "onEngFaultReportReasonInitialize",
                "implHandler": [
                    "// 初始化故障原因列表滑动操作",
                    "var partsList = Ext.getCmp('Reason_List');",
                    "partsList.setPlugins(",
                    "    [",
                    "        {",
                    "            xclass: 'ux.SlideActions',",
                    "            openPosition: 75,",
                    "            buttons:",
                    "            [",
                    "                // 删除按钮",
                    "                {",
                    "                    xtype: 'button',",
                    "                    baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                    text: '<i class=\"fa fa-lg fa-trash-o\"></i>',",
                    "                    listeners: {",
                    "                        tap: function(button, e){",
                    "                            e.stopPropagation();",
                    "                            return false;",
                    "                        },",
                    "                        scope: this",
                    "                    },",
                    "                    handler: function(button, e) {",
                    "                        partsList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                        partsList.getStore().remove(button.getRecord());",
                    "                    }",
                    "                }",
                    "            ]",
                    "        }",
                    "    ]",
                    ");"
                ],
                "name": "initialize"
            },
            "name": "onEngFaultReportReasonInitialize",
            "designerId": "1b248330-374e-4ad3-a7d7-d93a99ff7050"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#EngFaultReport_ListParts",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFaultReport_ListPartsTap",
                "implHandler": [
                    "viewUtil.goNext('Engineer.EngFaultReportParts',{record:record,index:index});"
                ],
                "name": "itemtap"
            },
            "name": "onEngFaultReport_ListPartsTap",
            "designerId": "cf59031e-262e-40ae-86bb-00fd7fe39f59"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFaultReportParts",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFaultReportPartsInitialize",
                "implHandler": [
                    "var taskrecord = component.initialConfig.parm.record;",
                    "var index = component.initialConfig.parm.index;",
                    "console.log(index+'____');",
                    "",
                    "if(taskrecord){",
                    "    Ext.getCmp('form_sx_reportdetail_trplist').setRecord(taskrecord);",
                    "}",
                    "if(index!==undefined){",
                    "    Ext.getCmp('reportpart_index').setValue(index);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFaultReportPartsInitialize",
            "designerId": "072afbbe-ff58-445a-b176-4f8037b96b44"
        }
    ]
}