{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Engineer.EngFaultController"
    },
    "name": "MyController",
    "designerId": "7321827a-2dac-4ecb-95dd-9ac82fb2257e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 故障业务 标签 **********",
                    ""
                ],
                "designer|controlQuery": "container#EngFault",
                "designer|targetType": "Ext.Container",
                "fn": "onEngFaultInitialize",
                "implHandler": [
                    "var me = this;",
                    "//this.doEngFault_LoadFaultList();",
                    "faultCurPage = 0;//全局变量",
                    "reportCurPage = 0;",
                    "pagesize = 20;",
                    "Ext.getCmp('EngFault_ListHotline').getStore().removeAll();",
                    "Ext.getCmp('EngFault_ListReport').getStore().removeAll();",
                    "// 初始化下拉刷新、滑动按钮插件",
                    "var faultList = Ext.getCmp('EngFault_ListHotline');",
                    "faultList.setPlugins(",
                    "    [",
                    "        {",
                    "            autoSnapBack: false,",
                    "            lastUpdatedText: '上次刷新:&nbsp;',",
                    "            loadedText: '已刷新',",
                    "            loadingText: '正在刷新故障任务...',",
                    "            pullText: '下拉刷新...',",
                    "            releaseText: '放开开始刷新...',",
                    "            type: 'pullrefresh',",
                    "            listeners : {",
                    "                latestfetched : function() {",
                    "//                     faultCurPage=1;",
                    "                    me.doEngFault_LoadFaultList(",
                    "                        1,",
                    "                        pagesize,",
                    "                        '',",
                    "                        'refresh'",
                    "                    );",
                    "                }",
                    "            }",
                    "        },",
                    "        // 以下滑动按钮插件应从EngHomeController的onEngHomeInitial()中复制！",
                    "        {",
                    "            xclass: 'ux.SlideActions',",
                    "            openPosition: 150,",
                    "            buttons:",
                    "            [",
                    "                // 按钮1",
                    "                {",
                    "                    xtype: 'button',",
                    "                    baseCls: 'x-button liftnet-list-button liftnet-bgColor-blue',",
                    "                    text: '1',",
                    "                    initial: function(button) {",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_InitialNextStateButton(button, 0);",
                    "                    },",
                    "                    listeners: {",
                    "                        tap: function(button, e){",
                    "                            e.stopPropagation();",
                    "                            return false;",
                    "                        },",
                    "                        scope: this",
                    "                    },",
                    "                    handler: function(button, e) {",
                    "                        faultList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_Process({",
                    "                            record: button.getRecord(),",
                    "                            operationIndex: 0",
                    "                        });",
                    "                    },",
                    "                    width:200",
                    "                },",
                    "                // 按钮2",
                    "                {",
                    "                    xtype: 'button',",
                    "                    baseCls: 'x-button liftnet-list-button liftnet-bgColor-green',",
                    "                    text: '2',",
                    "                    initial: function(button) {",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_InitialNextStateButton(button, 1);",
                    "                    },",
                    "                    listeners: {",
                    "                        tap: function(button, e){",
                    "                            e.stopPropagation();",
                    "                            return false;",
                    "                        },",
                    "                        scope: this",
                    "                    },",
                    "                    handler: function(button, e) {",
                    "                        faultList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_Process({",
                    "                            record: button.getRecord(),",
                    "                            operationIndex: 1",
                    "                        });",
                    "                    }",
                    "                },",
                    "                // 按钮3",
                    "                {",
                    "                    xtype: 'button',",
                    "                    baseCls: 'x-button liftnet-list-button liftnet-bgColor-dark',",
                    "                    text: '3',",
                    "                    initial: function(button) {",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_InitialNextStateButton(button, 2);",
                    "                    },",
                    "                    listeners: {",
                    "                        tap: function(button, e){",
                    "                            e.stopPropagation();",
                    "                            return false;",
                    "                        },",
                    "                        scope: this",
                    "                    },",
                    "                    handler: function(button, e) {",
                    "                        faultList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                        doEngFault_Process({",
                    "                            record: button.getRecord(),",
                    "                            operationIndex: 2",
                    "                        });",
                    "                    }",
                    "                }",
                    "            ]",
                    "        }",
                    "    ]",
                    ");",
                    "",
                    "var reportList = Ext.getCmp('EngFault_ListReport');",
                    "reportList.setPlugins(",
                    "    [",
                    "        {",
                    "            autoSnapBack: false,",
                    "            lastUpdatedText: '上次刷新:&nbsp;',",
                    "            loadedText: '已刷新',",
                    "            loadingText: '正在刷新故障报告书...',",
                    "            pullText: '下拉刷新...',",
                    "            releaseText: '放开开始刷新...',",
                    "            type: 'pullrefresh',",
                    "            listeners : {",
                    "                latestfetched : function() {",
                    "//                     liftnet.app.getController('Engineer.EngFaultReportController').",
                    "                    reportCurPage = 1;",
                    "                    me.doEngFault_LoadReportList(",
                    "                        reportCurPage,",
                    "                        pagesize,",
                    "                        '',",
                    "                        'refresh'",
                    "                    );",
                    "                }",
                    "            }",
                    "        },",
                    "    ]",
                    ");",
                    "",
                    "//监听滑动结束事件",
                    "/*var faultScroller = faultList.getScrollable().getScroller();",
                    "faultScroller.on('scrollend',function(scroll, x, y, eOpts){",
                    "    if(faultCurPage===0){",
                    "        return;",
                    "     }",
                    "    //滑动到底部加载更多",
                    "    if(y+faultScroller.getContainerSize().y==faultScroller.getSize().y){",
                    "        console.log('loadmore');",
                    "        loadMask.show();",
                    "        var scrollparm = {",
                    "            scroller:faultScroller,",
                    "            x:x,",
                    "            y:y+95//Item的高度",
                    "        };",
                    "        var keyword = Ext.getCmp('Enfault_Search').getValue();",
                    "        if(!keyword){",
                    "            keyword='';",
                    "        }",
                    "        me.doEngFault_LoadFaultList(",
                    "            ++faultCurPage,",
                    "            pagesize,",
                    "            keyword,",
                    "            'loadmore',",
                    "            scrollparm",
                    "        );",
                    "    }",
                    "});*/",
                    "",
                    "//更多按钮",
                    "var faultScroller = faultList.getScrollable().getScroller();",
                    "var x = faultScroller._containerSize.x;",
                    "var y = faultList.getHeight();",
                    "Ext.getCmp('EnFault_More').on('tap',function(){",
                    "    console.log('loadmore');",
                    "    loadMask.show();",
                    "    var scrollparm = {",
                    "        scroller:faultScroller,",
                    "        x:x,",
                    "        faultCurPage:faultCurPage",
                    "    };",
                    "    var keyword = Ext.getCmp('Enfault_Search').getValue();",
                    "    if(!keyword){",
                    "        keyword='';",
                    "    }",
                    "    me.doEngFault_LoadFaultList(",
                    "        ++faultCurPage,",
                    "        pagesize,",
                    "        keyword,",
                    "        'loadmore',",
                    "        scrollparm",
                    "    );",
                    "    loadMask.hide();",
                    "});",
                    "",
                    "",
                    "",
                    "//监听滑动结束事件",
                    "var reportScroller = reportList.getScrollable().getScroller();",
                    "reportScroller.on('scrollend',function(scroll, x, y, eOpts){",
                    "    if(reportCurPage===0){",
                    "        return;",
                    "     }",
                    "    //滑动到底部加载更多",
                    "    if(y+reportScroller.getContainerSize().y==reportScroller.getSize().y){",
                    "        console.log('loadmore');",
                    "        loadMask.show();",
                    "        var scrollparm = {",
                    "            scroller:reportScroller,",
                    "            x:x,",
                    "            y:y+80//Item的高度+Tpl样式中各种边距",
                    "        };",
                    "        var keyword = Ext.getCmp('EngReport_Search').getValue();",
                    "        if(!keyword){",
                    "            keyword='';",
                    "        }",
                    "        me.doEngFault_LoadReportList(",
                    "            ++reportCurPage,",
                    "            pagesize,",
                    "            keyword,",
                    "            'loadmore',",
                    "            scrollparm);",
                    "    }",
                    "});",
                    "",
                    "/**var f1 = Ext.getCmp('EngFault_date1');",
                    "var f2 = Ext.getCmp('EngFault_date2');",
                    "f1.suspendEvents();",
                    "f2.suspendEvents();",
                    "f1.setValue(new Date());",
                    "f2.setValue(new Date());",
                    "f1.resumeEvents(true);",
                    "f2.resumeEvents(true);*/",
                    "",
                    "f1 = Ext.getCmp('EngFaultReport_date1');",
                    "f2 = Ext.getCmp('EngFaultReport_date2');",
                    "f1.suspendEvents();",
                    "f2.suspendEvents();",
                    "f1.setValue(new Date());",
                    "f2.setValue(new Date());",
                    "f1.resumeEvents(true);",
                    "f2.resumeEvents(true);",
                    "",
                    "//初始化刷新",
                    "me.doEngFault_LoadFaultList(",
                    "                        1,",
                    "                        pagesize,",
                    "                        '',",
                    "                        'refresh'",
                    "                    );",
                    "",
                    "me.doEngFault_LoadReportList(",
                    "            1,",
                    "            pagesize,",
                    "            '',",
                    "            'refresh'",
                    "            );"
                ],
                "name": "initialize"
            },
            "name": "onEngFaultInitialize",
            "designerId": "c80aae99-370f-4a87-a166-5ed6b760149b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "datepickerfield#EngFault_date1",
                "designer|params": [
                    "datepickerfield",
                    "newDate",
                    "oldDate",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.DatePicker",
                "fn": "onEngFault_date1Change",
                "implHandler": [
                    "this.doEngFault_LoadFaultList(1,20,'','refresh');"
                ],
                "name": "change"
            },
            "name": "onEngFault_date1Change",
            "designerId": "bf9366fb-b7c6-49d4-ae49-48f271f85391"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultRedeployed_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultRedeployed_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultRedeployed_BtnReturnTap",
            "designerId": "ed13fc83-5982-446d-bf20-93ebe7a3557f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "datepickerfield#EngFault_date2",
                "designer|params": [
                    "datepickerfield",
                    "newDate",
                    "oldDate",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.DatePicker",
                "fn": "onEngFault_date2Change",
                "implHandler": [
                    "this.doEngFault_LoadFaultList(1,20,'','refresh');"
                ],
                "name": "change"
            },
            "name": "onEngFault_date2Change",
            "designerId": "b7e21cce-85b6-4418-8631-32dab3cd93e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 故障处理 **********",
                    ""
                ],
                "designer|controlQuery": "list#EngFault_ListHotline",
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.dataview.List",
                "fn": "onEngFault_ListHotlineItemTap",
                "implHandler": [
                    "// 进入“编辑受信单”或“故障处理”明细页面",
                    "var state = record.get('state');",
                    "if(state==='待分配') {",
                    "    viewUtil.goNext('Engineer.EngFaultAdd', {record: record});",
                    "} else {",
                    "    viewUtil.goNext('Engineer.EngFaultAccept', {record: record});",
                    "}"
                ],
                "name": "itemtap"
            },
            "name": "onEngFault_ListHotlineItemTap",
            "designerId": "fe2a1db3-356d-4f7e-8f00-bd7aeed302d4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFaultAccept",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFaultAcceptInitialize",
                "implHandler": [
                    "",
                    "        // 受信单操作 - 退单、出发、到场、解困、拍照、扫描、完工",
                    "        loadMask.show();",
                    "",
                    "        console.log('----------');",
                    "        var me = this;",
                    "        var userid = global.getUserId();",
                    "        var now = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "        var position = map.getLocation().addr;",
                    "        if(!position || position==='') position = '(未知位置)';",
                    "",
                    "        var taskrecord = component.initialConfig.parm.record; // 待办记录",
                    "        ",
                    "        console.log('task:');",
                    "        console.log(taskrecord);",
                    "        var trno = \"\";",
                    "        var nextstate = \"\";",
                    "        var state = \"\";",
                    "        if(taskrecord){",
                    "        \ttrno = taskrecord.get('trno'); // 单号",
                    "        \tnextstate = taskrecord.get('nextstate');//操作按钮",
                    "        \tstate = taskrecord.get('state');",
                    "        }else{",
                    "        \ttrno = component.initialConfig.parm.trno;",
                    "        \tnextstate = component.initialConfig.parm.nextstate;",
                    "        \tstate = component.initialConfig.parm.state;",
                    "        }",
                    "",
                    "        var button1 = Ext.getCmp('EngFaultAccept_Btn1');",
                    "        var button2 = Ext.getCmp('EngFaultAccept_Btn2');",
                    "        var button3 = Ext.getCmp('EngFaultAccept_Btn3');",
                    "        var panel = Ext.getCmp('EngFaultAccept_PnlOperation');",
                    "        button1.setHidden(true);",
                    "        button2.setHidden(true);",
                    "        button3.setHidden(true);",
                    "        panel.setHidden(true);",
                    "",
                    "        var pnlDepart = Ext.getCmp('EngFaultAccept_PnlDepart');//出发",
                    "        //var pnlArrive = Ext.getCmp('EngFaultAccept_PnlArrive');//到场",
                    "        //var pnlEscape = Ext.getCmp('EngFaultAccept_PnlEscape');//解困",
                    "        var pnlFinish = Ext.getCmp('EngFaultAccept_PnlFinish');//完工",
                    "        var btnDepart = Ext.getCmp('EngFaultAccept_BtnDepart');",
                    "        //var btnArrive = Ext.getCmp('EngFaultAccept_BtnArrive');",
                    "        //var btnEscape = Ext.getCmp('EngFaultAccept_BtnEscape');",
                    "        var btnFinish = Ext.getCmp('EngFaultAccept_BtnFinish');",
                    "        btnDepart.on('tap', function() {",
                    "            me.doEngFault_Process({",
                    "                record: taskrecord, operationIndex: '出发',",
                    "                fn: function() { viewUtil.goLast(); }",
                    "            });",
                    "        });",
                    "        /*btnArrive.on('tap', function() {",
                    "            me.doEngFault_Process({",
                    "                record: taskrecord, operationIndex: '到场',",
                    "                fn: function() { viewUtil.goLast(); }",
                    "            });",
                    "        });",
                    "        btnEscape.on('tap', function() {",
                    "            me.doEngFault_Process({",
                    "                record: taskrecord, operationIndex: '解困',",
                    "                fn: function() { viewUtil.goLast(); }",
                    "            });",
                    "        });*/",
                    "        btnFinish.on('tap', function() {",
                    "            me.doEngFault_Process({",
                    "                record: taskrecord, operationIndex: '完工',",
                    "                fn: function() { viewUtil.goLast(); }",
                    "            });",
                    "        });",
                    "",
                    "",
                    "        // 初始化下拉选择项目",
                    "        dataUtil.createStore('common_sxsourcelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "        dataUtil.createStore('common_getdeptlist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "",
                    "        //当状态为未接收时调用受信接收查看接口",
                    "        if(state==='未接收'){",
                    "            console.log('调用受信接收查看接口');",
                    "            var store3 = dataUtil.createStore('sx_sxReceivedetail');",
                    "            store3.loadDat(",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    var record = store3.getData().get(0);",
                    "                    console.log('----后台获取信息start----');",
                    "                    console.log(record);",
                    "                    console.log('----后台获取信息end----');",
                    "                    ",
                    "                    Ext.getCmp('form_sx_sxdetail').setRecord(record);",
                    "",
                    "                    var AcceptMap_lng = record.get('flon');//完工经度",
                    "                    var AcceptMap_lat = record.get('flat');//完工纬度",
                    "                    var ftime = record.get('ftime');//完工时间",
                    "                    var taccepttime = record.get('taccepttime');//接收时间",
                    "                    var faddr = record.get('faddr');//完工地址",
                    "",
                    "                    var  requesttype =  record.get('requesttype');//类型",
                    "                    var requesttypename = '';",
                    "                    if(requesttype=='1'){",
                    "                        requesttypename = '即时';",
                    "                    }else if(requesttype=='0'){",
                    "                        requesttypename = '补录';",
                    "                    }",
                    "",
                    "                    Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            requesttype:\trequesttypename,",
                    "                        });",
                    "",
                    "                    var assignuserJSON = record.get('assignuser');",
                    "                    if(assignuserJSON!==''){",
                    "                        console.log(assignuserJSON.length);",
                    "                        var assignuserStr = '';",
                    "                        var assignuser = '';",
                    "                        for(var i=0;i<assignuserJSON.length;i++){",
                    "                            var Assignuser = assignuserJSON[i];",
                    "                            if(i!==0){",
                    "                                assignuserStr+=',';",
                    "                                assignuser+=',';",
                    "                            }",
                    "                            assignuserStr+=assignuserJSON[i].username+'('+assignuserJSON[i].storagename+')';",
                    "                            assignuser+=assignuserJSON[i].userid+'_'+assignuserJSON[i].storageid+'_'+assignuserJSON[i].linkphone+'_';",
                    "                        }",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            assignuserStr:\tassignuserStr,",
                    "                            assignuser:assignuser,",
                    "                        });",
                    "                    }",
                    "",
                    "",
                    "                    var istrap = record.get('istrap');",
                    "                    var isrunning = record.get('isrunning');",
                    "                    if(isrunning=='Y'){",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            isrunning:\t1",
                    "                        });",
                    "                    }else{",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            isrunning:\t0",
                    "                        });",
                    "                    }",
                    "",
                    "                    pnlDepart.setHidden(true);",
                    "                    pnlFinish.setHidden(true);",
                    "                    btnDepart.setHidden(true);",
                    "                    btnFinish.setHidden(true);",
                    "",
                    "",
                    "                    // 没有进度则隐藏进度面板",
                    "                    if(pnlDepart.getHidden()&&pnlFinish.getHidden()) {",
                    "                        Ext.getCmp('EngFaultAccept_TabProcess').destroy();",
                    "                    }",
                    "",
                    "                    Ext.getCmp('EngFaultAccept_TabReport').destroy();",
                    "                    Ext.getCmp('EngFaultAccept_TabParts').destroy();",
                    "",
                    "                    button1.record = record;",
                    "                    button2.record = record;",
                    "                    button3.record = record;",
                    "",
                    "                    if(record.get('nextstate').length>0){",
                    "                        if(record.get('nextstate')[0].name){",
                    "                            button1.setHidden(false);",
                    "                            button1.setText(record.get('nextstate')[0].name);",
                    "                        }",
                    "                        if(record.get('nextstate')[1].name){",
                    "                            button2.setHidden(false);",
                    "                            button2.setText(record.get('nextstate')[1].name);",
                    "                        }",
                    "                        if(record.get('nextstate')[2].name){",
                    "                            button3.setHidden(false);",
                    "                            button3.setText(record.get('nextstate')[2].name);",
                    "                        }",
                    "",
                    "                    }",
                    "                    // 没有操作按钮时隐藏明细页面按钮底板",
                    "                    panel.setHidden(button1.getHidden()&&button2.getHidden()&&button3.getHidden());",
                    "",
                    "",
                    "",
                    "                },",
                    "                function(){",
                    "                    loadMask.hide();",
                    "                    Ext.toast('读取受信资料失败！');",
                    "                    viewUtil.goLast();",
                    "                },",
                    "                trno",
                    "                );",
                    "",
                    "        }else{",
                    "            console.log('调用受信明细接口');",
                    "            // 取出故障明细数据",
                    "            var store2 = dataUtil.createStore('sx_sxdetail');",
                    "            store2.loadDat(",
                    "                function() {",
                    "                    // 显示受信单数据",
                    "                    var record = store2.getData().get(0);",
                    "                    console.log('----后台获取信息start----');",
                    "                    console.log(record);",
                    "                    console.log('----后台获取信息end----');",
                    "",
                    "                    // 测试数据(开始)",
                    "                    if(!global.isWorklight()) {",
                    "                        //record.set('istrap', taskrecord.get('istrap').indexOf('困')>0? '1':'0');",
                    "                        //record.set('isrunning', taskrecord.get('isrunning').indexOf('是')>0? '1':'0');",
                    "                        record.set('requesttype',record.get('requesttype')==1?'即时':'补录');",
                    "",
                    "                        switch(taskrecord.get('state')) {",
                    "                            case '已完工':",
                    "                                record.set('ftime', '2015-12-01 14:35');",
                    "                                break;",
                    "",
                    "                            /*case '维修中':",
                    "                                record.set('atime', '2015-12-01 12:25');",
                    "                                record.set('htime', '2015-12-01 12:30');",
                    "                                break;",
                    "",
                    "                            case '救援中':",
                    "                                record.set('atime', '2015-12-01 12:25');",
                    "                                break;*/",
                    "",
                    "                            case '维修中':",
                    "                                record.set('stime', '2015-12-01 12:00');",
                    "                                break;",
                    "                        }",
                    "                    }",
                    "",
                    "",
                    "                    //测试数据(完)",
                    "                    console.log(Ext.getCmp('form_sx_sxdetail'));",
                    "",
                    "                    Ext.getCmp('form_sx_sxdetail').setRecord(record);",
                    "",
                    "                    var AcceptMap_lng = record.get('flon');//完工经度",
                    "                    var AcceptMap_lat = record.get('flat');//完工纬度",
                    "                    var ftime = record.get('ftime');//完工时间",
                    "                    var taccepttime = record.get('taccepttime');//接收时间",
                    "                    var faddr = record.get('faddr');//完工地址",
                    "",
                    "                    var  requesttype =  record.get('requesttype');//类型",
                    "                    var requesttypename = '';",
                    "                    if(requesttype=='1'){",
                    "                        requesttypename = '即时';",
                    "                    }else if(requesttype=='0'){",
                    "                        requesttypename = '补录';",
                    "                    }",
                    "",
                    "                    Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            requesttype:\trequesttypename,",
                    "                        });",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "                    var assignuserJSON = record.get('assignuser');",
                    "",
                    "                    if(assignuserJSON!==''){",
                    "                        console.log(assignuserJSON.length);",
                    "                        var assignuserStr = '';",
                    "                        var assignuser = '';",
                    "                        for(var i=0;i<assignuserJSON.length;i++){",
                    "                            var Assignuser = assignuserJSON[i];",
                    "                            if(i!==0){",
                    "                                assignuserStr+=',';",
                    "                                assignuser+=',';",
                    "                            }",
                    "                            assignuserStr+=assignuserJSON[i].username+'('+assignuserJSON[i].storagename+')';",
                    "                            assignuser+=assignuserJSON[i].userid+'_'+assignuserJSON[i].storageid+'_'+assignuserJSON[i].linkphone+'_';",
                    "                        }",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            assignuserStr:\tassignuserStr,",
                    "                            assignuser:assignuser,",
                    "                        });",
                    "                    }",
                    "",
                    "",
                    "                    var istrap = record.get('istrap');",
                    "                    var isrunning = record.get('isrunning');",
                    "                    if(isrunning=='Y'){",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            isrunning:\t1",
                    "                        });",
                    "                    }else{",
                    "                        Ext.getCmp('form_sx_sxdetail').setValues({",
                    "                            isrunning:\t0",
                    "                        });",
                    "                    }",
                    "",
                    "                    // 时间线节点数据",
                    "                    Ext.getCmp('G_SetOutUser').setHtml('<span></span>'+record.get('suser'));",
                    "                    Ext.getCmp('G_SetOutDate').setHtml('<span></span>'+record.get('stime'));",
                    "                    Ext.getCmp('G_SetOutAddress').setHtml('<span></span>'+record.get('sreamrk'));",
                    "",
                    "                    /*Ext.getCmp('G_ArriveUser').setHtml('<span></span>'+record.get('auser'));",
                    "                    Ext.getCmp('G_ArriveDate').setHtml('<span></span>'+record.get('atime'));",
                    "                    Ext.getCmp('G_ArriveAddress').setHtml('<span></span>'+record.get('areamrk'));",
                    "",
                    "                    Ext.getCmp('G_EscapeUser').setHtml('<span></span>'+record.get('huser'));",
                    "                    Ext.getCmp('G_EscapeDate').setHtml('<span></span>'+record.get('htime'));",
                    "                    Ext.getCmp('G_EscapeAddress').setHtml('<span></span>'+record.get('hreamrk'));*/",
                    "",
                    "                    Ext.getCmp('G_FinishUser').setHtml('<span></span>'+record.get('fuser'));",
                    "                    Ext.getCmp('G_FinishDate').setHtml('<span></span>'+record.get('ftime'));",
                    "                    Ext.getCmp('G_FinishAddress').setHtml('<span></span>'+record.get('fremark'));",
                    "",
                    "",
                    "                    // 时间线 - 根据状态显示进度块及操作按钮",
                    "",
                    "                    switch(taskrecord.get('state')) {",
                    "                        case '待分配':",
                    "                        case '关闭':",
                    "                             //pnlDepart.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            //pnlFinish.setHidden(true);",
                    "                            //btnFinish.setHidden(true);",
                    "",
                    "",
                    "                            Ext.getCmp('G_FinishDate').setHtml('<span></span>'+ftime);",
                    "                            Ext.getCmp('G_SetOutDate').setHtml('<span></span>'+taccepttime);",
                    "",
                    "                            btnFinish.setHidden(true);//隐藏完工按钮",
                    "",
                    "                            Ext.getCmp('EngFaultAccept_Photo').setHidden(true);//隐藏照相区域",
                    "                            Ext.getCmp('EngFaultAccept_Map').setHidden(true);//隐藏地图区域",
                    "",
                    "",
                    "",
                    "                            break;",
                    "                        case '已退回':",
                    "                            pnlDepart.setHidden(true);",
                    "                            pnlFinish.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnFinish.setHidden(true);",
                    "                            break;",
                    "                        case '未接收':",
                    "                            pnlDepart.setHidden(true);",
                    "                            pnlFinish.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnFinish.setHidden(true);",
                    "                            break;",
                    "",
                    "                        case '维修中':",
                    "                            //pnlDepart.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            //pnlFinish.setHidden(true);",
                    "                            //btnFinish.setHidden(true);",
                    "",
                    "",
                    "                            Ext.getCmp('AcceptMap_lng').setValue(AcceptMap_lng);",
                    "                            Ext.getCmp('AcceptMap_lat').setValue(AcceptMap_lat);",
                    "                            Ext.getCmp('G_FinishDate').setHtml('<span></span>'+ftime);",
                    "                            Ext.getCmp('G_SetOutDate').setHtml('<span></span>'+taccepttime);",
                    "",
                    "                            if(nextstate===null||nextstate.length<=0 || nextstate[0].name!=='完成'){",
                    "                                btnFinish.setHidden(true);//隐藏完工按钮",
                    "",
                    "                                Ext.getCmp('EngFaultAccept_Photo').setHidden(true);//隐藏照相区域",
                    "                                Ext.getCmp('EngFaultAccept_Map').setHidden(true);//隐藏地图区域",
                    "",
                    "                            }",
                    "",
                    "",
                    "                            break;",
                    "",
                    "                        case '未出发':",
                    "                            pnlDepart.setHidden(!true);",
                    "                            pnlFinish.setHidden(true);",
                    "                            btnDepart.setHidden(!true);",
                    "                            btnFinish.setHidden(true);",
                    "                            Ext.getCmp('G_SetOutUser').setHtml('<span></span>'+userid);",
                    "                            Ext.getCmp('G_SetOutDate').setHtml('<span></span>'+now);",
                    "                            Ext.getCmp('G_SetOutAddress').setHtml('<span></span>'+position);",
                    "                            break;",
                    "",
                    "                        case '路途中':",
                    "                            pnlDepart.setHidden(!true);",
                    "                            pnlArrive.setHidden(!true);",
                    "                            pnlEscape.setHidden(true);",
                    "                            pnlFinish.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnArrive.setHidden(!true);",
                    "                            btnEscape.setHidden(true);",
                    "                            btnFinish.setHidden(true);",
                    "                            Ext.getCmp('G_ArriveUser').setHtml('<span></span>'+userid);",
                    "                            Ext.getCmp('G_ArriveDate').setHtml('<span></span>'+now);",
                    "                            Ext.getCmp('G_ArriveAddress').setHtml('<span></span>'+position);",
                    "                            break;",
                    "",
                    "                        case '维修中2':",
                    "                            pnlDepart.setHidden(!true);",
                    "                            pnlArrive.setHidden(!true);",
                    "                            pnlEscape.setHidden(istrap==='0');",
                    "                            pnlFinish.setHidden(!true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnArrive.setHidden(true);",
                    "                            btnEscape.setHidden(true);",
                    "                            btnFinish.setHidden(!true);",
                    "                            Ext.getCmp('G_FinishUser').setHtml('<span></span>'+userid);",
                    "                            Ext.getCmp('G_FinishDate').setHtml('<span></span>'+now);",
                    "                            Ext.getCmp('G_FinishAddress').setHtml('<span></span>'+position);",
                    "                            break;",
                    "",
                    "                        case '救援中':",
                    "                            pnlDepart.setHidden(!true);",
                    "                            pnlFinish.setHidden(true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnFinish.setHidden(true);",
                    "                            break;",
                    "",
                    "                        case '已完工':",
                    "                            pnlDepart.setHidden(!true);",
                    "                            pnlFinish.setHidden(!true);",
                    "                            btnDepart.setHidden(true);",
                    "                            btnFinish.setHidden(true);",
                    "                            Ext.getCmp('G_FinishAddress').setHidden(false);",
                    "                            Ext.getCmp('AcceptMap_lng').setValue(AcceptMap_lng);",
                    "                            Ext.getCmp('AcceptMap_lat').setValue(AcceptMap_lat);",
                    "                            Ext.getCmp('G_FinishDate').setHtml('<span></span>'+ftime);",
                    "                            Ext.getCmp('G_FinishAddress').setHtml('<span></span>'+faddr);",
                    "                            Ext.getCmp('G_SetOutDate').setHtml('<span></span>'+taccepttime);",
                    "",
                    "                            //隐藏地点微调",
                    "                            Ext.getCmp('EngFaultAccept_Date').setHidden(true);",
                    "                            Ext.getCmp('Container_AcceptMap').setHidden(true);",
                    "",
                    "                             //显示照片",
                    "                            var pictures = record.get('pictures');//照片信息",
                    "                            if(pictures!==null&&pictures.length>0){",
                    "                                for(var z=0;z<pictures.length;z++){",
                    "                                    var index = z+1;",
                    "                                    var ImgID = 'EngFaultAccept_photo_'+index;",
                    "                                    var pictureBase64 = pictures[z].pic;",
                    "                                    var ImgSrc = 'data:image/jpeg;base64,' +pictureBase64;",
                    "",
                    "                                    Ext.getCmp(ImgID).setSrc(ImgSrc);",
                    "                                    Ext.getCmp(ImgID).setItemId('EnFaultAccept_photoX');",
                    "                                }",
                    "",
                    "                                //没图片信息就把图片隐藏",
                    "                                for(var k=1;k<7;k++){",
                    "                                    var img = 'EngFaultAccept_photo_'+k;",
                    "                                    var imgsrc = Ext.getCmp(img).getSrc();",
                    "                                    if(imgsrc==='resources/images/camera.png'||imgsrc=='resources/images/notPhoto.png'){",
                    "                                        Ext.getCmp(img).setHidden(true);",
                    "",
                    "                                    }",
                    "                                }",
                    "",
                    "                                //不是获取到6张图片就显示一个照相机的图片按钮功能",
                    "                                /*if(pictures.length!=6){",
                    "                                            var Nextindex = z+1;",
                    "                                            var NextImgID = 'EngFaultAccept_photo_'+Nextindex;",
                    "                                            var NextImgSrc = 'resources/images/camera.png';",
                    "",
                    "                                            Ext.getCmp(NextImgID).setSrc(NextImgSrc);",
                    "                                            Ext.getCmp(NextImgID).setItemId('EngFaultAccept_camera');",
                    "                                        }*/",
                    "",
                    "",
                    "                            }else{",
                    "                                //没图片信息就把图片隐藏",
                    "                                for(var n=1;n<7;n++){",
                    "                                    var imgN = 'EngFaultAccept_photo_'+n;",
                    "                                    Ext.getCmp(imgN).setHidden(true);",
                    "                                }",
                    "                            }",
                    "",
                    "                            Ext.getCmp('AcceptMap_location').setItemId();//禁止地点微调",
                    "",
                    "                            break;",
                    "",
                    "                        default:",
                    "                            Ext.toast('未知的状态：' + taskrecord.get('state'));",
                    "                            break;",
                    "                    }",
                    "",
                    "                    // 根据待办指示决定明细页面操作按钮个数",
                    "                    button1.record = taskrecord;",
                    "                    button2.record = taskrecord;",
                    "                    button3.record = taskrecord;",
                    "",
                    "",
                    "                    console.log(taskrecord.get('state'));",
                    "                    if(taskrecord.get('state')!='维修中'){",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                            doEngFault_InitialNextStateButton(button1, 0);",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                            doEngFault_InitialNextStateButton(button2, 1);",
                    "                        liftnet.app.getController('Engineer.EngFaultController').",
                    "                            doEngFault_InitialNextStateButton(button3, 2);",
                    "                    }",
                    "",
                    "                    // 没有操作按钮时隐藏明细页面按钮底板",
                    "                    panel.setHidden(button1.getHidden()&&button2.getHidden()&&button3.getHidden());",
                    "",
                    "                    // 没有进度则隐藏进度面板",
                    "                    if(pnlDepart.getHidden()&&pnlFinish.getHidden()) {",
                    "                        Ext.getCmp('EngFaultAccept_TabProcess').destroy();",
                    "                    }",
                    "",
                    "                    if(taskrecord.get('state')!='维修中'){",
                    "                        Ext.getCmp('EngFaultAccept_TabReport').destroy();",
                    "                        Ext.getCmp('EngFaultAccept_TabParts').destroy();",
                    "",
                    "                    }else{",
                    "",
                    "                    }",
                    "",
                    "                    /*if(taskrecord.get('state')=='已接收(进行中)'){",
                    "",
                    "                        Ext.getCmp('sxreport_trno').setValue(record.get('trno'));",
                    "                        Ext.getCmp('sxreport_projectname').setValue(record.get('projectname'));",
                    "                        Ext.getCmp('sxreport_unitaddress').setValue(record.get('projectaddress'));",
                    "                        Ext.getCmp('sxreport_incomingman').setValue(record.get('reportor'));",
                    "                        Ext.getCmp('sxreport_incomingphone').setValue(record.get('reportortel'));",
                    "                        Ext.getCmp('sxreport_prono').setValue(record.get('prodno'));",
                    "                        Ext.getCmp('sxreport_istrap').setValue(record.get('istrap'));",
                    "                        Ext.getCmp('sxreport_repairman').setValue(record.get('assignuser'));",
                    "",
                    "",
                    "                    }*/",
                    "",
                    "                    loadMask.hide();",
                    "                },",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    Ext.toast('读取受信资料失败！');",
                    "                    viewUtil.goLast();",
                    "                },",
                    "                trno",
                    "            );",
                    "        }",
                    "",
                    "        //取故障报告明细的数据",
                    "        if(state=='维修中'){",
                    "",
                    "            var BtnSave = true;",
                    "            var BtnSub = true;",
                    "            var store = dataUtil.createStore('sx_sxdetailtoreport');",
                    "",
                    "            store.loadDat(",
                    "                function() {",
                    "                 var record = store.getData().get(0);",
                    "                 console.log('-----------报告明细start-------');",
                    "                 console.log(record);",
                    "                 console.log('-----------报告明细end-------');",
                    "                 Ext.getCmp('form_sx_sxreport').setRecord(record);",
                    "",
                    "                 //原因分析",
                    "                    var analysisStr = '';",
                    "                    var report_analysisStr = '';",
                    "                    var analysis = store.getAt(0).get('analysis');",
                    "                    if(analysis.length>0){",
                    "                        for(var i=0;i<analysis.length;i++){",
                    "                            if(i!==0){",
                    "                                analysisStr+='、';",
                    "                                report_analysisStr+='+';",
                    "                            }",
                    "                            analysisStr+=analysis[i].faultanalysis;",
                    "                            report_analysisStr+=analysis[i].faulttype+'_';",
                    "                            report_analysisStr+=analysis[i].faultcode+'_';",
                    "                            report_analysisStr+=analysis[i].faultanalysis+'_';",
                    "                            report_analysisStr+=analysis[i].ladder;",
                    "                        }",
                    "                    }",
                    "                    Ext.getCmp('form_sx_sxreport').setValues({",
                    "                        analysis\t: analysisStr,",
                    "                        analysisStr : report_analysisStr",
                    "                    });",
                    "",
                    "                    //Ext.getCmp('sxreport_analysis').setValue(analysisStr);",
                    "                    //Ext.getCmp('sxreport_analysisStr').setValue(report_analysisStr);",
                    "",
                    "                    //故障原因",
                    "                    var reasonStr = '';",
                    "                    var report_reasonStr = '';",
                    "                    var reason = store.getAt(0).get('reason');",
                    "                    if(reason.length>0){",
                    "                        for(var j=0;j<reason.length;j++){",
                    "                            if(j!==0){",
                    "                                reasonStr+=',';",
                    "                                report_reasonStr+='&';",
                    "                            }",
                    "                            reasonStr+=reason[j].reasonname;",
                    "                            report_reasonStr+=reason[j].reasonname;",
                    "                        }",
                    "                    }",
                    "",
                    "                    Ext.getCmp('form_sx_sxreport').setValues({",
                    "                        reason\t: reasonStr,",
                    "                        reasonStr : report_reasonStr",
                    "                    });",
                    "",
                    "                    //更换件",
                    "                    Ext.getCmp('SxReport_ListParts').getStore().add(record.get('partslist'));",
                    "",
                    "",
                    "                    //Ext.getCmp('sxreport_reason').setValue(reasonStr);",
                    "                    //Ext.getCmp('sxreport_reasonStr').setValue(report_reasonStr);",
                    "",
                    "                    var nextstate = record.get('nextstate');",
                    "                    if(nextstate===null || nextstate.length<=0){",
                    "                        //把按钮区域隐藏",
                    "                        Ext.getCmp('SxReport_PnlOperation').setHidden(true);",
                    "                        //把更换件的按钮隐藏",
                    "                        Ext.getCmp('SxReportParts_PnlOperation').setHidden(true);",
                    "",
                    "                        //表单只读",
                    "                        var form = Ext.getCmp('form_sx_sxreport');",
                    "                        var fields = form.getFields();",
                    "                        for(var key in fields) {",
                    "                            field = fields[key];",
                    "                            if(field.setReadOnly()){",
                    "                                field.setReadOnly(true);",
                    "                            }",
                    "                            if(field.setItemId()){",
                    "                                field.setItemId();",
                    "                            }",
                    "",
                    "                        }",
                    "",
                    "                    }else{",
                    "                        for(var n=0;n<nextstate.length;n++){",
                    "                            var name=nextstate[n].name;",
                    "                            if(name=='保存'){",
                    "                                BtnSave = false;",
                    "                            }",
                    "                            if(name=='提交'){",
                    "                                BtnSub = false;",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    Ext.getCmp('sxreport_saveBtn').setHidden(BtnSave);",
                    "                    Ext.getCmp('sxreport_submitBtn').setHidden(BtnSub);",
                    "",
                    "                    if(BtnSave && BtnSub){//按钮全隐藏了把区域也隐藏",
                    "                        Ext.getCmp('SxReport_PnlOperation').setHidden(true);",
                    "                        Ext.getCmp('SxReportParts_PnlOperation').setHidden(true);",
                    "                        Ext.getCmp('SxReport_ListParts').suspendEvents();",
                    "",
                    "                    }",
                    "",
                    "",
                    "",
                    "                },",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    Ext.toast('读取报告资料失败！');",
                    "                    viewUtil.goLast();",
                    "                },",
                    "                trno",
                    "            );",
                    "            if(!(BtnSave && BtnSub)){",
                    "            // 初始化更换件列表滑动操作",
                    "                    var partsList = Ext.getCmp('SxReport_ListParts');",
                    "                    partsList.setPlugins(",
                    "                        [",
                    "                            {",
                    "                                xclass: 'ux.SlideActions',",
                    "                                openPosition: 75,",
                    "                                buttons:",
                    "                                [",
                    "                                    // 删除按钮",
                    "                                    {",
                    "                                        xtype: 'button',",
                    "                                        baseCls: 'x-button liftnet-list-button liftnet-bgColor-red',",
                    "                                        text: '<i class=\"fa fa-lg fa-trash-o\"></i>',",
                    "                                        listeners: {",
                    "                                            tap: function(button, e){",
                    "                                                e.stopPropagation();",
                    "                                                return false;",
                    "                                            },",
                    "                                            scope: this",
                    "                                        },",
                    "                                        handler: function(button, e) {",
                    "                                            partsList.fireEvent('hide'); // 隐藏列表的滑动按钮组",
                    "                                            partsList.getStore().remove(button.getRecord());",
                    "                                        }",
                    "                                    }",
                    "                                ]",
                    "                            }",
                    "                        ]",
                    "                    );",
                    "            }",
                    "",
                    "",
                    "        }",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngFaultAcceptInitialize",
            "designerId": "96c748e3-e7b3-4236-9b48-61600571efbe"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAccept_Btn1",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAccept_Btn1Tap",
                "implHandler": [
                    "// 故障处理明细页面 - 按钮1",
                    "this.doEngFault_Process({",
                    "    record: button.record, operationIndex: button.getText(),",
                    "    fn: function() { viewUtil.goLast(); } // 操作后关闭窗口",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_Btn1Tap",
            "designerId": "7a74f081-de85-4c7d-ade9-888b4117736c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAccept_Btn2",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAccept_Btn2Tap",
                "implHandler": [
                    "// 故障处理明细页面 - 按钮2",
                    "this.doEngFault_Process({",
                    "    record: button.record, operationIndex: button.getText(),",
                    "    fn: function() { viewUtil.goLast(); } // 操作后关闭窗口",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_Btn2Tap",
            "designerId": "863daea4-6ff3-44b7-9225-129902848772"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAccept_Btn3",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAccept_Btn3Tap",
                "implHandler": [
                    "// 故障处理明细页面 - 按钮2",
                    "this.doEngFault_Process({",
                    "    record: button.record, operationIndex: button.getText(),",
                    "    fn: function() { viewUtil.goLast(); } // 操作后关闭窗口",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_Btn3Tap",
            "designerId": "aa140652-c727-410b-8710-15595747e1b2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAccept_BtnReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAccept_BtnReturnTap",
                "implHandler": [
                    "// 受信明细 - 返回上页",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_BtnReturnTap",
            "designerId": "d0f73c28-24bc-4bd5-8daf-167bb60be8f5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "",
                    "********** 新增/编辑（含派工、关闭）受信单 **********",
                    ""
                ],
                "designer|controlQuery": "button#EngFault_BtnAdd",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFault_BtnAddTap",
                "implHandler": [
                    "// 右上角新增受信按钮",
                    "viewUtil.goNext('Engineer.EngFaultAdd', {action:'新增', trno:''});"
                ],
                "name": "tap"
            },
            "name": "onEngFault_BtnAddTap",
            "designerId": "aa6004da-3d57-428c-a74c-c8b6fb65d0e4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFaultAdd",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFaultAddInitialize",
                "implHandler": [
                    "// 受信单操作 - 新增、派工、关闭",
                    "loadMask.show();",
                    "",
                    "// 初始化下拉选择项目",
                    "dataUtil.createStore('common_sxsourcelist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "dataUtil.createStore('common_getdeptlist').loadDat(Ext.emptyFn,Ext.emptyFn);",
                    "",
                    "// 初始化数据",
                    "var me = this;",
                    "var form = Ext.getCmp('EngFaultAdd_Form');",
                    "var store;",
                    "var store2;",
                    "var button1 = Ext.getCmp('EngFaultAdd_BtnSave');",
                    "var button2 = Ext.getCmp('EngFaultAdd_BtnAssign');",
                    "var button3 = Ext.getCmp('EngFaultAdd_BtnClose');",
                    "",
                    "if(!component.initialConfig.parm.record) {",
                    "    //先从后台获取到受信单号ID",
                    "    var trno = '';",
                    "    store = dataUtil.createStore('sx_gettrno');",
                    "    store.loadDat(",
                    "        function(tno){",
                    "            trno = tno;",
                    "",
                    "            // 新单",
                    "            store2 = dataUtil.createStore('sx_sxscens');",
                    "            var date_s = Ext.Date.format(new Date(), 'Y-m-d H:i');",
                    "            store2.add({",
                    "                taskid:\t\t\t\t'',\t\t//'任务ID',",
                    "                reportor:\t\t\t'',\t\t//'受信-来电人姓名',",
                    "                reportortel:\t\t'',\t\t//'受信-来电人电话',",
                    "                reportordate:\t\tdate_s,\t//'受信-来电时间',",
                    "                unitname:\t\t\t'',\t\t//'受信-报修单位名称',",
                    "                istrap:\t\t\t\t'0',\t//'受信-是否困人',",
                    "                serviceno:\t\t\t'',\t\t//'受信-电梯服务号',",
                    "                elevatorno:\t\t\t'',\t\t//'受信-电梯工号',",
                    "                addr:\t\t\t\t'',\t\t//'受信-地址',",
                    "                floor:\t\t\t\t1,\t\t//'层',",
                    "                station:\t\t\t1,\t\t//'站',",
                    "                storageid:\t\t\t'',\t\t//'受信-司/站别',",
                    "                elevatorid:\t\t\t'',\t\t//'受信-电梯梯号',",
                    "                calloutfaulttypeid:\t'',\t\t//'受信-故障分类',",
                    "                calloutcontent:\t \t'',\t\t//'受信-报修内容',",
                    "                expectarrivetime:\tdate_s,\t//'受信-客户要求到场时间',",
                    "                remark:\t\t\t\t'',\t\t//'受信-备注',",
                    "                operdate:\t\t\tdate_s,\t//'受信-受理时间',",
                    "                trno:\t\t\t\ttrno,\t\t//'受信-编号（新建为空）',",
                    "                specno:\t\t\t\t'',\t\t//'型号',",
                    "                isapprove:\t\t\t'N',\t//'是否指派N/Y',",
                    "                dutyusername:\t\t'',\t\t//'指派人名',",
                    "                dutyuserid:\t\t\t'',\t\t//'指派人id',",
                    "                linkphone:\t\t\t'',\t\t//'指派人电话',",
                    "                sxly:\t\t\t\t'',\t\t//'受信来源',",
                    "                t_flag:\t\t\t\t'',\t\t//'Y接收/N退回标记',",
                    "                t_acceptby:\t\t\t'',\t\t//'接收/退回人',",
                    "                t_remark:\t\t\t'',\t\t//'接收备注/退回备注/关闭原因',",
                    "                time:\t\t\t\t'',\t\t//'时间',",
                    "                user:\t\t\t\t'',\t\t//'作业员',",
                    "                reamrk:\t\t\t\t'',\t\t//'备注',",
                    "                lon:\t\t\t\t'',\t\t//'经度',",
                    "                lat:\t\t\t\t'',\t\t//'纬度',",
                    "                faulthappentime:\tdate_s,\t//'故障发生时间',",
                    "                //facname:\t\t\t'',",
                    "            });",
                    "            form.setRecord(store2.getAt(0));",
                    "        },",
                    "        function(){",
                    "",
                    "        },{userid:global.getUserId()}",
                    "    );",
                    "",
                    "    // 新单操作：确认",
                    "    button1.setText('确认');",
                    "    button1.setHidden(false);",
                    "    button2.setHidden(true);",
                    "    button3.setHidden(true);",
                    "    loadMask.hide();",
                    "} else {",
                    "    // 旧单",
                    "    var trno = component.initialConfig.parm.record.get('trno');",
                    "    var state = component.initialConfig.parm.record.get('state');",
                    "    var title = Ext.getCmp('EngFaultAdd_LblTitle');",
                    "    Ext.getCmp('EngFaultAdd_Tbar').setTitle(trno);",
                    "    title.setHtml('请稍候...');",
                    "",
                    "    store2 = dataUtil.createStore('sx_sxdetail');",
                    "    store2.loadDat(",
                    "        function() {",
                    "            title.setHtml('热线受信单');",
                    "            form.setRecord(store2.getAt(0));",
                    "            form.setValues({",
                    "                reamrk: store2.getAt(0).get('remark'), // 看懂这句的请微笑；看不懂的请去问后台数据库和接口的程序猿 ^_^ALEX",
                    "                taskid: component.initialConfig.parm.record.get('taskid')",
                    "            });",
                    "",
                    "            var assignuserJSON = store2.getAt(0).get('assignuser');",
                    "",
                    "            if(assignuserJSON!==''){",
                    "                console.log(assignuserJSON.length);",
                    "                var assignuserStr = '';",
                    "                var assignuser = '';",
                    "                for(var i=0;i<assignuserJSON.length;i++){",
                    "                    var Assignuser = assignuserJSON[i];",
                    "                    if(i!==0){",
                    "                        assignuserStr+=',';",
                    "                        assignuser+=',';",
                    "                    }",
                    "                    assignuserStr+=assignuserJSON[i].username+'('+assignuserJSON[i].storagename+')';",
                    "                    assignuser+=assignuserJSON[i].userid+'_'+assignuserJSON[i].storageid+'_'+assignuserJSON[i].linkphone+'_';",
                    "                }",
                    "               form.setValues({",
                    "                    assignuserStr:\tassignuserStr,",
                    "                    assignuser:assignuser,",
                    "                });",
                    "            }",
                    "",
                    "",
                    "",
                    "            // 根据待办指示决定明细页面操作按钮个数",
                    "            //button1.setText('修改'); // 提供暂存功能",
                    "            button1.setHidden(true);",
                    "            button2.record = component.initialConfig.parm.record;",
                    "            button3.record = component.initialConfig.parm.record;",
                    "            me.doEngFault_InitialNextStateButton(button2, 0);",
                    "            me.doEngFault_InitialNextStateButton(button3, 1);",
                    "            /* 使用上面标准做法，废弃用状态决定操作的方式：",
                    "            Ext.getCmp('EngFaultAdd_BtnSave').setText('修改');",
                    "            if(state==='已退回') {",
                    "                Ext.getCmp('EngFaultAdd_BtnClose').setText('关闭');",
                    "            }",
                    "            */",
                    "            loadMask.hide();",
                    "        },",
                    "        function() {",
                    "            loadMask.hide();",
                    "            Ext.toast('未能找到受信单资料，请稍候再试！');",
                    "            viewUtil.goLast();",
                    "        },",
                    "        trno",
                    "    );",
                    "}",
                    "",
                    "// 特殊操作直接滚动到页末",
                    "var action = component.initialConfig.parm.action;",
                    "if(action==='派工' || action==='关闭') {",
                    "    var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "        Ext.getCmp('EngFaultAdd_Form').getScrollable().getScroller().scrollToEnd(true);",
                    "        task.cancel();",
                    "    });",
                    "    task.delay(300);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFaultAddInitialize",
            "designerId": "56994cd1-3f7c-4a6a-ad6c-ec1b622f1ec7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_reportortel",
                "designer|params": [
                    "textfield",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_reportortelChange",
                "implHandler": [
                    "// 新增受信 - 电话号码",
                    "if(!newValue) return;",
                    "",
                    "if(!global.isTelNo(newValue)) {",
                    "    textfield.suspendEvents();",
                    "    Ext.toast('电话号码格式不正确！');",
                    "    textfield.resumeEvents(false);",
                    "}"
                ],
                "name": "change"
            },
            "name": "onEngFaultAdd_reportortelChange",
            "designerId": "d7cf5d0f-8b24-4a21-a43e-bd24e5dddeb8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_prodno",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_prodnoFocus",
                "implHandler": [
                    "// 新增受信 - 设备注册码（服务号）",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{prodno}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_getserviceno',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.serviceno = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                prodno: record",
                    "            });",
                    "        } else {",
                    "            console.log(record.get('stage'));",
                    "            console.log(record.get('floor'));",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                prodno: record.get('prodno'),",
                    "                floor: record.get('floor'),",
                    "                station: record.get('stage'),",
                    "                door:record.get('door'),",
                    "                elevatorno: record.get('elevatorno'),",
                    "                facid: record.get('facid'),",
                    "                facname:record.get('facname'),",
                    "                modelid:record.get('modelid'),",
                    "                modelname:record.get('modelname'),",
                    "                locationremark:record.get('liftloaction'),",
                    "                contractid: record.get('contractid'),",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_prodnoFocus",
            "designerId": "8ad3612f-d332-4858-83a0-90b713a98c66"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_facname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_facnameFocus",
                "implHandler": [
                    "// 新增受信 - 品牌",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{facname}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_getfacname',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        facname: textfield.getValue(),",
                    "        pageno: 0,",
                    "        pagelen: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.facname = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                facname: record",
                    "            });",
                    "        } else {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                facname: record.get('facname')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_facnameFocus",
            "designerId": "e6b709c8-567c-437a-bcdb-20ddd11720dd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_sxly",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_sxlyFocus",
                "implHandler": [
                    "// 新增受信 - 受信来源",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{trresourcename}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_sxsourcelist',",
                    "    storeparm: {",
                    "        userid: global.getUserId()",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                sxly: record",
                    "            });",
                    "        } else {",
                    "            var key = record.get('trresourceid');",
                    "            var value = record.get('trresourcename');",
                    "            textfield.setOptions({text:value, value:key});",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                sxly: key",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_sxlyFocus",
            "designerId": "6d02cfc3-f128-4f6b-820a-cfe4aa6b301c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_calloutfaulttypeid",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_calloutfaulttypeidFocus",
                "implHandler": [
                    "// 新增受信 - 故障分类",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{FaultTypeName}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_faultsituation',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        TypeRef: '%'",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                calloutfaulttypeid: record",
                    "            });",
                    "        } else {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                calloutfaulttypeid: record.get('FaultTypeId')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_calloutfaulttypeidFocus",
            "designerId": "94b2f52d-46cc-4f3b-85b5-ee959883d894"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_assignuser",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_dutyusernameFocus",
                "implHandler": [
                    "// 新增受信 - 派工人员",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{username}({linkphone})</div>' +",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{storagename}</div>' ;",
                    "//var storageid = Ext.getCmp('EngFaultAdd_storageid').getValue();",
                    "",
                    " viewUtil.goNext('Common.ComMultiSelect', {",
                    "     textfield: textfield,",
                    "     storeid: 'common_sxpglist',",
                    "     storeparm: {",
                    "         userid: global.getUserId(),",
                    "     },",
                    "     itemtpl: tpl,",
                    "     paging: false,",
                    "     allowedit: false,",
                    "     allowsearch: false,",
                    "     fnSetFilter: Ext.emptyFn,",
                    "     fnSelected: function(record) {",
                    "",
                    "         console.log(record);",
                    "         if(typeof(record)==='string') {",
                    "             textfield.setValue(record);",
                    "         } else {",
                    "             var assignuserStr = '';",
                    "             var assignuser = '';",
                    "             for(var i = 0; i < record.length; i++){",
                    "                 if(i!==0){",
                    "                     assignuserStr+=',';",
                    "                     assignuser+=',';",
                    "                 }",
                    "                 assignuserStr+=record[i].get('username')+'('+record[i].get('storagename')+')';",
                    "                 assignuser+=record[i].get('userid')+'_'+record[i].get('storageid')+'_'+record[i].get('linkphone')+'_';",
                    "                 if(i!==0){",
                    "                     assignuser+='1';",
                    "                 }else{",
                    "                     assignuser+='0';",
                    "                 }",
                    "             }",
                    "             console.log(assignuser);",
                    "             Ext.getCmp('assignuser').setValue(assignuser);",
                    "             textfield.setValue(assignuserStr);",
                    "",
                    "",
                    "         }",
                    "     }",
                    " });",
                    "textfield.blur();",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_dutyusernameFocus",
            "designerId": "0be88e5d-4f35-44e1-881b-83a2350e9105"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_operdate",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_operdateFocus",
                "implHandler": [
                    "// 新增受信 - 受理时间",
                    "this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_operdateFocus",
            "designerId": "b74987a6-17fb-433d-872a-76fef7e518ef"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_expectarrivetime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_expectarrivetimeFocus",
                "implHandler": [
                    "var fn = function() {",
                    "    // 获得日期后的额外处理",
                    "    //alert('1');",
                    "};",
                    "this.doEngFault_ShowDatePicker(textfield, fn);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_expectarrivetimeFocus",
            "designerId": "5a65d4a3-df6f-4429-a02a-95372c3a93fa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAdd_BtnSave",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAdd_BtnSaveTap",
                "implHandler": [
                    "// 受信单 - 保存操作",
                    "this.doEngFaultAdd_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_BtnSaveTap",
            "designerId": "cf17c370-021d-40ab-9448-53839a7f8904"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAdd_BtnAssign",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAdd_BtnAssignTap",
                "implHandler": [
                    "// 受信单 - 派工操作",
                    "this.doEngFaultAdd_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_BtnAssignTap",
            "designerId": "75585a6f-eda0-4479-88ac-5368fd658c6d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAdd_BtnClose",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAdd_BtnCloseTap",
                "implHandler": [
                    "// 受信单 - 关闭操作",
                    "this.doEngFaultAdd_Process(button.getText());",
                    ""
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_BtnCloseTap",
            "designerId": "d70c710a-5bbc-461b-8800-d6c781152df1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultAdd_BtnReturn",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultAdd_BtnReturnTap",
                "implHandler": [
                    "// 受信单页面 - 返回上页",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_BtnReturnTap",
            "designerId": "29b90a72-24b7-465d-b7b8-ca12d0285e63"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button",
                    "index"
                ],
                "fn": "doEngFault_InitialNextStateButton",
                "implHandler": [
                    "// 初始化处理按钮",
                    "// 参数：按钮对象、按钮索引号",
                    "var b = button.record.get('nextstate');",
                    "if(!b) return;",
                    "",
                    "if(b[index]&&b[index].text!=='') {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(false);",
                    "        button.setText(b[index].name);",
                    "    } else {",
                    "        button.hidden = false;",
                    "        button.text = b[index].name;",
                    "    }",
                    "} else {",
                    "    if(button.setHidden) {",
                    "        button.setHidden(true);",
                    "    } else {",
                    "        button.hidden = true;",
                    "    }",
                    "}"
                ]
            },
            "name": "doEngFault_InitialNextStateButton",
            "designerId": "fc224e2c-85b4-41bd-89f4-23da0970d5d7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "textfield",
                    "fn"
                ],
                "fn": "doEngFault_ShowDatePicker",
                "implHandler": [
                    "// 新增受信 - 日期选择初始化",
                    "var y = new Date().getFullYear();",
                    "var items = [",
                    "    {",
                    "        text: '现在',",
                    "        handler: function() {",
                    "            picker.setValueAnimated(new Date());",
                    "        }",
                    "    }];",
                    "var picker = Ext.create('ux.DateTime',",
                    "                        {",
                    "                            yearFrom: y - 1,",
                    "                            yearTo: y + 1,",
                    "                                doneButton: {",
                    "                                text: '确定',",
                    "                                handler: function() {",
                    "                                    textfield.setValue(",
                    "                                        Ext.Date.format(picker.getValue(),'Y-m-d H:i'));",
                    "                                    picker.hide();",
                    "                                    if(fn && typeof(fn)==='function') {",
                    "                                        fn();",
                    "                                    }",
                    "                                    picker.destroy();",
                    "                                }",
                    "                            },",
                    "                            cancelButton: '取消',",
                    "                            toolbar: {",
                    "                                items : items",
                    "                            }",
                    "",
                    "                        });",
                    "",
                    "picker.setValue(Ext.Date.parse(textfield.getValue(), 'Y-m-d H:i', true));",
                    "picker.getToolbar().setTitle(textfield.getLabel());",
                    "",
                    "Ext.Viewport.add(picker);",
                    "picker.show();"
                ]
            },
            "name": "doEngFault_ShowDatePicker",
            "designerId": "2891b7e2-89e5-476e-871f-6f6dfbfbfbbe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parm"
                ],
                "fn": "doEngFault_Process",
                "implHandler": [
                    "/* 故障处理入口",
                    "   参数{ record:故障待办记录, operationIndex:操作索引号(数字)/操作名(字符串), fn:回调函数，通常用于关闭故障详细信息页面 }",
                    "*/",
                    "var me = this;",
                    "var operation;",
                    "var fn = parm.fn;",
                    "var Redeployed_flg = '1';",
                    "",
                    "//传到后台的参数",
                    "var userid = global.getUserId();//用户ID",
                    "var trno = parm.record.get('trno');//故障授信单号",
                    "var flag = '';//E 接收/F 拒绝/G 转派/H 完工/C 删除/T 退回/D 关闭",
                    "var lon = '';//经度(接收,完工状态需填)",
                    "var lat = '';//纬度(接收,完工状态需填)",
                    "var addr = '';//地址(接收,完工状态需要填)",
                    "var redeployed = [];//转派时需选择人员",
                    "/*var redeployed = [{",
                    "    redeployuser: '',//转派人ID,",
                    "    redeploydeptid:'',//转派人部门,",
                    "    linkphone:'',//联系电话,",
                    "    usertype:'',//角色类型（0负责人，1维修人员，2实习生3:其他人员）",
                    "",
                    "}];*/",
                    "var remark = '';//备注(退回需写退回原因)",
                    "",
                    "",
                    "",
                    "//判断从列表的按钮进入还是从查看或新建修改界面的按钮进入",
                    "if(typeof(parm.operationIndex)==='string') {//列表进入",
                    "    operation = parm.operationIndex;",
                    "    Redeployed_flg = '0';",
                    "} else {//查看或新建修改界面进入",
                    "    operation = parm.record.get('nextstate')[parm.operationIndex].name;",
                    "    Redeployed_flg = '1';",
                    "}",
                    "console.log(typeof(parm.operationIndex)+\"......\");",
                    "",
                    "//保存图片信息",
                    "var picturesJSON = [];",
                    "for(var i=1;i<7;i++){",
                    "    var ImgID = 'EngFaultAccept_photo_'+i;",
                    "",
                    "    var Img = Ext.getCmp(ImgID);",
                    "    if(Img){",
                    "    var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "    if(ImgSrc!=='resources/images/camera.png' && ImgSrc!=='resources/images/notPhoto.png'){",
                    "        console.log(ImgID);",
                    "        var pic = ImgSrc.split(',')[1];",
                    "        var picturesJSONSize = picturesJSON.length;",
                    "        var picIndex = picturesJSONSize+1;",
                    "        picturesJSON[picturesJSONSize]={",
                    "            pic : pic,",
                    "            remark\t: '维修现场照片',",
                    "            takeproject\t: '维修现场照片',",
                    "            picname\t: trno+'_'+picIndex",
                    "        };",
                    "    }",
                    "    }",
                    "}",
                    "console.log(picturesJSON);",
                    "",
                    "switch(operation) {",
                    "    case \"派工\":",
                    "        viewUtil.goNext('Engineer.EngFaultAdd', {record: parm.record, action:'派工'});",
                    "        return;",
                    "",
                    "    case \"删除\":",
                    "        //viewUtil.goNext('Engineer.EngFaultAdd', {record: parm.record, action:'关闭'});",
                    "        Ext.Msg.confirm(\"注意\", \"确认是否删除？\", function(n) {",
                    "            if(n=='no')return;",
                    "            flag = 'C';",
                    "            userid = global.getUserId();",
                    "",
                    "            var adapter_parm = {",
                    "                userid : userid,",
                    "                trno : trno,",
                    "                flag : flag,",
                    "                lon : lon,",
                    "                lat : lat,",
                    "                addr : addr,",
                    "                redeployed : redeployed,",
                    "                remark : remark",
                    "",
                    "            };",
                    "            console.log('-------受信处理传给后台的参数 start--------');",
                    "            console.log(adapter_parm);",
                    "            console.log('-------受信处理传给后台的参数 end--------');",
                    "            var store = dataUtil.createStore('sx_sxcl');",
                    "            loadMask.show();",
                    "            store.updateDat(",
                    "                function() {",
                    "                    loadMask.hide();",
                    "                    Ext.toast(operation + '操作已完成！');",
                    "",
                    "                    // 刷新故障待办列表",
                    "                    liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "                    me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "",
                    "                    if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "                },",
                    "                function(info) {",
                    "                    loadMask.hide();",
                    "                    if(!info) info = '(未知)';",
                    "                    Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "                },",
                    "                adapter_parm",
                    "            );",
                    "",
                    "        });",
                    "        return;",
                    "",
                    "    case \"接收\":",
                    "        flag = 'E';",
                    "        userid = global.getUserId();",
                    "        lon = map.getLocation().lng;",
                    "        lat = map.getLocation().lat;",
                    "        addr = map.getLocation().addr;",
                    "        reamrk = '手机端操作接收';",
                    "        remark = '手机端操作接收';",
                    "        break;",
                    "",
                    "    case \"退回\":",
                    "",
                    "",
                    "        if(typeof(parm.operationIndex)=='number'){",
                    "            viewUtil.goNext('Engineer.EngFaultAccept', {record: parm.record});",
                    "            return;",
                    "        }else{",
                    "            //填写退回原因",
                    "            Ext.Msg.prompt('退回原因', null,",
                    "                function(buttonId,value) {",
                    "                        if(buttonId=='ok'){",
                    "                           if(value==''){",
                    "                               Ext.toast('退回操作必须填写退回原因!');",
                    "                               return;",
                    "                           }",
                    "                           var EngFaultAccept_remark = value;",
                    "                           flag = 'T';",
                    "                           userid = global.getUserId();",
                    "                           t_remark = EngFaultAccept_remark;",
                    "                           remark = EngFaultAccept_remark;",
                    "",
                    "                           var adapter_parm = {",
                    "                                userid : userid,",
                    "                                trno : trno,",
                    "                                flag : flag,",
                    "                                lon : lon,",
                    "                                lat : lat,",
                    "                                addr : addr,",
                    "                                redeployed : redeployed,",
                    "                                pictures : picturesJSON,",
                    "                                remark : remark",
                    "",
                    "                            };",
                    "                            console.log('-------受信处理传给后台的参数 start--------');",
                    "                            console.log(adapter_parm);",
                    "                            console.log('-------受信处理传给后台的参数 end--------');",
                    "                            var store = dataUtil.createStore('sx_sxcl');",
                    "                            loadMask.show();",
                    "                            store.updateDat(",
                    "                                function() {",
                    "                                    loadMask.hide();",
                    "                                    Ext.toast(operation + '操作已完成！');",
                    "",
                    "                                    // 刷新故障待办列表",
                    "                                    liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "                                    me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "",
                    "                                    if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "                                },",
                    "                                function(info) {",
                    "                                    loadMask.hide();",
                    "                                    if(!info) info = '(未知)';",
                    "                                    Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "                                },",
                    "                                adapter_parm",
                    "                            );",
                    "                            return;",
                    "",
                    "                        }else{",
                    "                            return;",
                    "                        }",
                    "                    },",
                    "                    null,",
                    "                    true,",
                    "                    '' || '',",
                    "                    {",
                    "                        autoCapitalize: true,",
                    "                        placeHolder: '请输入退回原因',",
                    "",
                    "                    }",
                    "                );",
                    "            return;",
                    "            //var EngFaultAccept_remark = Ext.getCmp('EngFaultAccept_remark').getValue();",
                    "            //console.log(EngFaultAccept_remark);",
                    "            //if(EngFaultAccept_remark===''){",
                    "            //    Ext.toast('退回操作必须填写退回原因!');",
                    "            //    return;",
                    "            //}else{",
                    "            //    flag = 'T';",
                    "             //   userid = global.getUserId();",
                    "             //   t_remark = EngFaultAccept_remark;",
                    "            //    remark = EngFaultAccept_remark;",
                    "            //    break;",
                    "            //}",
                    "        }",
                    "        break;",
                    "",
                    "    case \"完成\":",
                    "        flag = 'H';",
                    "        userid = global.getUserId();",
                    "        lon = map.getLocation().lng;",
                    "        lat = map.getLocation().lat;",
                    "        addr = map.getLocation().addr;",
                    "        remark = '手机端操作完成';",
                    "        break;",
                    "",
                    "    case \"完工\":",
                    "        flag = 'H';",
                    "        userid = global.getUserId();",
                    "        lon = map.getLocation().lng;",
                    "        lat = map.getLocation().lat;",
                    "",
                    "        var AcceptMap_address = Ext.getCmp('AcceptMap_address');",
                    "        if(AcceptMap_address){",
                    "            addr = AcceptMap_address.getHtml();",
                    "        }",
                    "        addr = addr;",
                    "        remark = '手机端操作完成';",
                    "        break;",
                    "",
                    "    case \"转派\":\t//跳转到选择维修人员界面",
                    "        viewUtil.goNext('Engineer.EngFaultRedeployed', {record: parm.record, action:operation,Redeployed_flg:Redeployed_flg});",
                    "        //this.doEngFault_LoadRedeployList();",
                    "",
                    "        return;",
                    "",
                    "",
                    "   /* case \"出发\":",
                    "        tr.reamrk = '手机端操作出发';",
                    "        tr.remark = '手机端操作出发';",
                    "        break;",
                    "",
                    "    case \"到场\":",
                    "        tr.reamrk = '手机端操作到场';",
                    "        tr.remark = '手机端操作到场';",
                    "        break;",
                    "",
                    "",
                    "",
                    "    case \"解困\":",
                    "        tr.reamrk = '手机端操作解困';",
                    "        tr.remark = '手机端操作解困';",
                    "        break;",
                    "",
                    "    case \"拍照\":",
                    "        var photo = global.loadPhoto('');",
                    "        adapter_parm.paizhao = [photo];",
                    "        break;",
                    "",
                    "    case \"扫描\":",
                    "        adapter_parm.user = global.getUserId();",
                    "        return;",
                    "    */",
                    "",
                    "    default:",
                    "        Ext.toast('未知的操作:' + operation);",
                    "        return;",
                    "}",
                    "",
                    "var adapter_parm = {",
                    "    userid : userid,",
                    "    trno : trno,",
                    "    flag : flag,",
                    "    lon : lon,",
                    "    lat : lat,",
                    "    addr : addr,",
                    "    redeployed : redeployed,",
                    "    pictures : picturesJSON,",
                    "    remark : remark",
                    "",
                    "};",
                    "console.log('-------受信处理传给后台的参数 start--------');",
                    "console.log(adapter_parm);",
                    "console.log('-------受信处理传给后台的参数 end--------');",
                    "var store = dataUtil.createStore('sx_sxcl');",
                    "loadMask.show();",
                    "store.updateDat(",
                    "    function() {",
                    "        loadMask.hide();",
                    "        Ext.toast(operation + '操作已完成！');",
                    "",
                    "        // 刷新故障待办列表",
                    "        liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "        me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "",
                    "        if(fn) fn(); // 回调（关闭故障详细资料页面）",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "    },",
                    "    adapter_parm",
                    ");"
                ]
            },
            "name": "doEngFault_Process",
            "designerId": "f3212252-377a-45ed-9958-20561e35f574"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "action"
                ],
                "fn": "doSxReportAdd_Process",
                "implHandler": [
                    "//受信状态为已接受时进入界面的故障报告按钮功能",
                    "var me = this;",
                    "var form = Ext.getCmp('form_sx_sxreport');",
                    "var rp = form.getValues();",
                    "var state ;",
                    "",
                    "console.log(action);",
                    "switch(action){",
                    "    case '保存':",
                    "        state = '0';",
                    "        break;",
                    "    case '提交':",
                    "        state = '1';",
                    "        break;",
                    "    default:",
                    "        Ext.Msg.alert('注意', '未知操作:'+action, Ext.emptyFn);",
                    "        return;",
                    "}",
                    "",
                    "",
                    "//截取原因分析",
                    "var report_analysisStr = Ext.getCmp('sxreport_analysisStr').getValue();",
                    "var analysisJSON = [];",
                    "if(report_analysisStr!==''){",
                    "    var AnalysisStrs = report_analysisStr.split('+');",
                    "    if(AnalysisStrs.length>0){",
                    "        for(var i=0;i<AnalysisStrs.length;i++){",
                    "            analysisJSON[i] = {",
                    "                faulttype: AnalysisStrs[i].split('_')[0],",
                    "                faultcode: AnalysisStrs[i].split('_')[1],",
                    "                faultanalysis: AnalysisStrs[i].split('_')[2],",
                    "                ladder: AnalysisStrs[i].split('_')[3]",
                    "            };",
                    "        }",
                    "        console.log('-------AnalysisStrs------');",
                    "        console.log(analysisJSON);",
                    "        console.log('-------AnalysisStrs------');",
                    "    }",
                    "}",
                    "",
                    "//截取故障原因",
                    "var report_reason = Ext.getCmp('sxreport_reasonStr').getValue();",
                    "var reasonJSON = [];",
                    "if(report_reason!==''){",
                    "    var Report_reason = report_reason.split('&');",
                    "    if(Report_reason.length>0){",
                    "        for(var i=0;i<Report_reason.length;i++){",
                    "            reasonJSON[i] = {",
                    "                reasonname: Report_reason[i]",
                    "            };",
                    "        }",
                    "        console.log('-------reasonJSON------');",
                    "        console.log(reasonJSON);",
                    "        console.log('-------reasonJSON------');",
                    "    }",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "//检查必填项",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "    field = fields[name];",
                    "    if(field.getRequired() && field.getValue()==='') {",
                    "        Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "        return;",
                    "    }",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "var trplist = [];",
                    "var partsStore = Ext.getCmp('SxReport_ListParts').getStore();",
                    "partsStore.getData().each(function(r) {",
                    "    trplist.push({",
                    "        materialsname: r.get('materialsname'),",
                    "        materialsnum: r.get('materialsnum'),",
                    "        model: r.get('model'),",
                    "        prices:\tr.get('prices'),",
                    "        remark:\tr.get('remark')",
                    "    });",
                    "});",
                    "rp.partslist = trplist;",
                    "",
                    "rp.dealresult = '';//处理结果",
                    "rp.trcontent = '';//受信内容",
                    "rp.rpuser = global.getUserId();//报告人",
                    "rp.rptime = Ext.Date.format(new Date(), 'Y-m-d H:i');//报告时间",
                    "rp.createby = global.getUserId();//创建人",
                    "",
                    "rp.reason=reasonJSON;",
                    "rp.analysis=analysisJSON;",
                    "",
                    "var parm = {",
                    "    userid: global.getUserId(),",
                    "    state: state,",
                    "    rp: rp",
                    "};",
                    "",
                    "",
                    "console.log('--------故障报告传去后台的数据---------------');",
                    "console.log(parm);",
                    "console.log('--------故障报告传去后台的数据---------------');",
                    "",
                    "var store = dataUtil.createStore('sx_rpscens');",
                    "loadMask.show();",
                    "store.updateDat(",
                    "    function(tpno) {",
                    "        loadMask.hide();",
                    "        if(tpno) {",
                    "            Ext.toast(action + '操作完成！单号是：' + tpno);",
                    "        } else {",
                    "            Ext.toast(action + '操作完成！');",
                    "        }",
                    "",
                    "        // 刷新故障待办列表",
                    "        liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "        me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "        viewUtil.goLast();",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + action + '操作，错误信息是：' + info);",
                    "    },",
                    "    parm",
                    ");"
                ]
            },
            "name": "doSxReportAdd_Process",
            "designerId": "b4a72a4a-565c-45d6-94bf-c902f3a513e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "action"
                ],
                "fn": "doEngFaultAdd_Process",
                "implHandler": [
                    "// 受信单操作 - 新建/修改/派工/关闭",
                    "var me = this;",
                    "var form = Ext.getCmp('EngFaultAdd_Form');",
                    "var tr = form.getValues();",
                    "",
                    "// 派工标志",
                    "switch(action) {",
                    "    case '新建':",
                    "    case '保存':",
                    "        tr.state = '1';",
                    "        break;",
                    "    case '确认':",
                    "        if(!tr.assignuser || tr.assignuser==='') {",
                    "            Ext.Msg.alert('注意', '[提交]操作必须选择维修人员！', Ext.emptyFn);",
                    "            return;",
                    "        }",
                    "        tr.state = '2';",
                    "        break;",
                    "    case '转派':",
                    "        if(!tr.assignuser || tr.assignuser==='') {",
                    "            Ext.Msg.alert('注意', '[转派]操作必须选择维修人员！', Ext.emptyFn);",
                    "            return;",
                    "        }",
                    "        tr.isapprove = 'Y';",
                    "        break;",
                    "    case '关闭':",
                    "        tr.isapprove = 'N';",
                    "        if(tr.remark) {",
                    "            tr.t_remark = tr.remark;",
                    "        } else {",
                    "            tr.t_remark = '手机端关闭';",
                    "        }",
                    "        break;",
                    "    case '删除':",
                    "        tr.t_rematk = '手机端删除';",
                    "        break;",
                    "",
                    "    default:",
                    "        Ext.Msg.alert('注意', '未知操作:'+action, Ext.emptyFn);",
                    "        return;",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "// 检查必填项目",
                    "var fields = form.getFields();",
                    "for(var name in fields) {",
                    "  field = fields[name];",
                    "   console.log(field.getLabel() + ':' + field.getRequired() + ',' + field.getValue());",
                    "  if(field.getRequired() && field.getValue()==='') {",
                    "      Ext.Msg.alert('注意', '必须填写\"' + field.getLabel() + '\"', Ext.emptyFn);",
                    "      return;",
                    "  }else if(name==='reportortel'){//检测电话",
                    "        if(field.getValue()!='' && !global.isTelNo(field.getValue())) {",
                    "            field.suspendEvents();",
                    "            Ext.toast('电话号码格式不正确！');",
                    "            field.resumeEvents(false);",
                    "            return;",
                    "        }",
                    "  }",
                    "}",
                    "",
                    "",
                    "if(tr.isrunning===0){",
                    "    tr.isrunning='N';",
                    "}else if(tr.isrunning===1){",
                    "    tr.isrunning='Y';",
                    "}",
                    "",
                    "var assignuserJSON = [];",
                    "var assignuser = tr.assignuser;",
                    "var assignuserStr = tr.assignuserStr;",
                    "console.log('assignuser:___'+assignuser);",
                    "",
                    "if(assignuserStr!==''&&assignuser!==''){",
                    "    var assignusers = assignuser.split(',');",
                    "    for(var i=0;i<assignusers.length;i++){",
                    "        var Assignuser = assignusers[i];",
                    "        var result = Assignuser.split('_');",
                    "        assignuserJSON[i]={",
                    "            userid: result[0],",
                    "            storageid: result[1],",
                    "            linkphone: result[2],",
                    "            usertype: result[3]",
                    "        };",
                    "    }",
                    "}",
                    "",
                    "console.log(assignuserJSON);",
                    "",
                    "tr.assignuser = assignuserJSON;",
                    "",
                    "",
                    "tr.operid = global.getUserId();//受信起草人",
                    "tr.reportordate = Ext.Date.format(new Date(), 'Y-m-d H:i');//来电时间",
                    "tr.unitname = tr.projectname;//保修单位名(取项目名)",
                    "tr.repairaddress = tr.projectaddress;//保修地址(取项目地址)",
                    "tr.calloutfaulttypeid = '';//故障分类给空",
                    "tr.userid = global.getUserId();//当前人",
                    "tr.repairunitphone = tr.reportortel;//保修单位电话(取来电人电话)",
                    "",
                    "",
                    "//tr.lon = map.getLocation().lng;",
                    "//tr.lat = map.getLocation().lat;",
                    "",
                    "var parm = {",
                    "    userid: global.getUserId(),",
                    "    tr: tr",
                    "};",
                    "console.log(parm);",
                    "var store = dataUtil.createStore('sx_sxscens');",
                    "loadMask.show();",
                    "store.updateDat(",
                    "    function(trno) {",
                    "        loadMask.hide();",
                    "        if(trno) {",
                    "            Ext.toast(action + '操作完成！单号是：' + trno);",
                    "        } else {",
                    "            Ext.toast(action + '操作完成！');",
                    "        }",
                    "",
                    "        // 刷新故障待办列表",
                    "        liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "        me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "        viewUtil.goLast();",
                    "    },",
                    "    function(info) {",
                    "        loadMask.hide();",
                    "        if(!info) info = '(未知)';",
                    "        Ext.toast('未能完成' + action + '操作，错误信息是：' + info);",
                    "    },",
                    "    parm",
                    ");"
                ]
            },
            "name": "doEngFaultAdd_Process",
            "designerId": "4826087d-3a23-421f-8565-2341a13ca6ce"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkey",
                    "action",
                    "scrollparm"
                ],
                "fn": "doEngFault_LoadFaultList",
                "implHandler": [
                    "// 故障业务标签页 - 热线受信列表刷新",
                    "/*var date1 = Ext.getCmp('EngFault_date1').getValue();",
                    "var date2 = Ext.getCmp('EngFault_date2').getValue();",
                    "if(!date1 || !date2) {",
                    "    return;",
                    "}",
                    "date1 = Ext.Date.format(new Date(date1), 'Y-m-d');",
                    "date2 = Ext.Date.format(new Date(date2), 'Y-m-d');*/",
                    "//var Enfault_Search = Ext.getCmp('Enfault_Search').getValue();",
                    "if(Ext.getCmp('EngFault_ListHotline')){",
                    "",
                    "var state = '';",
                    "",
                    "if(Ext.getCmp('Enfault_button')){",
                    "    var stateT = Ext.getCmp('Enfault_button').getText();",
                    "    switch(stateT){",
                    "        case '全部':",
                    "            state='%';",
                    "            break;",
                    "        case '新建':",
                    "            state='0';",
                    "            break;",
                    "        case '未接收':",
                    "            state='201';",
                    "            break;",
                    "        case '维修中':",
                    "            state='202';",
                    "            break;",
                    "        case '已退回':",
                    "            state='104';",
                    "            break;",
                    "        case '完工':",
                    "            state='401';",
                    "            break;",
                    "        case '关闭':",
                    "            state='103';",
                    "            break;",
                    "    }",
                    "}else{",
                    "    state = '%';",
                    "}",
                    "",
                    "",
                    "Ext.getCmp('EngFault_ListHotline').getStore().loadDat(",
                    "    function(n,jurisdiction) {",
                    "        // 设置角标",
                    "        /*",
                    "        var task = Ext.create('Ext.util.DelayedTask', function() {",
                    "                Ext.getCmp('EngFault_CtnFaultList').setBadgeText(n>0? ' ':'');",
                    "            }, this);",
                    "        task.delay(1000);",
                    "        task.cancel();",
                    "        */",
                    "        //if(n===0) Ext.toast('没有符合条件的故障数据!');",
                    "        if(scrollparm){",
                    "             scrollparm.scroller.scrollTo(scrollparm.x,(n-1)*scrollparm.faultCurPage*95);",
                    "             loadMask.hide();",
                    "        }",
                    "        if(n==='resetCurPage'){",
                    "            faultCurPage = 1;",
                    "        }",
                    "",
                    "        var addjurisdiction = jurisdiction.addjurisdiction=='N';//新建权限",
                    "        Ext.getCmp('EngFault_BtnAdd').setHidden(addjurisdiction);",
                    "",
                    "",
                    "        console.log('故障列表搜索完成!');",
                    "    },",
                    "    function(info) {",
                    "        Ext.toast(info);",
                    "        if(info==='加载更多故障受信数据失败'){",
                    "            faultCurPage--;",
                    "        }",
                    "//         if(faultCurPage!=1){",
                    "//              faultCurPage--;//获取数据失败页数减一",
                    "//         }",
                    "        loadMask.hide();",
                    "    },",
                    "    {",
                    "        userid: global.getUserId(),",
                    "        workstardate: '1970-01-01',",
                    "        workenddate: '2200-01-01',",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkey,",
                    "        state:state",
                    "    },",
                    "    action",
                    ");",
                    "}",
                    " //Ext.getCmp('EngFault_ListHotline').getStore().filteDat(Enfault_Search);"
                ]
            },
            "name": "doEngFault_LoadFaultList",
            "designerId": "166b5574-10be-411a-b45a-887f78a34029"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "page",
                    "pagesize",
                    "searchkey",
                    "action",
                    "scrollparm"
                ],
                "fn": "doEngFault_LoadReportList",
                "implHandler": [
                    "",
                    "var state = '';",
                    "",
                    "if(Ext.getCmp('EngReport_Button')){",
                    "var stateT = Ext.getCmp('EngReport_Button').getText();",
                    "switch(stateT){",
                    "    case '全部':",
                    "        state='%';",
                    "        break;",
                    "    case '新建':",
                    "        state='0';",
                    "        break;",
                    "    case '待审':",
                    "        state='1';",
                    "        break;",
                    "    case '通过':",
                    "        state='3';",
                    "        break;",
                    "    case '不通过':",
                    "        state='4';",
                    "        break;",
                    "}",
                    "}else{",
                    "    state = '%';",
                    "}",
                    "console.log('-----state----'+state);",
                    "",
                    "if(Ext.getCmp('EngFault_ListReport')){",
                    "Ext.getCmp('EngFault_ListReport').getStore().loadDat(",
                    "    function(n) {",
                    "        if(scrollparm){",
                    "             scrollparm.scroller.scrollTo(scrollparm.x,scrollparm.y);",
                    "             loadMask.hide();",
                    "        }",
                    "        if(n==='resetCurPage'){",
                    "            reportCurPage = 1;",
                    "        }",
                    "//         if(n===0) Ext.toast('没有符合条件的故障报告书数据!');",
                    "        console.log('故障报告书列表搜索完成!');",
                    "    },",
                    "    function(info) {",
                    "        Ext.toast(info);",
                    "        if(info==='加载更多故障报告数据失败'){",
                    "            reportCurPage--;",
                    "        }",
                    "        if(info==='没有更多数据！'){",
                    "            reportCurPage = 0;//没有更多数据的时候重置页数为0，不触发上拉事件",
                    "        }",
                    "//         if(reportCurPage!=1){",
                    "//              reportCurPage--;//获取数据失败页数减一",
                    "//         }",
                    "        loadMask.hide();",
                    "//         Ext.toast('暂时未能获取故障报告书列表!');",
                    "    },",
                    "    {",
                    "        userid: global.getUserId(),",
                    "        startrptime: '1970-01-01',",
                    "        endrptime: '2200-01-01',",
                    "        curpagenum:page,",
                    "        pagesize:pagesize,",
                    "        searchkey:searchkey,",
                    "        state:state",
                    "    },",
                    "    action",
                    ");",
                    "}"
                ]
            },
            "name": "doEngFault_LoadReportList",
            "designerId": "fda0facd-60e3-436c-9938-68ae16855040"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield#Enfault_Search",
                "designer|targetType": "Ext.field.Search",
                "fn": "onEnfaultSearchfieldChange",
                "implHandler": [
                    "var Enfault_Search = textfield.getValue();",
                    "if(!Enfault_Search||Enfault_Search===''){",
                    "    Enfault_Search = '';",
                    "//     return;",
                    "}",
                    "//联网搜索",
                    "// faultCurPage = 1;",
                    "this.doEngFault_LoadFaultList(1,pagesize,Enfault_Search,'refresh');",
                    "// Ext.getCmp('EngFault_ListHotline').getStore().filteDat(Enfault_Search);"
                ],
                "name": "change"
            },
            "name": "onEnfaultSearchfieldChange",
            "designerId": "a6b96abf-df27-4a0a-9f65-2397f08ff613"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield#EngReport_Search",
                "designer|targetType": "Ext.field.Search",
                "fn": "onEngReportSearchfieldChange",
                "implHandler": [
                    "var keyword = textfield.getValue();",
                    "if(!keyword||keyword===''){",
                    "    keyword='';",
                    "//     return;",
                    "}",
                    "//联网搜索故障报告",
                    "// reportCurPage = 1;",
                    "this.doEngFault_LoadReportList(reportCurPage,20,keyword,'search');"
                ],
                "name": "change"
            },
            "name": "onEngReportSearchfieldChange",
            "designerId": "1fc58cb4-ebc4-43b3-bafa-45752551414d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_projectname",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "OnEngFaultAdd_project",
                "implHandler": [
                    "// 新增受信 - 项目名称",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{projectname}</div>' +",
                    "'<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{projectaddress}</div>' ;",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_projectlist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20,",
                    "        searchkey:textfield.getValue(),",
                    "        type:'N'",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.searchkey = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                projectname: record",
                    "            });",
                    "        } else {",
                    "            Ext.getCmp('EngFaultAdd_Form').setValues({",
                    "                projectname: record.get('projectname'),",
                    "                projectaddress: record.get('projectaddress')",
                    "            });",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "OnEngFaultAdd_project",
            "designerId": "c2ee824f-ee95-4506-966d-65112e0e991c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#EngFaultAdd_faulthappentime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onEngFaultAdd_faulthappentimeFous",
                "implHandler": [
                    "// 新增受信 - 故障发生时间",
                    "this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAdd_faulthappentimeFous",
            "designerId": "30127cec-9a81-4d2e-9dea-ea99298fabd7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngFault_LoadRedeployList",
                "implHandler": [
                    "",
                    "                Ext.getCmp('EngFaultRedeployed_List').getStore().loadDat(",
                    "                    function(n) {",
                    "                        ",
                    "                        console.log('故障列表搜索完成!');",
                    "                    },",
                    "                    function() {",
                    "                        Ext.toast('暂时未能获取故障列表!');",
                    "                    },",
                    "                    {",
                    "                        userid: global.getUserId(),",
                    "                        workstardate: '',",
                    "                        workenddate: ''",
                    "                    }",
                    "                );"
                ]
            },
            "name": "doEngFault_LoadRedeployList",
            "designerId": "d4e38d99-43d0-4cd6-a98c-f1b5afb4f174"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Redeployed_BtnOK",
                "designer|targetType": "Ext.Button",
                "fn": "onRedeployed_BtnOKTap",
                "implHandler": [
                    "    var me = this;",
                    "    var operation = '转派';",
                    "",
                    "    var MaintList2=Ext.getCmp('EngFaultRedeployed_List').getSelection( );",
                    "    if(MaintList2.length<=0){",
                    "        Ext.Msg.alert('注意','请选择维修人员');",
                    "        return;",
                    "    }",
                    "",
                    "    var trno = Ext.getCmp('Redeployed_trno').getValue();",
                    "    var Redeployed_flg = Ext.getCmp('Redeployed_flg').getValue();",
                    "    var userid = global.getUserId();//用户ID",
                    "    var lon = '';//经度(接收,完工状态需填)",
                    "    var lat = '';//纬度(接收,完工状态需填)",
                    "    var addr= '';//地址(接收,完工状态需要填)",
                    "    var flag = 'G';",
                    "    var remark='手机端转派';",
                    "    var redeployed=[",
                    "        {",
                    "         redeployuser:MaintList2[0].get('userid'),",
                    "         redeploydeptid:MaintList2[0].get('storageid'),",
                    "         linkphone:MaintList2[0].get('linkphone'),",
                    "         usertype:MaintList2[0].get('dutytype')",
                    "        }",
                    "    ];",
                    "",
                    "     var adapter_parm = {",
                    "         userid:userid,",
                    "         trno:trno,",
                    "         flag:flag,",
                    "         lon:lon,",
                    "         lat:lat,",
                    "         addr:addr,",
                    "         redeployed:redeployed,",
                    "         remark:remark",
                    "        };",
                    "",
                    "    console.log('-------受信处理传给后台的参数 start--------');",
                    "    console.log(adapter_parm);",
                    "    console.log('-------受信处理传给后台的参数 end--------');",
                    "        var store = dataUtil.createStore('sx_sxcl');",
                    "        loadMask.show();",
                    "        store.updateDat(",
                    "            function() {",
                    "                loadMask.hide();",
                    "                Ext.toast(operation + '操作已完成！');",
                    "",
                    "                // 刷新故障待办列表",
                    "                liftnet.app.getController('Engineer.EngHomeController').doEngHome_LoadTodoAll();",
                    "                me.doEngFault_LoadFaultList(1,20,'','refresh');",
                    "                console.log(Redeployed_flg+'....');",
                    "                if(Redeployed_flg==='1'){",
                    "                    viewUtil.goLast();",
                    "                }",
                    "                if(Redeployed_flg==='0'){",
                    "                    viewUtil.goLast();viewUtil.goLast();",
                    "                }",
                    "",
                    "            },",
                    "            function(info) {",
                    "                loadMask.hide();",
                    "                if(!info) info = '(未知)';",
                    "                Ext.toast('未能完成' + operation + '操作，错误信息是：' + info);",
                    "            },",
                    "            adapter_parm",
                    "        );",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onRedeployed_BtnOKTap",
            "designerId": "9dd40d42-b10c-4715-828c-7d2dba27c25a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#Redeployed",
                "designer|targetType": "Ext.Panel",
                "fn": "onRedeployed_ListInitialize",
                "implHandler": [
                    "       var me = this;",
                    "        //加载数据",
                    "        me.doEngFault_LoadRedeployList();",
                    "",
                    "        //获取授信编号",
                    "        var taskrecord = component.initialConfig.parm.record;",
                    "        var trno = taskrecord.get('trno'); // 单号",
                    "        console.log('---------------------------');",
                    "        console.log(component.initialConfig.parm);",
                    "        console.log(component.initialConfig.parm.Redeployed_flg);",
                    "        console.log('---------------------------');",
                    "            ",
                    "        Ext.getCmp('Redeployed_flg').setValue(component.initialConfig.parm.Redeployed_flg);",
                    "",
                    "       // Ext.Msg.alert('单号:'+trno);",
                    "        Ext.getCmp('Redeployed_trno').setValue(trno);",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onRedeployed_ListInitialize",
            "designerId": "20e277d9-7275-45ad-a070-81ed24a7e93e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#Container_AcceptMap",
                "designer|targetType": "Ext.Container",
                "fn": "Container_AcceptMap",
                "implHandler": [
                    "var me = this;",
                    "console.log('______________________________');",
                    "console.log(component.initialConfig.parm);",
                    "console.log(component.initialConfig.parm);",
                    "var p = map.getLocation();//取位置信息",
                    "if(!p.lat || !p.lng){",
                    "p.lat = 23.123819;//纬度",
                    "p.lng = 113.237778;//经度",
                    "}",
                    "",
                    "//获取当前日期,当前时间",
                    "var date = Ext.Date.format(new Date(), 'Y-m-d');",
                    "var time = Ext.Date.format(new Date(), 'H:i');",
                    "console.log(date);",
                    "console.log(time);",
                    "Ext.getCmp('label_date').setHtml(date);",
                    "Ext.getCmp('label_time').setHtml(time);",
                    "",
                    "// 实时监控-地图",
                    "me.doEngFault_AcceptMap('AcceptMap',p);",
                    "",
                    "",
                    "",
                    "//bmap.addEventListener(\"click\", theLocation);",
                    "console.log('______________________________');"
                ],
                "name": "initialize"
            },
            "name": "Container_AcceptMap",
            "designerId": "9dcf2d55-8e68-4e45-ab4d-1c9c5bcf0084"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_prono",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onSxreport_pronoTap",
                "implHandler": [
                    "// 新增受信 - 设备注册码（服务号）",
                    "var tpl =",
                    "'<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{prodno}</div>';",
                    "",
                    "viewUtil.goNext('Common.ComSelect', {",
                    "    textfield: textfield,",
                    "    storeid: 'common_getserviceno',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "        serviceno: textfield.getValue(),",
                    "        curpagenum: 1,",
                    "        pagesize: 20",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: true,",
                    "    allowedit: true,",
                    "    allowsearch: true,",
                    "    fnSetFilter: function(parm, text) {",
                    "        parm.serviceno = text;",
                    "        return parm;",
                    "    },",
                    "    fnSelected: function(record) {",
                    "        if(typeof(record)==='string') {",
                    "            Ext.getCmp('sxreport_prono').setValue(record);",
                    "        } else {",
                    "            Ext.getCmp('sxreport_prono').setValue(record.get('prodno'));",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onSxreport_pronoTap",
            "designerId": "0787fcc0-670a-465f-9bb8-88c2f0803343"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_traptime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onSxreport_traptimeTap",
                "implHandler": [
                    " this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onSxreport_traptimeTap",
            "designerId": "e543016f-0f96-4b5a-ad6f-9582a45f07a5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_repairman",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onSxreport_repairmanTap",
                "implHandler": [
                    "// 新增受信 - 派工人员",
                    "        var tpl =",
                    "            '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{repairman}</div>' +",
                    "            '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{department}</div>' ;",
                    "",
                    "        viewUtil.goNext('Common.ComMultiSelect', {",
                    "            textfield: textfield,",
                    "            storeid: 'Common_repairmanlist',",
                    "            storeparm: {",
                    "                userid: global.getUserId(),",
                    "                //storageid: storageid",
                    "            },",
                    "            itemtpl: tpl,",
                    "            paging: false,",
                    "            allowedit: false,",
                    "            allowsearch: false,",
                    "            fnSetFilter: Ext.emptyFn,",
                    "            fnSelected: function(record) {",
                    "                if(typeof(record)==='string') {",
                    "                    Ext.getCmp('form_sx_reportdetail').setValues({",
                    "                        repairman: record",
                    "                    });",
                    "                } else {",
                    "                    var repairman = '';",
                    "                    var department = '';",
                    "                    for(var i = 0; i < record.length; i++){",
                    "                        if(i!==0){",
                    "                          repairman +=',';",
                    "                          department+=',';",
                    "                        }",
                    "                        repairman += record[i].get('repairman');",
                    "                        department += record[i].get('department');",
                    "",
                    "                    }",
                    "                   textfield.setValue(repairman);",
                    "                }",
                    "            }",
                    "        });",
                    "        textfield.blur();"
                ],
                "name": "tap"
            },
            "name": "onSxreport_repairmanTap",
            "designerId": "35877077-7c4e-4481-8863-d109135c8ff8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_reachtime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onSxreport_reachtimeTap",
                "implHandler": [
                    "this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onSxreport_reachtimeTap",
            "designerId": "145ac7ef-7b5c-4b5c-8f55-bf978cc5ec50"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_finishtime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onSxreport_finishtimeTap",
                "implHandler": [
                    "this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onSxreport_finishtimeTap",
            "designerId": "a03fbeb3-1a0b-4c15-a33d-eb6ed3636d7f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#sxreport_saveBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onSxreport_saveBtnTap",
                "implHandler": [
                    "this.doSxReportAdd_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onSxreport_saveBtnTap",
            "designerId": "b5f3e7ab-6938-4fe5-b06e-60cacbd815d9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textareafield#SXreport_analysis",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onreport_analysisTap",
                "implHandler": [
                    "// 新增报告 - 故障分析",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{faulttype}({faultcode})</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{faultanalysis}</div>' ;",
                    "",
                    "viewUtil.goNext('Common.ComMultiSelect', {",
                    "    textfield: textareafield,",
                    "    storeid: 'common_gzfxlist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "",
                    "        console.log(record);",
                    "        if(typeof(record)==='string') {",
                    "            textareafield.setValue(record);",
                    "        } else {",
                    "            var faultanalysisStr = '';",
                    "            var report_analysisStr = '';",
                    "            for(var i = 0; i < record.length; i++){",
                    "                 if(i!==0){",
                    "                     faultanalysisStr+='、';",
                    "                     report_analysisStr+='+';",
                    "                 }",
                    "                 faultanalysisStr+=record[i].data.faultanalysis;",
                    "                report_analysisStr+=record[i].data.faulttype+'_';",
                    "                report_analysisStr+=record[i].data.faultcode+'_';",
                    "                report_analysisStr+=record[i].data.faultanalysis+'_';",
                    "                report_analysisStr+=record[i].data.ladder;",
                    "                ",
                    "            }",
                    "           console.log(report_analysisStr);",
                    "           textareafield.setValue(faultanalysisStr);",
                    "           Ext.getCmp('report_analysisStr').setValue(report_analysisStr);",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "textareafield.blur();"
                ],
                "name": "tap"
            },
            "name": "onreport_analysisTap",
            "designerId": "8ac688b4-84db-4214-afc4-eb0e6a021c1d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#SxReport_btnAdd",
                "designer|targetType": "Ext.Button",
                "fn": "onSxReport_btnTap",
                "implHandler": [
                    "viewUtil.goNext('Engineer.EngFault_Parts',{});"
                ],
                "name": "tap"
            },
            "name": "onSxReport_btnTap",
            "designerId": "873a7c83-7c75-4169-8951-22eccc0e6d87"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Parts_ReBack",
                "designer|targetType": "Ext.Button",
                "fn": "onParts_ReBackTap",
                "implHandler": [
                    "console.log('__________________ssssssss_________________');",
                    "viewUtil.goLast();",
                    ""
                ],
                "name": "tap"
            },
            "name": "onParts_ReBackTap",
            "designerId": "f1a78561-1c8b-447f-888a-5c1b2b779e8f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#parts_saveBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onParts_saveBtnTap",
                "implHandler": [
                    "// “添加更换件”页面 - 保存",
                    "var data = Ext.getCmp('form_sxreport_parts').getValues();",
                    "if(!data.materialsname || !data.materialsnum ||",
                    "   data.materialsname==='' || data.materialsnum<=0) {",
                    "    Ext.toast('请输入名称和数量！');",
                    "    return;",
                    "}",
                    "",
                    "var index = Ext.getCmp('sxreportpart_index').getValue();",
                    "if(index!==''){",
                    "    Ext.getCmp('SxReport_ListParts').getStore().getAt(index).set(data);",
                    "}else{",
                    "    Ext.getCmp('SxReport_ListParts').getStore().add(data);",
                    "}",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onParts_saveBtnTap",
            "designerId": "78e3d09d-f3e9-409f-b280-2d7b4832b6a4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#sxreport_submitBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onSxreport_submitBtnTap",
                "implHandler": [
                    "this.doSxReportAdd_Process(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onSxreport_submitBtnTap",
            "designerId": "dcb23517-b1cb-4bd3-bb80-fadfcd91fc59"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#SXAcceptMap_location",
                "designer|params": [
                    "panel"
                ],
                "designer|targetType": "Ext.Panel",
                "fn": "onAcceptMap_locationTap",
                "implHandler": [
                    "console.log('.................');",
                    "var me = this;",
                    "//获取当前经度和纬度",
                    "var lng = Ext.getCmp('AcceptMap_lng').getValue();",
                    "var lat = Ext.getCmp('AcceptMap_lat').getValue();",
                    "console.log(lng+'____'+lat);",
                    "console.log('.................');",
                    "viewUtil.goNext('Engineer.AcceptMap_adjust',{lng:lng,lat:lat,fc:function(element, eOpts){",
                    "    ",
                    "    var lng = Ext.getCmp('Adujust_lng').getValue();",
                    "    var lat = Ext.getCmp('Adujust_lat').getValue();",
                    "    var getlnglat = function(e){",
                    "        var map = new BMap.Map(\"EngProject_map1\");",
                    "        var pointA = new BMap.Point(e.point.lng,e.point.lat);",
                    "        var pointB = new BMap.Point(lng,lat);",
                    "        //if((map.getDistance(pointA,pointB)).toFixed(2)>2000){",
                    "        //    Ext.toast('请选择离当前位置两公里范围的地点,'+(map.getDistance(pointA,pointB)).toFixed(2));",
                    "        //}else{",
                    "        //}",
                    "",
                    "        console.log(e.point.lng+'____+__'+e.point.lat);",
                    "",
                    "        var parm = {",
                    "            lng:e.point.lng,",
                    "            lat:e.point.lat",
                    "        };",
                    "        Ext.getCmp('Adujust_lng').setValue(e.point.lng);",
                    "        Ext.getCmp('Adujust_lat').setValue(e.point.lat);",
                    "        me.doEngFault_AcceptMap('AcceptMap',parm);",
                    "        viewUtil.goLast();",
                    "    };",
                    "",
                    "    map.create2('EngProject_map1',{lng:lng,lat:lat,zoom:16,fc:getlnglat});",
                    "    ",
                    "}});",
                    "",
                    "",
                    ""
                ],
                "name": "tap"
            },
            "name": "onAcceptMap_locationTap",
            "designerId": "09cb4977-52c0-4edc-aa1d-6f3a5c6990f9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Adjust_ButReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onAdjust_ButReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onAdjust_ButReturnTap",
            "designerId": "862ae1a4-71b6-46cb-bcfc-f9660d04454d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#AcceptMap_adjust",
                "designer|targetType": "Ext.Container",
                "fn": "onAcceptMap_adjustInitialize",
                "implHandler": [
                    "var lng = component.initialConfig.parm.lng;//当前经度",
                    "var lat = component.initialConfig.parm.lat;//当前纬度",
                    "",
                    "Ext.getCmp('Adujust_lng').setValue(lng);",
                    "Ext.getCmp('Adujust_lat').setValue(lat);",
                    "",
                    "//map.create('Adujust_Body',{lng:lng,lat:lat,zoom:14});",
                    "",
                    "Ext.getCmp('Adujust_Body').on('painted',component.initialConfig.parm.fc);",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onAcceptMap_adjustInitialize",
            "designerId": "066c0a53-024e-438e-8e67-622d2f12740d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id",
                    "p"
                ],
                "fn": "doEngFault_AcceptMap",
                "implHandler": [
                    " // 实时监控-地图",
                    "        Ext.getCmp(id)",
                    "        .setSrc('http://api.map.baidu.com/staticimage/v2?ak=64048452fca8dd67eabb72ff5b4dd0ac'+",
                    "               '&markers='+p.lng+','+p.lat+",
                    "               '&center='+p.lng+','+p.lat+'&height=100&zoom=15');",
                    "",
                    "        var geoc = new BMap.Geocoder();",
                    "        geoc.getLocation(",
                    "            new BMap.Point(p.lng, p.lat),function(result){",
                    "                console.log(result);",
                    "        //         result.surroundingPois",
                    "                if(Ext.getCmp('AcceptMap_address')){",
                    "                    Ext.getCmp('AcceptMap_address').setHtml(result.address);",
                    "                }",
                    "                if(Ext.getCmp('AcceptMap_lng')){",
                    "                    Ext.getCmp('AcceptMap_lng').setValue(result.point.lng);",
                    "                }",
                    "                if(Ext.getCmp('AcceptMap_lat')){",
                    "                    Ext.getCmp('AcceptMap_lat').setValue(result.point.lat);",
                    "                }",
                    "            }",
                    "         );",
                    ""
                ]
            },
            "name": "doEngFault_AcceptMap",
            "designerId": "196f4a72-3d26-49db-bb50-81afd0ec8c12"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#AcceptMap_adjust",
                "designer|targetType": "Ext.Container",
                "fn": "onAcceptMap_adjustDestroy",
                "implHandler": [
                    "map.destroyById('EngProject_map1');"
                ],
                "name": "destroy"
            },
            "name": "onAcceptMap_adjustDestroy",
            "designerId": "d802c78e-6146-4e73-93c5-abf4b5d2a246"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#sxreport_setouttime",
                "designer|params": [
                    "textfield"
                ],
                "designer|targetType": "Ext.field.Text",
                "fn": "onsxreport_setouttimeTap",
                "implHandler": [
                    "this.doEngFault_ShowDatePicker(textfield);"
                ],
                "name": "tap"
            },
            "name": "onsxreport_setouttimeTap",
            "designerId": "ceda63d6-84af-42e8-ad20-f464088231c8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doEngFault_ResetReportCurPage",
                "implHandler": [
                    "reportCurPage = 1;"
                ]
            },
            "name": "doEngFault_ResetReportCurPage",
            "designerId": "1cbfb4b3-81e9-4e66-9f25-7249866a5aa3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#Enfault_button",
                "designer|targetType": "Ext.Button",
                "fn": "onEnfault_buttonTap",
                "implHandler": [
                    " //故障授信-状态筛选按钮",
                    "        popMenu.show('Engineer.EngFaultStatus', button);"
                ],
                "name": "tap"
            },
            "name": "onEnfault_buttonTap",
            "designerId": "c08fda25-41c5-41cc-a579-4a4c9dfb95a4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_0",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_0Tap",
                "implHandler": [
                    "// 全部",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_0Tap",
            "designerId": "49d9fe6a-4d4b-47f7-86f9-87e3daf5c9ce"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_1Tap",
                "implHandler": [
                    "// 新建",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_1Tap",
            "designerId": "164134cc-e1c1-401f-9476-87b596bd131e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_2Tap",
                "implHandler": [
                    " // 未接收",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_2Tap",
            "designerId": "ef877706-d2c4-472b-a886-7684075c385e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_3",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_3Tap",
                "implHandler": [
                    " // 维修中",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_3Tap",
            "designerId": "1e7cbb5a-7991-4a88-8e42-b48212887441"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_4",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_4Tap",
                "implHandler": [
                    " // 已退回",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_4Tap",
            "designerId": "cf367be4-130e-4b35-b5be-77b3de53d725"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_5",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_5Tap",
                "implHandler": [
                    " // 完工",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_5Tap",
            "designerId": "a77a2f4f-9e64-484c-bd43-fcb1d97ddf3e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultStatus_6",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultStatus_6Tap",
                "implHandler": [
                    " // 关闭",
                    "this.doEngFaultFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultStatus_6Tap",
            "designerId": "0051b396-90e2-43c0-8a71-4d5a5dd8f45e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "filterStr"
                ],
                "fn": "doEngFaultFilter",
                "implHandler": [
                    "// 故障授信 - 选择状态后执行搜索",
                    "popMenu.getShowBy().setText(filterStr);",
                    "popMenu.hide();",
                    "this.doEngFault_LoadFaultList(1,20,'','refresh');"
                ]
            },
            "name": "doEngFaultFilter",
            "designerId": "41ddd4be-f000-4083-adec-57c9d6a11e1d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportStatus_0",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportStatus_0Tap",
                "implHandler": [
                    "//全部",
                    "this.doEngFaultReportFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportStatus_0Tap",
            "designerId": "cc13fda6-a1c9-45a6-93d2-61aa7dca9b86"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportStatus_1",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportStatus_1Tap",
                "implHandler": [
                    "//待审",
                    "this.doEngFaultReportFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportStatus_1Tap",
            "designerId": "c2da7c7d-d8a3-41c5-9489-4c4f3f0d6017"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportStatus_2",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportStatus_2Tap",
                "implHandler": [
                    "//通过",
                    "this.doEngFaultReportFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportStatus_2Tap",
            "designerId": "32eedbdb-0da2-42a1-bd6a-e3f22f759050"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportStatus_3",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportStatus_3Tap",
                "implHandler": [
                    "//不通过",
                    "this.doEngFaultReportFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportStatus_3Tap",
            "designerId": "533e6c57-f03f-4686-9f74-4ffc527196e4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "filterStr"
                ],
                "fn": "doEngFaultReportFilter",
                "implHandler": [
                    "// 故障报告 - 选择状态后执行搜索",
                    "popMenu.getShowBy().setText(filterStr);",
                    "popMenu.hide();",
                    "this.doEngFault_LoadReportList(1,20,'','refresh');"
                ]
            },
            "name": "doEngFaultReportFilter",
            "designerId": "a21df28e-5afb-4e72-807e-04c519868102"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#EngFaultReportStatus_4",
                "designer|targetType": "Ext.Button",
                "fn": "onEngFaultReportStatus_4Tap",
                "implHandler": [
                    "//新建",
                    "this.doEngFaultReportFilter(button.getText());"
                ],
                "name": "tap"
            },
            "name": "onEngFaultReportStatus_4Tap",
            "designerId": "da94c82c-1eee-4743-a725-2273a8e97608"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textareafield#sxreport_analysis",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onSxreport_analysisTap",
                "implHandler": [
                    "// 新增报告 - 故障分析",
                    "var tpl =",
                    "    '<div class=\"liftnet-font-size14 liftnet-fontColor-darkGray\">{faulttype}({faultcode})</div>'+",
                    "    '<div class=\"liftnet-font-size12 liftnet-fontColor-gray\">{faultanalysis}</div>' ;",
                    "",
                    "viewUtil.goNext('Common.ComMultiSelect', {",
                    "    textfield: textareafield,",
                    "    storeid: 'common_gzfxlist',",
                    "    storeparm: {",
                    "        userid: global.getUserId(),",
                    "    },",
                    "    itemtpl: tpl,",
                    "    paging: false,",
                    "    allowedit: false,",
                    "    allowsearch: false,",
                    "    fnSetFilter: Ext.emptyFn,",
                    "    fnSelected: function(record) {",
                    "",
                    "        console.log(record);",
                    "        if(typeof(record)==='string') {",
                    "            textareafield.setValue(record);",
                    "        } else {",
                    "            var faultanalysisStr = '';",
                    "            var report_analysisStr = '';",
                    "            for(var i = 0; i < record.length; i++){",
                    "                 if(i!==0){",
                    "                     faultanalysisStr+='、';",
                    "                     report_analysisStr+='+';",
                    "                 }",
                    "                 faultanalysisStr+=record[i].data.faultanalysis;",
                    "                report_analysisStr+=record[i].data.faulttype+'_';",
                    "                report_analysisStr+=record[i].data.faultcode+'_';",
                    "                report_analysisStr+=record[i].data.faultanalysis+'_';",
                    "                report_analysisStr+=record[i].data.ladder;",
                    "",
                    "            }",
                    "           console.log(report_analysisStr);",
                    "           textareafield.setValue(faultanalysisStr);",
                    "           Ext.getCmp('sxreport_analysisStr').setValue(report_analysisStr);",
                    "",
                    "        }",
                    "    }",
                    "});",
                    "textareafield.blur();"
                ],
                "name": "tap"
            },
            "name": "onSxreport_analysisTap",
            "designerId": "6e5fa5ed-858a-4e36-a83f-d916ad1533e3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textareafield#sxreport_reason",
                "designer|params": [
                    "textareafield"
                ],
                "designer|targetType": "Ext.field.TextArea",
                "fn": "onSxreport_reasonTap",
                "implHandler": [
                    "//先把当前故障原因加入Store",
                    "var reasonStr = Ext.getCmp('sxreport_reasonStr').getValue();",
                    "",
                    "if(reasonStr===''){",
                    "    ",
                    "}else{",
                    "    var reasonJSON = [];",
                    "    var reason = reasonStr.split('&');",
                    "    console.log(reason.length);",
                    "    if(reason.length>0){",
                    "        for(var i=0;i<reason.length;i++){",
                    "            reasonJSON[i]={",
                    "                reasonname : reason[i]",
                    "            };",
                    "        }",
                    "    }",
                    "",
                    "    dataUtil.createStore('sx_report_reason').add(reasonJSON);",
                    "}",
                    "",
                    "//故障原因----跳转至另一页面",
                    "viewUtil.goNext('Engineer.EngFaultReportReason',{textareafield:textareafield});"
                ],
                "name": "tap"
            },
            "name": "onSxreport_reasonTap",
            "designerId": "d6a5af95-ee53-4c09-9f63-0cbe140515e7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFaultAccept_camera",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFaultAccept_cameraTap",
                "implHandler": [
                    "var me = this;",
                    "",
                    "Ext.getCmp('camera_show').show();",
                    "",
                    "/*console.log('-------进入拍照功能');",
                    "",
                    "var source='CAMEAR';",
                    "",
                    "var parm = {",
                    "    callback :function(filename){",
                    "            for(var i=1;i<7;i++){",
                    "                var ImgID = 'EngFaultAccept_photo_'+i;",
                    "                var Img = Ext.getCmp(ImgID);",
                    "                var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "                if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EnFaultAccept_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngFaultAccept_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngFaultAccept_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                            NextImg.setItemId('EngFaultAccept_camera');",
                    "                            NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "                }",
                    "            }",
                    "    },//回调函数",
                    "    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);*/"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_cameraTap",
            "designerId": "be786204-7a00-47b4-9120-a68ead1a51c0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EngFaultAccept_photo",
                "designer|targetType": "Ext.Img",
                "fn": "onEngFaultAccept_photoTap",
                "implHandler": [
                    "//点击图片时进入另一页面显示图片",
                    "console.log('----ImgID----');",
                    "var ImgID = image.getId();",
                    "console.log(ImgID);",
                    "console.log('----ImgID----');",
                    "viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'N',NextImgId:'EngFaultAccept_photo_',fcname:'EngFaultAccept_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEngFaultAccept_photoTap",
            "designerId": "0a024ccf-1cc9-4b26-a9a2-74a9a87e2eb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFaultPhoto",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFaultPhotoInitialize",
                "implHandler": [
                    "",
                    "var ImgID = component.initialConfig.parm.ImgID;",
                    "var flag = component.initialConfig.parm.flag;",
                    "var NextImgId = component.initialConfig.parm.NextImgId;",
                    "var fcname = component.initialConfig.parm.fcname;",
                    "console.log(flag);",
                    "if(flag=='Y'){",
                    "    Ext.getCmp('FaultPhoto_BtnDel').setHidden(true);",
                    "}",
                    "Ext.getCmp('EngFaultPhoto_ImgID').setValue(ImgID);",
                    "Ext.getCmp('NextImgId').setValue(NextImgId);",
                    "Ext.getCmp('fcname').setValue(fcname);",
                    "var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "console.log(ImgSrc);",
                    "Ext.getCmp('EngFaultPhoto_show').setSrc(ImgSrc);",
                    "",
                    "//跟Panel注册左右滑动事件",
                    "Ext.get('FaultPhoto_Panel').on('swipe', 'onFaultPhotoSwipe', this);",
                    "",
                    "",
                    ""
                ],
                "name": "initialize"
            },
            "name": "onEngFaultPhotoInitialize",
            "designerId": "80cb8c5f-0e96-480c-8628-8d440de09e9f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#FaultPhoto_BtnReturn",
                "designer|targetType": "Ext.Button",
                "fn": "onFaultPhoto_BtnReturnTap",
                "implHandler": [
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onFaultPhoto_BtnReturnTap",
            "designerId": "fcb31a17-85dc-44cd-a744-1c97a0296d09"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#FaultPhoto_BtnDel",
                "designer|targetType": "Ext.Button",
                "fn": "onFaultPhoto_BtnDelTap",
                "implHandler": [
                    "//删除该照片",
                    "var ImgID = Ext.getCmp('EngFaultPhoto_ImgID').getValue();",
                    "var NextImgId = Ext.getCmp('NextImgId').getValue();",
                    "var fcname = Ext.getCmp('fcname').getValue();",
                    "var fcname2 = NextImgId.substring(0,NextImgId.length-1);",
                    "",
                    "",
                    "//判断是否存在相机照片",
                    "var hasCamera = false;",
                    "for(var i=1;i<7;i++){",
                    "    var imgID = NextImgId+i;",
                    "    var imgSrc = Ext.getCmp(imgID).getSrc();",
                    "    if(imgSrc==='resources/images/camera.png'){",
                    "        hasCamera = true;",
                    "    }",
                    "}",
                    "console.log(hasCamera);",
                    "if(Ext.getCmp(ImgID)){",
                    "    if(hasCamera){",
                    "        Ext.getCmp(ImgID).setSrc('resources/images/notPhoto.png');",
                    "        Ext.getCmp(ImgID).setItemId();",
                    "    }else{",
                    "        Ext.getCmp(ImgID).setSrc('resources/images/camera.png');",
                    "        Ext.getCmp(ImgID).setItemId(fcname);",
                    "    }",
                    "",
                    "",
                    "    //冒泡排序",
                    "for(var j=1;j<7;j++){",
                    "    for(var z=j+1;z<7;z++){",
                    "        var imgID2 = NextImgId+j;",
                    "        var imgSrc2 = Ext.getCmp(imgID2).getSrc();",
                    "        console.log(imgSrc2);",
                    "        if(imgSrc2!=='resources/images/camera.png' && imgSrc2!=='resources/images/notPhoto.png'){",
                    "            continue;",
                    "        }else{",
                    "            var imgID3 = NextImgId+z;",
                    "            var imgSrc3 = Ext.getCmp(imgID3).getSrc();",
                    "            if(imgSrc3!=='resources/images/camera.png' && imgSrc3!=='resources/images/notPhoto.png'){",
                    "                Ext.getCmp(imgID2).setSrc(imgSrc3);",
                    "                Ext.getCmp(imgID2).setItemId(fcname2);",
                    "                Ext.getCmp(imgID3).setSrc(imgSrc2);",
                    "                Ext.getCmp(imgID3).setItemId();",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "        //冒泡排序",
                    "for(var j=1;j<7;j++){",
                    "    for(var z=j+1;z<7;z++){",
                    "        var imgID2 = NextImgId+j;",
                    "        var imgSrc2 = Ext.getCmp(imgID2).getSrc();",
                    "        console.log(imgSrc2);",
                    "        if(imgSrc2!=='resources/images/camera.png' && imgSrc2!=='resources/images/notPhoto.png'){",
                    "            continue;",
                    "        }else{",
                    "            var imgID3 = NextImgId+z;",
                    "            var imgSrc3 = Ext.getCmp(imgID3).getSrc();",
                    "            if(imgSrc3==='resources/images/camera.png'){",
                    "                Ext.getCmp(imgID2).setSrc(imgSrc3);",
                    "                Ext.getCmp(imgID2).setItemId(fcname);",
                    "                Ext.getCmp(imgID3).setSrc(imgSrc2);",
                    "                Ext.getCmp(imgID3).setItemId();",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "viewUtil.goLast();"
                ],
                "name": "tap"
            },
            "name": "onFaultPhoto_BtnDelTap",
            "designerId": "ad56553e-425f-4768-95ba-39cf2e497789"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "image#EnFaultAccept_photoX",
                "designer|targetType": "Ext.Img",
                "fn": "onEnFaultAccept_photoXTap",
                "implHandler": [
                    " //点击图片时进入另一页面显示图片",
                    "        console.log('----ImgID----');",
                    "        var ImgID = image.getId();",
                    "        console.log(ImgID);",
                    "        console.log('----ImgID----');",
                    "        viewUtil.goNext('Engineer.EngFaultPhoto',{ImgID:ImgID,flag:'Y',NextImgId:'EngFaultAccept_photo_',fcname:'EngFaultAccept_camera'});"
                ],
                "name": "tap"
            },
            "name": "onEnFaultAccept_photoXTap",
            "designerId": "9c5acee9-0460-41b8-b37c-c2bb4d5d1d06"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#source_camear",
                "designer|targetType": "Ext.Button",
                "fn": "onsource_camearTap",
                "implHandler": [
                    "Ext.getCmp('camera_show').hide();",
                    "console.log('-----进入相机');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        for(var i=1;i<7;i++){",
                    "            var ImgID = 'EngFaultAccept_photo_'+i;",
                    "            var Img = Ext.getCmp(ImgID);",
                    "            var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "            if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngFaultAccept_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngFaultAccept_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngFaultAccept_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                                NextImg.setItemId('EngFaultAccept_camera');",
                    "                                NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "            }",
                    "        }",
                    "    },//回调函数",
                    "    source:'CAMEAR',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onsource_camearTap",
            "designerId": "9a107e75-4363-4a40-bc1c-de9923dc04b6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#source_album",
                "designer|targetType": "Ext.Button",
                "fn": "onsource_albumTap",
                "implHandler": [
                    "Ext.getCmp('camera_show').hide();",
                    "console.log('-----进入相册');",
                    "var parm = {",
                    "    callback :function(filename){",
                    "        for(var i=1;i<7;i++){",
                    "            var ImgID = 'EngFaultAccept_photo_'+i;",
                    "            var Img = Ext.getCmp(ImgID);",
                    "            var ImgSrc = Ext.getCmp(ImgID).getSrc();",
                    "",
                    "            if(filename!==''){",
                    "                if(ImgSrc==='resources/images/camera.png'||ImgSrc==='resources/images/notPhoto.png'){",
                    "                    Img.setSrc(filename);",
                    "                    Img.setItemId('EngFaultAccept_photo');",
                    "",
                    "                    if(i!==6){",
                    "                        var z = i+1;",
                    "                        var NextImgID = 'EngFaultAccept_photo_'+z;",
                    "                        console.log(NextImgID);",
                    "                        var NextImg = Ext.getCmp(NextImgID);",
                    "                        var NextImgSrc = Ext.getCmp(NextImgID).getSrc();",
                    "                        if(NextImgSrc=='resources/images/notPhoto.png' ){",
                    "                            var IMGSHOW = true;",
                    "                            for(var j=1;j<7;j++){",
                    "                                var PID = 'EngFaultAccept_photo_'+j;",
                    "                                var P = Ext.getCmp(PID);",
                    "                                var PSrc = Ext.getCmp(PID).getSrc();",
                    "                                if(PSrc==='resources/images/camera.png'){",
                    "                                    IMGSHOW = false;",
                    "                                }",
                    "",
                    "                            }",
                    "                            if(IMGSHOW){",
                    "                                NextImg.setItemId('EngFaultAccept_camera');",
                    "                                NextImg.setSrc('resources/images/camera.png');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "",
                    "                    return;",
                    "                }",
                    "            }",
                    "        }",
                    "    },//回调函数",
                    "    source:'ALBUM',// 相机或相册，CAMEAR/ALBUM",
                    "    direction:'FRONT',// 前镜头或后镜头，FRONT/BACK",
                    "    width:640,\t//width",
                    "    height:640 // height",
                    "};",
                    "phone.takePhoto(parm);"
                ],
                "name": "tap"
            },
            "name": "onsource_albumTap",
            "designerId": "8f1e8189-d643-4f3d-9011-e2d391ae8b74"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "e",
                    "target",
                    "options",
                    "eOpts"
                ],
                "fn": "onFaultPhotoSwipe",
                "implHandler": [
                    "var Img_Now = Ext.getCmp('EngFaultPhoto_ImgID').getValue();",
                    "var Img_Now_IdStr = Img_Now.substring(0,Img_Now.length-2);",
                    "var Img_Now_IdNum = Img_Now.split('_')[2];",
                    "",
                    "",
                    "var Img_New_Src = '';",
                    "",
                    "if (e.direction === 'left' && e.distance >= 20) {",
                    "    if(Img_Now_IdNum=='6'){",
                    "        console.log('11');",
                    "        Ext.toast('没有下一张照片!');",
                    "    }else{",
                    "        var Img_ID = Number(Img_Now_IdNum)+1;",
                    "        for(var i=Img_ID;i<7;){",
                    "            var Img_New = Ext.getCmp(Img_Now_IdStr+'_'+Img_ID);",
                    "            if(Img_New){",
                    "                var Img_Src = Img_New.getSrc();",
                    "                if(Img_Src!=='resources/images/camera.png' && Img_Src!=='resources/images/notPhoto.png'){",
                    "                    Img_New_Src = Img_Src;",
                    "                    break;",
                    "                }else{",
                    "                    i++;",
                    "                }",
                    "            }else{",
                    "                i++;",
                    "            }",
                    "        }",
                    "        ",
                    "        if(Img_New_Src!==''){",
                    "            Ext.getCmp('EngFaultPhoto_show').setSrc(Img_New_Src);",
                    "            Ext.getCmp('EngFaultPhoto_ImgID').setValue(Img_Now_IdStr+'_'+Img_ID);",
                    "        }else{",
                    "            Ext.toast('没有下一张照片!');",
                    "        }",
                    "        ",
                    "    }",
                    "    ",
                    "    console.log('move left');",
                    "} else if (e.direction === 'right' && e.distance >= 20) {",
                    "    if(Img_Now_IdNum=='1'){",
                    "        Ext.toast('没有上一张照片!');",
                    "    }else{",
                    "        var Img_ID = Img_Now_IdNum-1;",
                    "        for(var i=Img_ID;i>0;){",
                    "            var Img_New = Ext.getCmp(Img_Now_IdStr+'_'+Img_ID);",
                    "            if(Img_New){",
                    "                var Img_Src = Img_New.getSrc();",
                    "                if(Img_Src!=='resources/images/camera.png' && Img_Src!=='resources/images/notPhoto.png'){",
                    "                    Img_New_Src = Img_Src;",
                    "                    break;",
                    "                }else{",
                    "                    i--;",
                    "                }",
                    "            }else{",
                    "                i--;",
                    "            }",
                    "        }",
                    "        ",
                    "        if(Img_New_Src!==''){",
                    "            Ext.getCmp('EngFaultPhoto_show').setSrc(Img_New_Src);",
                    "            Ext.getCmp('EngFaultPhoto_ImgID').setValue(Img_Now_IdStr+'_'+Img_ID);",
                    "        }else{",
                    "            Ext.toast('没有上一张照片!');",
                    "        }",
                    "        ",
                    "    }",
                    "    ",
                    "    console.log('move right');",
                    "}",
                    ""
                ]
            },
            "name": "onFaultPhotoSwipe",
            "designerId": "7f541acd-64e2-491f-84a7-1dbedce6fb6b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#SxReport_ListParts",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onSxReport_ListPartsTap",
                "implHandler": [
                    "viewUtil.goNext('Engineer.EngFault_Parts',{record:record,index:index});"
                ],
                "name": "itemtap"
            },
            "name": "onSxReport_ListPartsTap",
            "designerId": "9901cf38-38b5-4337-a2e6-16cb3fea79cc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#EngFault_Parts",
                "designer|targetType": "Ext.Panel",
                "fn": "onEngFault_PartsInitialize",
                "implHandler": [
                    "var taskrecord = component.initialConfig.parm.record;",
                    "var index = component.initialConfig.parm.index;",
                    "console.log(index+'____');",
                    "",
                    "if(taskrecord){",
                    "    Ext.getCmp('form_sxreport_parts').setRecord(taskrecord);",
                    "}",
                    "if(index!==undefined){",
                    "    Ext.getCmp('sxreportpart_index').setValue(index);",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onEngFault_PartsInitialize",
            "designerId": "9f0fc837-9959-4322-83e5-b60e85a45237"
        }
    ]
}